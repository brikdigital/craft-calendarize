{"version":3,"file":"app-DXUyqRr0.js","names":["format","locale","to","from","now","sign","token","ordinal","i","diff","units","localeData","week","weekdays","hours","minutes","tokens","meridiem","years","months","weeks","days","seconds","milliseconds","offset","thresholds","forms","moment","onInit","onInit","node","ListSwitchInit","IfInit","MonthSelectInit","momentSetLocale","window"],"sources":["../../../../../buildchain/src/js/modules/if.js","../../../../../buildchain/node_modules/moment/min/moment-with-locales.js","../../../../../buildchain/src/js/util/helpers.js","../../../../../buildchain/src/js/modules/month-select.js","../../../../../buildchain/src/js/util/create-observer.js","../../../../../buildchain/src/js/modules/light-switch.js","../../../../../buildchain/src/js/modules/exceptions.js","../../../../../buildchain/src/js/main.js"],"sourcesContent":["\nexport default {};\nexport function onInit(context) {\n    context.querySelectorAll('[data-if]').forEach((node) => {\n        const selector = node.getAttribute('data-if');\n        const operator = node.getAttribute('data-if-value');\n        const or = node.getAttribute('data-or-value') || operator;\n        const trigger = context.querySelector(`#${selector}`);\n\n        const initialValue = trigger.value || \"0\";\n\n        if (initialValue != operator) {\n            node.classList.add('hidden');\n            if (or && (initialValue != or)) {\n                node.classList.add('hidden');\n            }\n        }\n\n        trigger.addEventListener('change', (e) => {\n            const newValue = e.target.value;\n            if (newValue == operator || newValue == or) {\n                node.classList.remove('hidden');\n            } else {\n                node.classList.add('hidden');\n            }\n        })\n    });\n}",";(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        var flags = null,\n            parsedParts = false,\n            isNowValid = m._d && !isNaN(m._d.getTime());\n        if (isNowValid) {\n            flags = getParsingFlags(m);\n            parsedParts = some.call(flags.parsedDateParts, function (i) {\n                return i != null;\n            });\n            isNowValid =\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidEra &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.weekdayMismatch &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated &&\n                (!flags.meridiem || (flags.meridiem && parsedParts));\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n        }\n        if (Object.isFrozen == null || !Object.isFrozen(m)) {\n            m._isValid = isNowValid;\n        } else {\n            return isNowValid;\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {\n        D: 'date',\n        dates: 'date',\n        date: 'date',\n        d: 'day',\n        days: 'day',\n        day: 'day',\n        e: 'weekday',\n        weekdays: 'weekday',\n        weekday: 'weekday',\n        E: 'isoWeekday',\n        isoweekdays: 'isoWeekday',\n        isoweekday: 'isoWeekday',\n        DDD: 'dayOfYear',\n        dayofyears: 'dayOfYear',\n        dayofyear: 'dayOfYear',\n        h: 'hour',\n        hours: 'hour',\n        hour: 'hour',\n        ms: 'millisecond',\n        milliseconds: 'millisecond',\n        millisecond: 'millisecond',\n        m: 'minute',\n        minutes: 'minute',\n        minute: 'minute',\n        M: 'month',\n        months: 'month',\n        month: 'month',\n        Q: 'quarter',\n        quarters: 'quarter',\n        quarter: 'quarter',\n        s: 'second',\n        seconds: 'second',\n        second: 'second',\n        gg: 'weekYear',\n        weekyears: 'weekYear',\n        weekyear: 'weekYear',\n        GG: 'isoWeekYear',\n        isoweekyears: 'isoWeekYear',\n        isoweekyear: 'isoWeekYear',\n        w: 'week',\n        weeks: 'week',\n        week: 'week',\n        W: 'isoWeek',\n        isoweeks: 'isoWeek',\n        isoweek: 'isoWeek',\n        y: 'year',\n        years: 'year',\n        year: 'year',\n    };\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {\n        date: 9,\n        day: 11,\n        weekday: 11,\n        isoWeekday: 11,\n        dayOfYear: 4,\n        hour: 13,\n        millisecond: 16,\n        minute: 14,\n        month: 8,\n        quarter: 7,\n        second: 15,\n        weekYear: 1,\n        isoWeekYear: 1,\n        week: 5,\n        isoWeek: 5,\n        year: 1,\n    };\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        match1to2NoLeadingZero = /^[1-9]\\d?/, //         1-99\n        match1to2HasZero = /^([1-9]\\d|\\d)/, //           0-99\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        if (!mom.isValid()) {\n            return NaN;\n        }\n\n        var d = mom._d,\n            isUTC = mom._isUTC;\n\n        switch (unit) {\n            case 'Milliseconds':\n                return isUTC ? d.getUTCMilliseconds() : d.getMilliseconds();\n            case 'Seconds':\n                return isUTC ? d.getUTCSeconds() : d.getSeconds();\n            case 'Minutes':\n                return isUTC ? d.getUTCMinutes() : d.getMinutes();\n            case 'Hours':\n                return isUTC ? d.getUTCHours() : d.getHours();\n            case 'Date':\n                return isUTC ? d.getUTCDate() : d.getDate();\n            case 'Day':\n                return isUTC ? d.getUTCDay() : d.getDay();\n            case 'Month':\n                return isUTC ? d.getUTCMonth() : d.getMonth();\n            case 'FullYear':\n                return isUTC ? d.getUTCFullYear() : d.getFullYear();\n            default:\n                return NaN; // Just in case\n        }\n    }\n\n    function set$1(mom, unit, value) {\n        var d, isUTC, year, month, date;\n\n        if (!mom.isValid() || isNaN(value)) {\n            return;\n        }\n\n        d = mom._d;\n        isUTC = mom._isUTC;\n\n        switch (unit) {\n            case 'Milliseconds':\n                return void (isUTC\n                    ? d.setUTCMilliseconds(value)\n                    : d.setMilliseconds(value));\n            case 'Seconds':\n                return void (isUTC ? d.setUTCSeconds(value) : d.setSeconds(value));\n            case 'Minutes':\n                return void (isUTC ? d.setUTCMinutes(value) : d.setMinutes(value));\n            case 'Hours':\n                return void (isUTC ? d.setUTCHours(value) : d.setHours(value));\n            case 'Date':\n                return void (isUTC ? d.setUTCDate(value) : d.setDate(value));\n            // case 'Day': // Not real\n            //    return void (isUTC ? d.setUTCDay(value) : d.setDay(value));\n            // case 'Month': // Not used because we need to pass two variables\n            //     return void (isUTC ? d.setUTCMonth(value) : d.setMonth(value));\n            case 'FullYear':\n                break; // See below ...\n            default:\n                return; // Just in case\n        }\n\n        year = value;\n        month = mom.month();\n        date = mom.date();\n        date = date === 29 && month === 1 && !isLeapYear(year) ? 28 : date;\n        void (isUTC\n            ? d.setUTCFullYear(year, month, date)\n            : d.setFullYear(year, month, date));\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // PARSING\n\n    addRegexToken('M', match1to2, match1to2NoLeadingZero);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        var month = value,\n            date = mom.date();\n\n        date = date < 29 ? date : Math.min(date, daysInMonth(mom.year(), month));\n        void (mom._isUTC\n            ? mom._d.setUTCMonth(month, date)\n            : mom._d.setMonth(month, date));\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            shortP,\n            longP;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortP = regexEscape(this.monthsShort(mom, ''));\n            longP = regexEscape(this.months(mom, ''));\n            shortPieces.push(shortP);\n            longPieces.push(longP);\n            mixedPieces.push(longP);\n            mixedPieces.push(shortP);\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // PARSING\n\n    addRegexToken('w', match1to2, match1to2NoLeadingZero);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2, match1to2NoLeadingZero);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n              ? weekdays[m.day()]\n              : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n              ? this._weekdaysShort[m.day()]\n              : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n              ? this._weekdaysMin[m.day()]\n              : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        var day = get(this, 'Day');\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2, match1to2HasZero);\n    addRegexToken('h', match1to2, match1to2NoLeadingZero);\n    addRegexToken('k', match1to2, match1to2NoLeadingZero);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        // Ensure name is available and function returns boolean\n        return !!(name && name.match('^[^/\\\\\\\\]*$'));\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                      ? DATE\n                      : a[HOUR] < 0 ||\n                          a[HOUR] > 24 ||\n                          (a[HOUR] === 24 &&\n                              (a[MINUTE] !== 0 ||\n                                  a[SECOND] !== 0 ||\n                                  a[MILLISECOND] !== 0))\n                        ? HOUR\n                        : a[MINUTE] < 0 || a[MINUTE] > 59\n                          ? MINUTE\n                          : a[SECOND] < 0 || a[SECOND] > 59\n                            ? SECOND\n                            : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                              ? MILLISECOND\n                              : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n              ? 'lastWeek'\n              : diff < 0\n                ? 'lastDay'\n                : diff < 1\n                  ? 'sameDay'\n                  : diff < 2\n                    ? 'nextDay'\n                    : diff < 7\n                      ? 'nextWeek'\n                      : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            erasName,\n            erasAbbr,\n            erasNarrow,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            erasName = regexEscape(eras[i].name);\n            erasAbbr = regexEscape(eras[i].abbr);\n            erasNarrow = regexEscape(eras[i].narrow);\n\n            namePieces.push(erasName);\n            abbrPieces.push(erasAbbr);\n            narrowPieces.push(erasNarrow);\n            mixedPieces.push(erasName);\n            mixedPieces.push(erasAbbr);\n            mixedPieces.push(erasNarrow);\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday() + this.localeData()._week.dow,\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // PARSING\n\n    addRegexToken('D', match1to2, match1to2NoLeadingZero);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // PARSING\n\n    addRegexToken('m', match1to2, match1to2HasZero);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // PARSING\n\n    addRegexToken('s', match1to2, match1to2HasZero);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                          ? 'st'\n                          : b === 2\n                            ? 'nd'\n                            : b === 3\n                              ? 'rd'\n                              : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y'),\n        valueOf$1 = asMilliseconds;\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.30.1';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('af', {\n        months: 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),\n        weekdays: 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split(\n            '_'\n        ),\n        weekdaysShort: 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),\n        weekdaysMin: 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),\n        meridiemParse: /vm|nm/i,\n        isPM: function (input) {\n            return /^nm$/i.test(input);\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'vm' : 'VM';\n            } else {\n                return isLower ? 'nm' : 'NM';\n            }\n        },\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Vandag om] LT',\n            nextDay: '[Môre om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[Gister om] LT',\n            lastWeek: '[Laas] dddd [om] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'oor %s',\n            past: '%s gelede',\n            s: \"'n paar sekondes\",\n            ss: '%d sekondes',\n            m: \"'n minuut\",\n            mm: '%d minute',\n            h: \"'n uur\",\n            hh: '%d ure',\n            d: \"'n dag\",\n            dd: '%d dae',\n            M: \"'n maand\",\n            MM: '%d maande',\n            y: \"'n jaar\",\n            yy: '%d jaar',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal: function (number) {\n            return (\n                number +\n                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')\n            ); // Thanks to Joris Röling : https://github.com/jjupiter\n        },\n        week: {\n            dow: 1, // Maandag is die eerste dag van die week.\n            doy: 4, // Die week wat die 4de Januarie bevat is die eerste week van die jaar.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var pluralForm = function (n) {\n            return n === 0\n                ? 0\n                : n === 1\n                  ? 1\n                  : n === 2\n                    ? 2\n                    : n % 100 >= 3 && n % 100 <= 10\n                      ? 3\n                      : n % 100 >= 11\n                        ? 4\n                        : 5;\n        },\n        plurals = {\n            s: [\n                'أقل من ثانية',\n                'ثانية واحدة',\n                ['ثانيتان', 'ثانيتين'],\n                '%d ثوان',\n                '%d ثانية',\n                '%d ثانية',\n            ],\n            m: [\n                'أقل من دقيقة',\n                'دقيقة واحدة',\n                ['دقيقتان', 'دقيقتين'],\n                '%d دقائق',\n                '%d دقيقة',\n                '%d دقيقة',\n            ],\n            h: [\n                'أقل من ساعة',\n                'ساعة واحدة',\n                ['ساعتان', 'ساعتين'],\n                '%d ساعات',\n                '%d ساعة',\n                '%d ساعة',\n            ],\n            d: [\n                'أقل من يوم',\n                'يوم واحد',\n                ['يومان', 'يومين'],\n                '%d أيام',\n                '%d يومًا',\n                '%d يوم',\n            ],\n            M: [\n                'أقل من شهر',\n                'شهر واحد',\n                ['شهران', 'شهرين'],\n                '%d أشهر',\n                '%d شهرا',\n                '%d شهر',\n            ],\n            y: [\n                'أقل من عام',\n                'عام واحد',\n                ['عامان', 'عامين'],\n                '%d أعوام',\n                '%d عامًا',\n                '%d عام',\n            ],\n        },\n        pluralize = function (u) {\n            return function (number, withoutSuffix, string, isFuture) {\n                var f = pluralForm(number),\n                    str = plurals[u][pluralForm(number)];\n                if (f === 2) {\n                    str = str[withoutSuffix ? 0 : 1];\n                }\n                return str.replace(/%d/i, number);\n            };\n        },\n        months$1 = [\n            'جانفي',\n            'فيفري',\n            'مارس',\n            'أفريل',\n            'ماي',\n            'جوان',\n            'جويلية',\n            'أوت',\n            'سبتمبر',\n            'أكتوبر',\n            'نوفمبر',\n            'ديسمبر',\n        ];\n\n    hooks.defineLocale('ar-dz', {\n        months: months$1,\n        monthsShort: months$1,\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'D/\\u200FM/\\u200FYYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ص|م/,\n        isPM: function (input) {\n            return 'م' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar: {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'بعد %s',\n            past: 'منذ %s',\n            s: pluralize('s'),\n            ss: pluralize('s'),\n            m: pluralize('m'),\n            mm: pluralize('m'),\n            h: pluralize('h'),\n            hh: pluralize('h'),\n            d: pluralize('d'),\n            dd: pluralize('d'),\n            M: pluralize('M'),\n            MM: pluralize('M'),\n            y: pluralize('y'),\n            yy: pluralize('y'),\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ar-kw', {\n        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(\n            '_'\n        ),\n        monthsShort:\n            'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(\n                '_'\n            ),\n        weekdays: 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss: '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات',\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap = {\n            1: '1',\n            2: '2',\n            3: '3',\n            4: '4',\n            5: '5',\n            6: '6',\n            7: '7',\n            8: '8',\n            9: '9',\n            0: '0',\n        },\n        pluralForm$1 = function (n) {\n            return n === 0\n                ? 0\n                : n === 1\n                  ? 1\n                  : n === 2\n                    ? 2\n                    : n % 100 >= 3 && n % 100 <= 10\n                      ? 3\n                      : n % 100 >= 11\n                        ? 4\n                        : 5;\n        },\n        plurals$1 = {\n            s: [\n                'أقل من ثانية',\n                'ثانية واحدة',\n                ['ثانيتان', 'ثانيتين'],\n                '%d ثوان',\n                '%d ثانية',\n                '%d ثانية',\n            ],\n            m: [\n                'أقل من دقيقة',\n                'دقيقة واحدة',\n                ['دقيقتان', 'دقيقتين'],\n                '%d دقائق',\n                '%d دقيقة',\n                '%d دقيقة',\n            ],\n            h: [\n                'أقل من ساعة',\n                'ساعة واحدة',\n                ['ساعتان', 'ساعتين'],\n                '%d ساعات',\n                '%d ساعة',\n                '%d ساعة',\n            ],\n            d: [\n                'أقل من يوم',\n                'يوم واحد',\n                ['يومان', 'يومين'],\n                '%d أيام',\n                '%d يومًا',\n                '%d يوم',\n            ],\n            M: [\n                'أقل من شهر',\n                'شهر واحد',\n                ['شهران', 'شهرين'],\n                '%d أشهر',\n                '%d شهرا',\n                '%d شهر',\n            ],\n            y: [\n                'أقل من عام',\n                'عام واحد',\n                ['عامان', 'عامين'],\n                '%d أعوام',\n                '%d عامًا',\n                '%d عام',\n            ],\n        },\n        pluralize$1 = function (u) {\n            return function (number, withoutSuffix, string, isFuture) {\n                var f = pluralForm$1(number),\n                    str = plurals$1[u][pluralForm$1(number)];\n                if (f === 2) {\n                    str = str[withoutSuffix ? 0 : 1];\n                }\n                return str.replace(/%d/i, number);\n            };\n        },\n        months$2 = [\n            'يناير',\n            'فبراير',\n            'مارس',\n            'أبريل',\n            'مايو',\n            'يونيو',\n            'يوليو',\n            'أغسطس',\n            'سبتمبر',\n            'أكتوبر',\n            'نوفمبر',\n            'ديسمبر',\n        ];\n\n    hooks.defineLocale('ar-ly', {\n        months: months$2,\n        monthsShort: months$2,\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'D/\\u200FM/\\u200FYYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ص|م/,\n        isPM: function (input) {\n            return 'م' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar: {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'بعد %s',\n            past: 'منذ %s',\n            s: pluralize$1('s'),\n            ss: pluralize$1('s'),\n            m: pluralize$1('m'),\n            mm: pluralize$1('m'),\n            h: pluralize$1('h'),\n            hh: pluralize$1('h'),\n            d: pluralize$1('d'),\n            dd: pluralize$1('d'),\n            M: pluralize$1('M'),\n            MM: pluralize$1('M'),\n            y: pluralize$1('y'),\n            yy: pluralize$1('y'),\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap[match];\n                })\n                .replace(/,/g, '،');\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ar-ma', {\n        months: 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(\n            '_'\n        ),\n        monthsShort:\n            'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split(\n                '_'\n            ),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss: '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$1 = {\n            1: '١',\n            2: '٢',\n            3: '٣',\n            4: '٤',\n            5: '٥',\n            6: '٦',\n            7: '٧',\n            8: '٨',\n            9: '٩',\n            0: '٠',\n        },\n        numberMap = {\n            '١': '1',\n            '٢': '2',\n            '٣': '3',\n            '٤': '4',\n            '٥': '5',\n            '٦': '6',\n            '٧': '7',\n            '٨': '8',\n            '٩': '9',\n            '٠': '0',\n        };\n\n    hooks.defineLocale('ar-ps', {\n        months: 'كانون الثاني_شباط_آذار_نيسان_أيّار_حزيران_تمّوز_آب_أيلول_تشري الأوّل_تشرين الثاني_كانون الأوّل'.split(\n            '_'\n        ),\n        monthsShort:\n            'ك٢_شباط_آذار_نيسان_أيّار_حزيران_تمّوز_آب_أيلول_ت١_ت٢_ك١'.split('_'),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ص|م/,\n        isPM: function (input) {\n            return 'م' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss: '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات',\n        },\n        preparse: function (string) {\n            return string\n                .replace(/[٣٤٥٦٧٨٩٠]/g, function (match) {\n                    return numberMap[match];\n                })\n                .split('') // reversed since negative lookbehind not supported everywhere\n                .reverse()\n                .join('')\n                .replace(/[١٢](?![\\u062a\\u0643])/g, function (match) {\n                    return numberMap[match];\n                })\n                .split('')\n                .reverse()\n                .join('')\n                .replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap$1[match];\n                })\n                .replace(/,/g, '،');\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$2 = {\n            1: '١',\n            2: '٢',\n            3: '٣',\n            4: '٤',\n            5: '٥',\n            6: '٦',\n            7: '٧',\n            8: '٨',\n            9: '٩',\n            0: '٠',\n        },\n        numberMap$1 = {\n            '١': '1',\n            '٢': '2',\n            '٣': '3',\n            '٤': '4',\n            '٥': '5',\n            '٦': '6',\n            '٧': '7',\n            '٨': '8',\n            '٩': '9',\n            '٠': '0',\n        };\n\n    hooks.defineLocale('ar-sa', {\n        months: 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(\n            '_'\n        ),\n        monthsShort:\n            'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(\n                '_'\n            ),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ص|م/,\n        isPM: function (input) {\n            return 'م' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss: '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات',\n        },\n        preparse: function (string) {\n            return string\n                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                    return numberMap$1[match];\n                })\n                .replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap$2[match];\n                })\n                .replace(/,/g, '،');\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ar-tn', {\n        months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(\n            '_'\n        ),\n        monthsShort:\n            'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split(\n                '_'\n            ),\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[اليوم على الساعة] LT',\n            nextDay: '[غدا على الساعة] LT',\n            nextWeek: 'dddd [على الساعة] LT',\n            lastDay: '[أمس على الساعة] LT',\n            lastWeek: 'dddd [على الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'في %s',\n            past: 'منذ %s',\n            s: 'ثوان',\n            ss: '%d ثانية',\n            m: 'دقيقة',\n            mm: '%d دقائق',\n            h: 'ساعة',\n            hh: '%d ساعات',\n            d: 'يوم',\n            dd: '%d أيام',\n            M: 'شهر',\n            MM: '%d أشهر',\n            y: 'سنة',\n            yy: '%d سنوات',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$3 = {\n            1: '١',\n            2: '٢',\n            3: '٣',\n            4: '٤',\n            5: '٥',\n            6: '٦',\n            7: '٧',\n            8: '٨',\n            9: '٩',\n            0: '٠',\n        },\n        numberMap$2 = {\n            '١': '1',\n            '٢': '2',\n            '٣': '3',\n            '٤': '4',\n            '٥': '5',\n            '٦': '6',\n            '٧': '7',\n            '٨': '8',\n            '٩': '9',\n            '٠': '0',\n        },\n        pluralForm$2 = function (n) {\n            return n === 0\n                ? 0\n                : n === 1\n                  ? 1\n                  : n === 2\n                    ? 2\n                    : n % 100 >= 3 && n % 100 <= 10\n                      ? 3\n                      : n % 100 >= 11\n                        ? 4\n                        : 5;\n        },\n        plurals$2 = {\n            s: [\n                'أقل من ثانية',\n                'ثانية واحدة',\n                ['ثانيتان', 'ثانيتين'],\n                '%d ثوان',\n                '%d ثانية',\n                '%d ثانية',\n            ],\n            m: [\n                'أقل من دقيقة',\n                'دقيقة واحدة',\n                ['دقيقتان', 'دقيقتين'],\n                '%d دقائق',\n                '%d دقيقة',\n                '%d دقيقة',\n            ],\n            h: [\n                'أقل من ساعة',\n                'ساعة واحدة',\n                ['ساعتان', 'ساعتين'],\n                '%d ساعات',\n                '%d ساعة',\n                '%d ساعة',\n            ],\n            d: [\n                'أقل من يوم',\n                'يوم واحد',\n                ['يومان', 'يومين'],\n                '%d أيام',\n                '%d يومًا',\n                '%d يوم',\n            ],\n            M: [\n                'أقل من شهر',\n                'شهر واحد',\n                ['شهران', 'شهرين'],\n                '%d أشهر',\n                '%d شهرا',\n                '%d شهر',\n            ],\n            y: [\n                'أقل من عام',\n                'عام واحد',\n                ['عامان', 'عامين'],\n                '%d أعوام',\n                '%d عامًا',\n                '%d عام',\n            ],\n        },\n        pluralize$2 = function (u) {\n            return function (number, withoutSuffix, string, isFuture) {\n                var f = pluralForm$2(number),\n                    str = plurals$2[u][pluralForm$2(number)];\n                if (f === 2) {\n                    str = str[withoutSuffix ? 0 : 1];\n                }\n                return str.replace(/%d/i, number);\n            };\n        },\n        months$3 = [\n            'يناير',\n            'فبراير',\n            'مارس',\n            'أبريل',\n            'مايو',\n            'يونيو',\n            'يوليو',\n            'أغسطس',\n            'سبتمبر',\n            'أكتوبر',\n            'نوفمبر',\n            'ديسمبر',\n        ];\n\n    hooks.defineLocale('ar', {\n        months: months$3,\n        monthsShort: months$3,\n        weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n        weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n        weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'D/\\u200FM/\\u200FYYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ص|م/,\n        isPM: function (input) {\n            return 'م' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ص';\n            } else {\n                return 'م';\n            }\n        },\n        calendar: {\n            sameDay: '[اليوم عند الساعة] LT',\n            nextDay: '[غدًا عند الساعة] LT',\n            nextWeek: 'dddd [عند الساعة] LT',\n            lastDay: '[أمس عند الساعة] LT',\n            lastWeek: 'dddd [عند الساعة] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'بعد %s',\n            past: 'منذ %s',\n            s: pluralize$2('s'),\n            ss: pluralize$2('s'),\n            m: pluralize$2('m'),\n            mm: pluralize$2('m'),\n            h: pluralize$2('h'),\n            hh: pluralize$2('h'),\n            d: pluralize$2('d'),\n            dd: pluralize$2('d'),\n            M: pluralize$2('M'),\n            MM: pluralize$2('M'),\n            y: pluralize$2('y'),\n            yy: pluralize$2('y'),\n        },\n        preparse: function (string) {\n            return string\n                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                    return numberMap$2[match];\n                })\n                .replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap$3[match];\n                })\n                .replace(/,/g, '،');\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes = {\n        1: '-inci',\n        5: '-inci',\n        8: '-inci',\n        70: '-inci',\n        80: '-inci',\n        2: '-nci',\n        7: '-nci',\n        20: '-nci',\n        50: '-nci',\n        3: '-üncü',\n        4: '-üncü',\n        100: '-üncü',\n        6: '-ncı',\n        9: '-uncu',\n        10: '-uncu',\n        30: '-uncu',\n        60: '-ıncı',\n        90: '-ıncı',\n    };\n\n    hooks.defineLocale('az', {\n        months: 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split(\n            '_'\n        ),\n        monthsShort: 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),\n        weekdays:\n            'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split(\n                '_'\n            ),\n        weekdaysShort: 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),\n        weekdaysMin: 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[bugün saat] LT',\n            nextDay: '[sabah saat] LT',\n            nextWeek: '[gələn həftə] dddd [saat] LT',\n            lastDay: '[dünən] LT',\n            lastWeek: '[keçən həftə] dddd [saat] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s sonra',\n            past: '%s əvvəl',\n            s: 'bir neçə saniyə',\n            ss: '%d saniyə',\n            m: 'bir dəqiqə',\n            mm: '%d dəqiqə',\n            h: 'bir saat',\n            hh: '%d saat',\n            d: 'bir gün',\n            dd: '%d gün',\n            M: 'bir ay',\n            MM: '%d ay',\n            y: 'bir il',\n            yy: '%d il',\n        },\n        meridiemParse: /gecə|səhər|gündüz|axşam/,\n        isPM: function (input) {\n            return /^(gündüz|axşam)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'gecə';\n            } else if (hour < 12) {\n                return 'səhər';\n            } else if (hour < 17) {\n                return 'gündüz';\n            } else {\n                return 'axşam';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,\n        ordinal: function (number) {\n            if (number === 0) {\n                // special case for zero\n                return number + '-ıncı';\n            }\n            var a = number % 10,\n                b = (number % 100) - a,\n                c = number >= 100 ? 100 : null;\n            return number + (suffixes[a] || suffixes[b] || suffixes[c]);\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function plural(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11\n            ? forms[0]\n            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n              ? forms[1]\n              : forms[2];\n    }\n    function relativeTimeWithPlural(number, withoutSuffix, key) {\n        var format = {\n            ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            mm: withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',\n            hh: withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',\n            dd: 'дзень_дні_дзён',\n            MM: 'месяц_месяцы_месяцаў',\n            yy: 'год_гады_гадоў',\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвіліна' : 'хвіліну';\n        } else if (key === 'h') {\n            return withoutSuffix ? 'гадзіна' : 'гадзіну';\n        } else {\n            return number + ' ' + plural(format[key], +number);\n        }\n    }\n\n    hooks.defineLocale('be', {\n        months: {\n            format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split(\n                '_'\n            ),\n            standalone:\n                'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split(\n                    '_'\n                ),\n        },\n        monthsShort:\n            'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),\n        weekdays: {\n            format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split(\n                '_'\n            ),\n            standalone:\n                'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split(\n                    '_'\n                ),\n            isFormat: /\\[ ?[Ууў] ?(?:мінулую|наступную)? ?\\] ?dddd/,\n        },\n        weekdaysShort: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        weekdaysMin: 'нд_пн_ат_ср_чц_пт_сб'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY г.',\n            LLL: 'D MMMM YYYY г., HH:mm',\n            LLLL: 'dddd, D MMMM YYYY г., HH:mm',\n        },\n        calendar: {\n            sameDay: '[Сёння ў] LT',\n            nextDay: '[Заўтра ў] LT',\n            lastDay: '[Учора ў] LT',\n            nextWeek: function () {\n                return '[У] dddd [ў] LT';\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[У мінулую] dddd [ў] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[У мінулы] dddd [ў] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'праз %s',\n            past: '%s таму',\n            s: 'некалькі секунд',\n            m: relativeTimeWithPlural,\n            mm: relativeTimeWithPlural,\n            h: relativeTimeWithPlural,\n            hh: relativeTimeWithPlural,\n            d: 'дзень',\n            dd: relativeTimeWithPlural,\n            M: 'месяц',\n            MM: relativeTimeWithPlural,\n            y: 'год',\n            yy: relativeTimeWithPlural,\n        },\n        meridiemParse: /ночы|раніцы|дня|вечара/,\n        isPM: function (input) {\n            return /^(дня|вечара)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночы';\n            } else if (hour < 12) {\n                return 'раніцы';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечара';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(і|ы|га)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return (number % 10 === 2 || number % 10 === 3) &&\n                        number % 100 !== 12 &&\n                        number % 100 !== 13\n                        ? number + '-і'\n                        : number + '-ы';\n                case 'D':\n                    return number + '-га';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('bg', {\n        months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split(\n            '_'\n        ),\n        monthsShort: 'яну_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split(\n            '_'\n        ),\n        weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'D.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY H:mm',\n            LLLL: 'dddd, D MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[Днес в] LT',\n            nextDay: '[Утре в] LT',\n            nextWeek: 'dddd [в] LT',\n            lastDay: '[Вчера в] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[Миналата] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[Миналия] dddd [в] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'след %s',\n            past: 'преди %s',\n            s: 'няколко секунди',\n            ss: '%d секунди',\n            m: 'минута',\n            mm: '%d минути',\n            h: 'час',\n            hh: '%d часа',\n            d: 'ден',\n            dd: '%d дена',\n            w: 'седмица',\n            ww: '%d седмици',\n            M: 'месец',\n            MM: '%d месеца',\n            y: 'година',\n            yy: '%d години',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal: function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('bm', {\n        months: 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split(\n            '_'\n        ),\n        monthsShort: 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),\n        weekdays: 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),\n        weekdaysShort: 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),\n        weekdaysMin: 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'MMMM [tile] D [san] YYYY',\n            LLL: 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n            LLLL: 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',\n        },\n        calendar: {\n            sameDay: '[Bi lɛrɛ] LT',\n            nextDay: '[Sini lɛrɛ] LT',\n            nextWeek: 'dddd [don lɛrɛ] LT',\n            lastDay: '[Kunu lɛrɛ] LT',\n            lastWeek: 'dddd [tɛmɛnen lɛrɛ] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s kɔnɔ',\n            past: 'a bɛ %s bɔ',\n            s: 'sanga dama dama',\n            ss: 'sekondi %d',\n            m: 'miniti kelen',\n            mm: 'miniti %d',\n            h: 'lɛrɛ kelen',\n            hh: 'lɛrɛ %d',\n            d: 'tile kelen',\n            dd: 'tile %d',\n            M: 'kalo kelen',\n            MM: 'kalo %d',\n            y: 'san kelen',\n            yy: 'san %d',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$4 = {\n            1: '১',\n            2: '২',\n            3: '৩',\n            4: '৪',\n            5: '৫',\n            6: '৬',\n            7: '৭',\n            8: '৮',\n            9: '৯',\n            0: '০',\n        },\n        numberMap$3 = {\n            '১': '1',\n            '২': '2',\n            '৩': '3',\n            '৪': '4',\n            '৫': '5',\n            '৬': '6',\n            '৭': '7',\n            '৮': '8',\n            '৯': '9',\n            '০': '0',\n        };\n\n    hooks.defineLocale('bn-bd', {\n        months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(\n            '_'\n        ),\n        monthsShort:\n            'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(\n                '_'\n            ),\n        weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(\n            '_'\n        ),\n        weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n        weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm সময়',\n            LTS: 'A h:mm:ss সময়',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm সময়',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',\n        },\n        calendar: {\n            sameDay: '[আজ] LT',\n            nextDay: '[আগামীকাল] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[গতকাল] LT',\n            lastWeek: '[গত] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s পরে',\n            past: '%s আগে',\n            s: 'কয়েক সেকেন্ড',\n            ss: '%d সেকেন্ড',\n            m: 'এক মিনিট',\n            mm: '%d মিনিট',\n            h: 'এক ঘন্টা',\n            hh: '%d ঘন্টা',\n            d: 'এক দিন',\n            dd: '%d দিন',\n            M: 'এক মাস',\n            MM: '%d মাস',\n            y: 'এক বছর',\n            yy: '%d বছর',\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap$3[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$4[match];\n            });\n        },\n\n        meridiemParse: /রাত|ভোর|সকাল|দুপুর|বিকাল|সন্ধ্যা|রাত/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'রাত') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ভোর') {\n                return hour;\n            } else if (meridiem === 'সকাল') {\n                return hour;\n            } else if (meridiem === 'দুপুর') {\n                return hour >= 3 ? hour : hour + 12;\n            } else if (meridiem === 'বিকাল') {\n                return hour + 12;\n            } else if (meridiem === 'সন্ধ্যা') {\n                return hour + 12;\n            }\n        },\n\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 6) {\n                return 'ভোর';\n            } else if (hour < 12) {\n                return 'সকাল';\n            } else if (hour < 15) {\n                return 'দুপুর';\n            } else if (hour < 18) {\n                return 'বিকাল';\n            } else if (hour < 20) {\n                return 'সন্ধ্যা';\n            } else {\n                return 'রাত';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$5 = {\n            1: '১',\n            2: '২',\n            3: '৩',\n            4: '৪',\n            5: '৫',\n            6: '৬',\n            7: '৭',\n            8: '৮',\n            9: '৯',\n            0: '০',\n        },\n        numberMap$4 = {\n            '১': '1',\n            '২': '2',\n            '৩': '3',\n            '৪': '4',\n            '৫': '5',\n            '৬': '6',\n            '৭': '7',\n            '৮': '8',\n            '৯': '9',\n            '০': '0',\n        };\n\n    hooks.defineLocale('bn', {\n        months: 'জানুয়ারি_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split(\n            '_'\n        ),\n        monthsShort:\n            'জানু_ফেব্রু_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্ট_অক্টো_নভে_ডিসে'.split(\n                '_'\n            ),\n        weekdays: 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split(\n            '_'\n        ),\n        weekdaysShort: 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),\n        weekdaysMin: 'রবি_সোম_মঙ্গল_বুধ_বৃহ_শুক্র_শনি'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm সময়',\n            LTS: 'A h:mm:ss সময়',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm সময়',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm সময়',\n        },\n        calendar: {\n            sameDay: '[আজ] LT',\n            nextDay: '[আগামীকাল] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[গতকাল] LT',\n            lastWeek: '[গত] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s পরে',\n            past: '%s আগে',\n            s: 'কয়েক সেকেন্ড',\n            ss: '%d সেকেন্ড',\n            m: 'এক মিনিট',\n            mm: '%d মিনিট',\n            h: 'এক ঘন্টা',\n            hh: '%d ঘন্টা',\n            d: 'এক দিন',\n            dd: '%d দিন',\n            M: 'এক মাস',\n            MM: '%d মাস',\n            y: 'এক বছর',\n            yy: '%d বছর',\n        },\n        preparse: function (string) {\n            return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {\n                return numberMap$4[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$5[match];\n            });\n        },\n        meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                (meridiem === 'রাত' && hour >= 4) ||\n                (meridiem === 'দুপুর' && hour < 5) ||\n                meridiem === 'বিকাল'\n            ) {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'রাত';\n            } else if (hour < 10) {\n                return 'সকাল';\n            } else if (hour < 17) {\n                return 'দুপুর';\n            } else if (hour < 20) {\n                return 'বিকাল';\n            } else {\n                return 'রাত';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$6 = {\n            1: '༡',\n            2: '༢',\n            3: '༣',\n            4: '༤',\n            5: '༥',\n            6: '༦',\n            7: '༧',\n            8: '༨',\n            9: '༩',\n            0: '༠',\n        },\n        numberMap$5 = {\n            '༡': '1',\n            '༢': '2',\n            '༣': '3',\n            '༤': '4',\n            '༥': '5',\n            '༦': '6',\n            '༧': '7',\n            '༨': '8',\n            '༩': '9',\n            '༠': '0',\n        };\n\n    hooks.defineLocale('bo', {\n        months: 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split(\n            '_'\n        ),\n        monthsShort:\n            'ཟླ་1_ཟླ་2_ཟླ་3_ཟླ་4_ཟླ་5_ཟླ་6_ཟླ་7_ཟླ་8_ཟླ་9_ཟླ་10_ཟླ་11_ཟླ་12'.split(\n                '_'\n            ),\n        monthsShortRegex: /^(ཟླ་\\d{1,2})/,\n        monthsParseExact: true,\n        weekdays:\n            'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split(\n                '_'\n            ),\n        weekdaysShort: 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split(\n            '_'\n        ),\n        weekdaysMin: 'ཉི_ཟླ_མིག_ལྷག_ཕུར_སངས_སྤེན'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm',\n        },\n        calendar: {\n            sameDay: '[དི་རིང] LT',\n            nextDay: '[སང་ཉིན] LT',\n            nextWeek: '[བདུན་ཕྲག་རྗེས་མ], LT',\n            lastDay: '[ཁ་སང] LT',\n            lastWeek: '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ལ་',\n            past: '%s སྔན་ལ',\n            s: 'ལམ་སང',\n            ss: '%d སྐར་ཆ།',\n            m: 'སྐར་མ་གཅིག',\n            mm: '%d སྐར་མ',\n            h: 'ཆུ་ཚོད་གཅིག',\n            hh: '%d ཆུ་ཚོད',\n            d: 'ཉིན་གཅིག',\n            dd: '%d ཉིན་',\n            M: 'ཟླ་བ་གཅིག',\n            MM: '%d ཟླ་བ',\n            y: 'ལོ་གཅིག',\n            yy: '%d ལོ',\n        },\n        preparse: function (string) {\n            return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {\n                return numberMap$5[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$6[match];\n            });\n        },\n        meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                (meridiem === 'མཚན་མོ' && hour >= 4) ||\n                (meridiem === 'ཉིན་གུང' && hour < 5) ||\n                meridiem === 'དགོང་དག'\n            ) {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'མཚན་མོ';\n            } else if (hour < 10) {\n                return 'ཞོགས་ཀས';\n            } else if (hour < 17) {\n                return 'ཉིན་གུང';\n            } else if (hour < 20) {\n                return 'དགོང་དག';\n            } else {\n                return 'མཚན་མོ';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function relativeTimeWithMutation(number, withoutSuffix, key) {\n        var format = {\n            mm: 'munutenn',\n            MM: 'miz',\n            dd: 'devezh',\n        };\n        return number + ' ' + mutation(format[key], number);\n    }\n    function specialMutationForYears(number) {\n        switch (lastNumber(number)) {\n            case 1:\n            case 3:\n            case 4:\n            case 5:\n            case 9:\n                return number + ' bloaz';\n            default:\n                return number + ' vloaz';\n        }\n    }\n    function lastNumber(number) {\n        if (number > 9) {\n            return lastNumber(number % 10);\n        }\n        return number;\n    }\n    function mutation(text, number) {\n        if (number === 2) {\n            return softMutation(text);\n        }\n        return text;\n    }\n    function softMutation(text) {\n        var mutationTable = {\n            m: 'v',\n            b: 'v',\n            d: 'z',\n        };\n        if (mutationTable[text.charAt(0)] === undefined) {\n            return text;\n        }\n        return mutationTable[text.charAt(0)] + text.substring(1);\n    }\n\n    var monthsParse = [\n            /^gen/i,\n            /^c[ʼ\\']hwe/i,\n            /^meu/i,\n            /^ebr/i,\n            /^mae/i,\n            /^(mez|eve)/i,\n            /^gou/i,\n            /^eos/i,\n            /^gwe/i,\n            /^her/i,\n            /^du/i,\n            /^ker/i,\n        ],\n        monthsRegex$1 =\n            /^(genver|c[ʼ\\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu|gen|c[ʼ\\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,\n        monthsStrictRegex =\n            /^(genver|c[ʼ\\']hwevrer|meurzh|ebrel|mae|mezheven|gouere|eost|gwengolo|here|du|kerzu)/i,\n        monthsShortStrictRegex =\n            /^(gen|c[ʼ\\']hwe|meu|ebr|mae|eve|gou|eos|gwe|her|du|ker)/i,\n        fullWeekdaysParse = [\n            /^sul/i,\n            /^lun/i,\n            /^meurzh/i,\n            /^merc[ʼ\\']her/i,\n            /^yaou/i,\n            /^gwener/i,\n            /^sadorn/i,\n        ],\n        shortWeekdaysParse = [\n            /^Sul/i,\n            /^Lun/i,\n            /^Meu/i,\n            /^Mer/i,\n            /^Yao/i,\n            /^Gwe/i,\n            /^Sad/i,\n        ],\n        minWeekdaysParse = [\n            /^Su/i,\n            /^Lu/i,\n            /^Me([^r]|$)/i,\n            /^Mer/i,\n            /^Ya/i,\n            /^Gw/i,\n            /^Sa/i,\n        ];\n\n    hooks.defineLocale('br', {\n        months: 'Genver_Cʼhwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split(\n            '_'\n        ),\n        monthsShort: 'Gen_Cʼhwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),\n        weekdays: 'Sul_Lun_Meurzh_Mercʼher_Yaou_Gwener_Sadorn'.split('_'),\n        weekdaysShort: 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),\n        weekdaysParse: minWeekdaysParse,\n        fullWeekdaysParse: fullWeekdaysParse,\n        shortWeekdaysParse: shortWeekdaysParse,\n        minWeekdaysParse: minWeekdaysParse,\n\n        monthsRegex: monthsRegex$1,\n        monthsShortRegex: monthsRegex$1,\n        monthsStrictRegex: monthsStrictRegex,\n        monthsShortStrictRegex: monthsShortStrictRegex,\n        monthsParse: monthsParse,\n        longMonthsParse: monthsParse,\n        shortMonthsParse: monthsParse,\n\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [a viz] MMMM YYYY',\n            LLL: 'D [a viz] MMMM YYYY HH:mm',\n            LLLL: 'dddd, D [a viz] MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Hiziv da] LT',\n            nextDay: '[Warcʼhoazh da] LT',\n            nextWeek: 'dddd [da] LT',\n            lastDay: '[Decʼh da] LT',\n            lastWeek: 'dddd [paset da] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'a-benn %s',\n            past: '%s ʼzo',\n            s: 'un nebeud segondennoù',\n            ss: '%d eilenn',\n            m: 'ur vunutenn',\n            mm: relativeTimeWithMutation,\n            h: 'un eur',\n            hh: '%d eur',\n            d: 'un devezh',\n            dd: relativeTimeWithMutation,\n            M: 'ur miz',\n            MM: relativeTimeWithMutation,\n            y: 'ur bloaz',\n            yy: specialMutationForYears,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(añ|vet)/,\n        ordinal: function (number) {\n            var output = number === 1 ? 'añ' : 'vet';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n        meridiemParse: /a.m.|g.m./, // goude merenn | a-raok merenn\n        isPM: function (token) {\n            return token === 'g.m.';\n        },\n        meridiem: function (hour, minute, isLower) {\n            return hour < 12 ? 'a.m.' : 'g.m.';\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n        switch (key) {\n            case 'm':\n                return withoutSuffix\n                    ? 'jedna minuta'\n                    : isFuture\n                      ? 'jednu minutu'\n                      : 'jedne minute';\n        }\n    }\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jedan sat';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    hooks.defineLocale('bs', {\n        months: 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay: '[jučer u] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                        return '[prošlu] dddd [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'prije %s',\n            s: 'par sekundi',\n            ss: translate,\n            m: processRelativeTime,\n            mm: translate,\n            h: translate,\n            hh: translate,\n            d: 'dan',\n            dd: translate,\n            M: 'mjesec',\n            MM: translate,\n            y: 'godinu',\n            yy: translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ca', {\n        months: {\n            standalone:\n                'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split(\n                    '_'\n                ),\n            format: \"de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre\".split(\n                '_'\n            ),\n            isFormat: /D[oD]?(\\s)+MMMM/,\n        },\n        monthsShort:\n            'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays:\n            'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split(\n                '_'\n            ),\n        weekdaysShort: 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM [de] YYYY',\n            ll: 'D MMM YYYY',\n            LLL: 'D MMMM [de] YYYY [a les] H:mm',\n            lll: 'D MMM YYYY, H:mm',\n            LLLL: 'dddd D MMMM [de] YYYY [a les] H:mm',\n            llll: 'ddd D MMM YYYY, H:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[avui a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n            },\n            nextDay: function () {\n                return '[demà a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n            },\n            lastDay: function () {\n                return '[ahir a ' + (this.hours() !== 1 ? 'les' : 'la') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [passat a ' +\n                    (this.hours() !== 1 ? 'les' : 'la') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: \"d'aquí %s\",\n            past: 'fa %s',\n            s: 'uns segons',\n            ss: '%d segons',\n            m: 'un minut',\n            mm: '%d minuts',\n            h: 'una hora',\n            hh: '%d hores',\n            d: 'un dia',\n            dd: '%d dies',\n            M: 'un mes',\n            MM: '%d mesos',\n            y: 'un any',\n            yy: '%d anys',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal: function (number, period) {\n            var output =\n                number === 1\n                    ? 'r'\n                    : number === 2\n                      ? 'n'\n                      : number === 3\n                        ? 'r'\n                        : number === 4\n                          ? 't'\n                          : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$4 = {\n            standalone:\n                'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split(\n                    '_'\n                ),\n            format: 'ledna_února_března_dubna_května_června_července_srpna_září_října_listopadu_prosince'.split(\n                '_'\n            ),\n            isFormat: /DD?[o.]?(\\[[^\\[\\]]*\\]|\\s)+MMMM/,\n        },\n        monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_'),\n        monthsParse$1 = [\n            /^led/i,\n            /^úno/i,\n            /^bře/i,\n            /^dub/i,\n            /^kvě/i,\n            /^(čvn|červen$|června)/i,\n            /^(čvc|červenec|července)/i,\n            /^srp/i,\n            /^zář/i,\n            /^říj/i,\n            /^lis/i,\n            /^pro/i,\n        ],\n        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n        monthsRegex$2 =\n            /^(leden|únor|březen|duben|květen|červenec|července|červen|června|srpen|září|říjen|listopad|prosinec|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i;\n\n    function plural$1(n) {\n        return n > 1 && n < 5 && ~~(n / 10) !== 1;\n    }\n    function translate$1(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's': // a few seconds / in a few seconds / a few seconds ago\n                return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'sekundy' : 'sekund');\n                } else {\n                    return result + 'sekundami';\n                }\n            case 'm': // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'minuty' : 'minut');\n                } else {\n                    return result + 'minutami';\n                }\n            case 'h': // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'hodiny' : 'hodin');\n                } else {\n                    return result + 'hodinami';\n                }\n            case 'd': // a day / in a day / a day ago\n                return withoutSuffix || isFuture ? 'den' : 'dnem';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'dny' : 'dní');\n                } else {\n                    return result + 'dny';\n                }\n            case 'M': // a month / in a month / a month ago\n                return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'měsíce' : 'měsíců');\n                } else {\n                    return result + 'měsíci';\n                }\n            case 'y': // a year / in a year / a year ago\n                return withoutSuffix || isFuture ? 'rok' : 'rokem';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$1(number) ? 'roky' : 'let');\n                } else {\n                    return result + 'lety';\n                }\n        }\n    }\n\n    hooks.defineLocale('cs', {\n        months: months$4,\n        monthsShort: monthsShort,\n        monthsRegex: monthsRegex$2,\n        monthsShortRegex: monthsRegex$2,\n        // NOTE: 'červen' is substring of 'červenec'; therefore 'červenec' must precede 'červen' in the regex to be fully matched.\n        // Otherwise parser matches '1. červenec' as '1. červen' + 'ec'.\n        monthsStrictRegex:\n            /^(leden|ledna|února|únor|březen|března|duben|dubna|květen|května|červenec|července|červen|června|srpen|srpna|září|říjen|října|listopadu|listopad|prosinec|prosince)/i,\n        monthsShortStrictRegex:\n            /^(led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro)/i,\n        monthsParse: monthsParse$1,\n        longMonthsParse: monthsParse$1,\n        shortMonthsParse: monthsParse$1,\n        weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n        weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n        weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd D. MMMM YYYY H:mm',\n            l: 'D. M. YYYY',\n        },\n        calendar: {\n            sameDay: '[dnes v] LT',\n            nextDay: '[zítra v] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [v] LT';\n                    case 3:\n                        return '[ve středu v] LT';\n                    case 4:\n                        return '[ve čtvrtek v] LT';\n                    case 5:\n                        return '[v pátek v] LT';\n                    case 6:\n                        return '[v sobotu v] LT';\n                }\n            },\n            lastDay: '[včera v] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulou neděli v] LT';\n                    case 1:\n                    case 2:\n                        return '[minulé] dddd [v] LT';\n                    case 3:\n                        return '[minulou středu v] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [v] LT';\n                    case 6:\n                        return '[minulou sobotu v] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'před %s',\n            s: translate$1,\n            ss: translate$1,\n            m: translate$1,\n            mm: translate$1,\n            h: translate$1,\n            hh: translate$1,\n            d: translate$1,\n            dd: translate$1,\n            M: translate$1,\n            MM: translate$1,\n            y: translate$1,\n            yy: translate$1,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('cv', {\n        months: 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split(\n            '_'\n        ),\n        monthsShort: 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),\n        weekdays:\n            'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split(\n                '_'\n            ),\n        weekdaysShort: 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),\n        weekdaysMin: 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD-MM-YYYY',\n            LL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',\n            LLL: 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n            LLLL: 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',\n        },\n        calendar: {\n            sameDay: '[Паян] LT [сехетре]',\n            nextDay: '[Ыран] LT [сехетре]',\n            lastDay: '[Ӗнер] LT [сехетре]',\n            nextWeek: '[Ҫитес] dddd LT [сехетре]',\n            lastWeek: '[Иртнӗ] dddd LT [сехетре]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: function (output) {\n                var affix = /сехет$/i.exec(output)\n                    ? 'рен'\n                    : /ҫул$/i.exec(output)\n                      ? 'тан'\n                      : 'ран';\n                return output + affix;\n            },\n            past: '%s каялла',\n            s: 'пӗр-ик ҫеккунт',\n            ss: '%d ҫеккунт',\n            m: 'пӗр минут',\n            mm: '%d минут',\n            h: 'пӗр сехет',\n            hh: '%d сехет',\n            d: 'пӗр кун',\n            dd: '%d кун',\n            M: 'пӗр уйӑх',\n            MM: '%d уйӑх',\n            y: 'пӗр ҫул',\n            yy: '%d ҫул',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-мӗш/,\n        ordinal: '%d-мӗш',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('cy', {\n        months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split(\n            '_'\n        ),\n        monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split(\n            '_'\n        ),\n        weekdays:\n            'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split(\n                '_'\n            ),\n        weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),\n        weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),\n        weekdaysParseExact: true,\n        // time formats are the same as en-gb\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Heddiw am] LT',\n            nextDay: '[Yfory am] LT',\n            nextWeek: 'dddd [am] LT',\n            lastDay: '[Ddoe am] LT',\n            lastWeek: 'dddd [diwethaf am] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'mewn %s',\n            past: '%s yn ôl',\n            s: 'ychydig eiliadau',\n            ss: '%d eiliad',\n            m: 'munud',\n            mm: '%d munud',\n            h: 'awr',\n            hh: '%d awr',\n            d: 'diwrnod',\n            dd: '%d diwrnod',\n            M: 'mis',\n            MM: '%d mis',\n            y: 'blwyddyn',\n            yy: '%d flynedd',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,\n        // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh\n        ordinal: function (number) {\n            var b = number,\n                output = '',\n                lookup = [\n                    '',\n                    'af',\n                    'il',\n                    'ydd',\n                    'ydd',\n                    'ed',\n                    'ed',\n                    'ed',\n                    'fed',\n                    'fed',\n                    'fed', // 1af to 10fed\n                    'eg',\n                    'fed',\n                    'eg',\n                    'eg',\n                    'fed',\n                    'eg',\n                    'eg',\n                    'fed',\n                    'eg',\n                    'fed', // 11eg to 20fed\n                ];\n            if (b > 20) {\n                if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {\n                    output = 'fed'; // not 30ain, 70ain or 90ain\n                } else {\n                    output = 'ain';\n                }\n            } else if (b > 0) {\n                output = lookup[b];\n            }\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('da', {\n        months: 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort: 'søn_man_tir_ons_tor_fre_lør'.split('_'),\n        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm',\n        },\n        calendar: {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'på dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[i] dddd[s kl.] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'om %s',\n            past: '%s siden',\n            s: 'få sekunder',\n            ss: '%d sekunder',\n            m: 'et minut',\n            mm: '%d minutter',\n            h: 'en time',\n            hh: '%d timer',\n            d: 'en dag',\n            dd: '%d dage',\n            M: 'en måned',\n            MM: '%d måneder',\n            y: 'et år',\n            yy: '%d år',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$1(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eine Minute', 'einer Minute'],\n            h: ['eine Stunde', 'einer Stunde'],\n            d: ['ein Tag', 'einem Tag'],\n            dd: [number + ' Tage', number + ' Tagen'],\n            w: ['eine Woche', 'einer Woche'],\n            M: ['ein Monat', 'einem Monat'],\n            MM: [number + ' Monate', number + ' Monaten'],\n            y: ['ein Jahr', 'einem Jahr'],\n            yy: [number + ' Jahre', number + ' Jahren'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('de-at', {\n        months: 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort:\n            'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact: true,\n        weekdays:\n            'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(\n                '_'\n            ),\n        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd, D. MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: 'vor %s',\n            s: 'ein paar Sekunden',\n            ss: '%d Sekunden',\n            m: processRelativeTime$1,\n            mm: '%d Minuten',\n            h: processRelativeTime$1,\n            hh: '%d Stunden',\n            d: processRelativeTime$1,\n            dd: processRelativeTime$1,\n            w: processRelativeTime$1,\n            ww: '%d Wochen',\n            M: processRelativeTime$1,\n            MM: processRelativeTime$1,\n            y: processRelativeTime$1,\n            yy: processRelativeTime$1,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$2(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eine Minute', 'einer Minute'],\n            h: ['eine Stunde', 'einer Stunde'],\n            d: ['ein Tag', 'einem Tag'],\n            dd: [number + ' Tage', number + ' Tagen'],\n            w: ['eine Woche', 'einer Woche'],\n            M: ['ein Monat', 'einem Monat'],\n            MM: [number + ' Monate', number + ' Monaten'],\n            y: ['ein Jahr', 'einem Jahr'],\n            yy: [number + ' Jahre', number + ' Jahren'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('de-ch', {\n        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort:\n            'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact: true,\n        weekdays:\n            'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(\n                '_'\n            ),\n        weekdaysShort: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd, D. MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: 'vor %s',\n            s: 'ein paar Sekunden',\n            ss: '%d Sekunden',\n            m: processRelativeTime$2,\n            mm: '%d Minuten',\n            h: processRelativeTime$2,\n            hh: '%d Stunden',\n            d: processRelativeTime$2,\n            dd: processRelativeTime$2,\n            w: processRelativeTime$2,\n            ww: '%d Wochen',\n            M: processRelativeTime$2,\n            MM: processRelativeTime$2,\n            y: processRelativeTime$2,\n            yy: processRelativeTime$2,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$3(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eine Minute', 'einer Minute'],\n            h: ['eine Stunde', 'einer Stunde'],\n            d: ['ein Tag', 'einem Tag'],\n            dd: [number + ' Tage', number + ' Tagen'],\n            w: ['eine Woche', 'einer Woche'],\n            M: ['ein Monat', 'einem Monat'],\n            MM: [number + ' Monate', number + ' Monaten'],\n            y: ['ein Jahr', 'einem Jahr'],\n            yy: [number + ' Jahre', number + ' Jahren'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('de', {\n        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort:\n            'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n        monthsParseExact: true,\n        weekdays:\n            'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(\n                '_'\n            ),\n        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY HH:mm',\n            LLLL: 'dddd, D. MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[heute um] LT [Uhr]',\n            sameElse: 'L',\n            nextDay: '[morgen um] LT [Uhr]',\n            nextWeek: 'dddd [um] LT [Uhr]',\n            lastDay: '[gestern um] LT [Uhr]',\n            lastWeek: '[letzten] dddd [um] LT [Uhr]',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: 'vor %s',\n            s: 'ein paar Sekunden',\n            ss: '%d Sekunden',\n            m: processRelativeTime$3,\n            mm: '%d Minuten',\n            h: processRelativeTime$3,\n            hh: '%d Stunden',\n            d: processRelativeTime$3,\n            dd: processRelativeTime$3,\n            w: processRelativeTime$3,\n            ww: '%d Wochen',\n            M: processRelativeTime$3,\n            MM: processRelativeTime$3,\n            y: processRelativeTime$3,\n            yy: processRelativeTime$3,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$5 = [\n            'ޖެނުއަރީ',\n            'ފެބްރުއަރީ',\n            'މާރިޗު',\n            'އޭޕްރީލު',\n            'މޭ',\n            'ޖޫން',\n            'ޖުލައި',\n            'އޯގަސްޓު',\n            'ސެޕްޓެމްބަރު',\n            'އޮކްޓޯބަރު',\n            'ނޮވެމްބަރު',\n            'ޑިސެމްބަރު',\n        ],\n        weekdays = [\n            'އާދިއްތަ',\n            'ހޯމަ',\n            'އަންގާރަ',\n            'ބުދަ',\n            'ބުރާސްފަތި',\n            'ހުކުރު',\n            'ހޮނިހިރު',\n        ];\n\n    hooks.defineLocale('dv', {\n        months: months$5,\n        monthsShort: months$5,\n        weekdays: weekdays,\n        weekdaysShort: weekdays,\n        weekdaysMin: 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'D/M/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /މކ|މފ/,\n        isPM: function (input) {\n            return 'މފ' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'މކ';\n            } else {\n                return 'މފ';\n            }\n        },\n        calendar: {\n            sameDay: '[މިއަދު] LT',\n            nextDay: '[މާދަމާ] LT',\n            nextWeek: 'dddd LT',\n            lastDay: '[އިއްޔެ] LT',\n            lastWeek: '[ފާއިތުވި] dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ތެރޭގައި %s',\n            past: 'ކުރިން %s',\n            s: 'ސިކުންތުކޮޅެއް',\n            ss: 'd% ސިކުންތު',\n            m: 'މިނިޓެއް',\n            mm: 'މިނިޓު %d',\n            h: 'ގަޑިއިރެއް',\n            hh: 'ގަޑިއިރު %d',\n            d: 'ދުވަހެއް',\n            dd: 'ދުވަސް %d',\n            M: 'މަހެއް',\n            MM: 'މަސް %d',\n            y: 'އަހަރެއް',\n            yy: 'އަހަރު %d',\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            dow: 7, // Sunday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function isFunction$1(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    hooks.defineLocale('el', {\n        monthsNominativeEl:\n            'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split(\n                '_'\n            ),\n        monthsGenitiveEl:\n            'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split(\n                '_'\n            ),\n        months: function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return this._monthsNominativeEl;\n            } else if (\n                typeof format === 'string' &&\n                /D/.test(format.substring(0, format.indexOf('MMMM')))\n            ) {\n                // if there is a day number before 'MMMM'\n                return this._monthsGenitiveEl[momentToFormat.month()];\n            } else {\n                return this._monthsNominativeEl[momentToFormat.month()];\n            }\n        },\n        monthsShort: 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),\n        weekdays: 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split(\n            '_'\n        ),\n        weekdaysShort: 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),\n        weekdaysMin: 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),\n        meridiem: function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'μμ' : 'ΜΜ';\n            } else {\n                return isLower ? 'πμ' : 'ΠΜ';\n            }\n        },\n        isPM: function (input) {\n            return (input + '').toLowerCase()[0] === 'μ';\n        },\n        meridiemParse: /[ΠΜ]\\.?Μ?\\.?/i,\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendarEl: {\n            sameDay: '[Σήμερα {}] LT',\n            nextDay: '[Αύριο {}] LT',\n            nextWeek: 'dddd [{}] LT',\n            lastDay: '[Χθες {}] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 6:\n                        return '[το προηγούμενο] dddd [{}] LT';\n                    default:\n                        return '[την προηγούμενη] dddd [{}] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        calendar: function (key, mom) {\n            var output = this._calendarEl[key],\n                hours = mom && mom.hours();\n            if (isFunction$1(output)) {\n                output = output.apply(mom);\n            }\n            return output.replace('{}', hours % 12 === 1 ? 'στη' : 'στις');\n        },\n        relativeTime: {\n            future: 'σε %s',\n            past: '%s πριν',\n            s: 'λίγα δευτερόλεπτα',\n            ss: '%d δευτερόλεπτα',\n            m: 'ένα λεπτό',\n            mm: '%d λεπτά',\n            h: 'μία ώρα',\n            hh: '%d ώρες',\n            d: 'μία μέρα',\n            dd: '%d μέρες',\n            M: 'ένας μήνας',\n            MM: '%d μήνες',\n            y: 'ένας χρόνος',\n            yy: '%d χρόνια',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}η/,\n        ordinal: '%dη',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4st is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-au', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                          ? 'st'\n                          : b === 2\n                            ? 'nd'\n                            : b === 3\n                              ? 'rd'\n                              : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-ca', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'YYYY-MM-DD',\n            LL: 'MMMM D, YYYY',\n            LLL: 'MMMM D, YYYY h:mm A',\n            LLLL: 'dddd, MMMM D, YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                          ? 'st'\n                          : b === 2\n                            ? 'nd'\n                            : b === 3\n                              ? 'rd'\n                              : 'th';\n            return number + output;\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-gb', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                          ? 'st'\n                          : b === 2\n                            ? 'nd'\n                            : b === 3\n                              ? 'rd'\n                              : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-ie', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                          ? 'st'\n                          : b === 2\n                            ? 'nd'\n                            : b === 3\n                              ? 'rd'\n                              : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-il', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                          ? 'st'\n                          : b === 2\n                            ? 'nd'\n                            : b === 3\n                              ? 'rd'\n                              : 'th';\n            return number + output;\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-in', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                          ? 'st'\n                          : b === 2\n                            ? 'nd'\n                            : b === 3\n                              ? 'rd'\n                              : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 1st is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-nz', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                          ? 'st'\n                          : b === 2\n                            ? 'nd'\n                            : b === 3\n                              ? 'rd'\n                              : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('en-sg', {\n        months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(\n            '_'\n        ),\n        weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Today at] LT',\n            nextDay: '[Tomorrow at] LT',\n            nextWeek: 'dddd [at] LT',\n            lastDay: '[Yesterday at] LT',\n            lastWeek: '[Last] dddd [at] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'in %s',\n            past: '%s ago',\n            s: 'a few seconds',\n            ss: '%d seconds',\n            m: 'a minute',\n            mm: '%d minutes',\n            h: 'an hour',\n            hh: '%d hours',\n            d: 'a day',\n            dd: '%d days',\n            M: 'a month',\n            MM: '%d months',\n            y: 'a year',\n            yy: '%d years',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                          ? 'st'\n                          : b === 2\n                            ? 'nd'\n                            : b === 3\n                              ? 'rd'\n                              : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('eo', {\n        months: 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mart_apr_maj_jun_jul_aŭg_sept_okt_nov_dec'.split('_'),\n        weekdays: 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),\n        weekdaysShort: 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),\n        weekdaysMin: 'di_lu_ma_me_ĵa_ve_sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: '[la] D[-an de] MMMM, YYYY',\n            LLL: '[la] D[-an de] MMMM, YYYY HH:mm',\n            LLLL: 'dddd[n], [la] D[-an de] MMMM, YYYY HH:mm',\n            llll: 'ddd, [la] D[-an de] MMM, YYYY HH:mm',\n        },\n        meridiemParse: /[ap]\\.t\\.m/i,\n        isPM: function (input) {\n            return input.charAt(0).toLowerCase() === 'p';\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'p.t.m.' : 'P.T.M.';\n            } else {\n                return isLower ? 'a.t.m.' : 'A.T.M.';\n            }\n        },\n        calendar: {\n            sameDay: '[Hodiaŭ je] LT',\n            nextDay: '[Morgaŭ je] LT',\n            nextWeek: 'dddd[n je] LT',\n            lastDay: '[Hieraŭ je] LT',\n            lastWeek: '[pasintan] dddd[n je] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'post %s',\n            past: 'antaŭ %s',\n            s: 'kelkaj sekundoj',\n            ss: '%d sekundoj',\n            m: 'unu minuto',\n            mm: '%d minutoj',\n            h: 'unu horo',\n            hh: '%d horoj',\n            d: 'unu tago', //ne 'diurno', ĉar estas uzita por proksimumo\n            dd: '%d tagoj',\n            M: 'unu monato',\n            MM: '%d monatoj',\n            y: 'unu jaro',\n            yy: '%d jaroj',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}a/,\n        ordinal: '%da',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot =\n            'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n                '_'\n            ),\n        monthsShort$1 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n        monthsParse$2 = [\n            /^ene/i,\n            /^feb/i,\n            /^mar/i,\n            /^abr/i,\n            /^may/i,\n            /^jun/i,\n            /^jul/i,\n            /^ago/i,\n            /^sep/i,\n            /^oct/i,\n            /^nov/i,\n            /^dic/i,\n        ],\n        monthsRegex$3 =\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es-do', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortDot;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$1[m.month()];\n            } else {\n                return monthsShortDot[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$3,\n        monthsShortRegex: monthsRegex$3,\n        monthsStrictRegex:\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex:\n            /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$2,\n        longMonthsParse: monthsParse$2,\n        shortMonthsParse: monthsParse$2,\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [pasado a la' +\n                    (this.hours() !== 1 ? 's' : '') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            w: 'una semana',\n            ww: '%d semanas',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot$1 =\n            'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n                '_'\n            ),\n        monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n        monthsParse$3 = [\n            /^ene/i,\n            /^feb/i,\n            /^mar/i,\n            /^abr/i,\n            /^may/i,\n            /^jun/i,\n            /^jul/i,\n            /^ago/i,\n            /^sep/i,\n            /^oct/i,\n            /^nov/i,\n            /^dic/i,\n        ],\n        monthsRegex$4 =\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es-mx', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortDot$1;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$2[m.month()];\n            } else {\n                return monthsShortDot$1[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$4,\n        monthsShortRegex: monthsRegex$4,\n        monthsStrictRegex:\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex:\n            /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$3,\n        longMonthsParse: monthsParse$3,\n        shortMonthsParse: monthsParse$3,\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY H:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [pasado a la' +\n                    (this.hours() !== 1 ? 's' : '') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            w: 'una semana',\n            ww: '%d semanas',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n        invalidDate: 'Fecha inválida',\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot$2 =\n            'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n                '_'\n            ),\n        monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n        monthsParse$4 = [\n            /^ene/i,\n            /^feb/i,\n            /^mar/i,\n            /^abr/i,\n            /^may/i,\n            /^jun/i,\n            /^jul/i,\n            /^ago/i,\n            /^sep/i,\n            /^oct/i,\n            /^nov/i,\n            /^dic/i,\n        ],\n        monthsRegex$5 =\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es-us', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortDot$2;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$3[m.month()];\n            } else {\n                return monthsShortDot$2[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$5,\n        monthsShortRegex: monthsRegex$5,\n        monthsStrictRegex:\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex:\n            /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$4,\n        longMonthsParse: monthsParse$4,\n        shortMonthsParse: monthsParse$4,\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'MM/DD/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY h:mm A',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [pasado a la' +\n                    (this.hours() !== 1 ? 's' : '') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            w: 'una semana',\n            ww: '%d semanas',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortDot$3 =\n            'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n                '_'\n            ),\n        monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n        monthsParse$5 = [\n            /^ene/i,\n            /^feb/i,\n            /^mar/i,\n            /^abr/i,\n            /^may/i,\n            /^jun/i,\n            /^jul/i,\n            /^ago/i,\n            /^sep/i,\n            /^oct/i,\n            /^nov/i,\n            /^dic/i,\n        ],\n        monthsRegex$6 =\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n    hooks.defineLocale('es', {\n        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortDot$3;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShort$4[m.month()];\n            } else {\n                return monthsShortDot$3[m.month()];\n            }\n        },\n        monthsRegex: monthsRegex$6,\n        monthsShortRegex: monthsRegex$6,\n        monthsStrictRegex:\n            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n        monthsShortStrictRegex:\n            /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n        monthsParse: monthsParse$5,\n        longMonthsParse: monthsParse$5,\n        shortMonthsParse: monthsParse$5,\n        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY H:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastDay: function () {\n                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[el] dddd [pasado a la' +\n                    (this.hours() !== 1 ? 's' : '') +\n                    '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'en %s',\n            past: 'hace %s',\n            s: 'unos segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'una hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            w: 'una semana',\n            ww: '%d semanas',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un año',\n            yy: '%d años',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n        invalidDate: 'Fecha inválida',\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$4(number, withoutSuffix, key, isFuture) {\n        var format = {\n            s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n            ss: [number + 'sekundi', number + 'sekundit'],\n            m: ['ühe minuti', 'üks minut'],\n            mm: [number + ' minuti', number + ' minutit'],\n            h: ['ühe tunni', 'tund aega', 'üks tund'],\n            hh: [number + ' tunni', number + ' tundi'],\n            d: ['ühe päeva', 'üks päev'],\n            M: ['kuu aja', 'kuu aega', 'üks kuu'],\n            MM: [number + ' kuu', number + ' kuud'],\n            y: ['ühe aasta', 'aasta', 'üks aasta'],\n            yy: [number + ' aasta', number + ' aastat'],\n        };\n        if (withoutSuffix) {\n            return format[key][2] ? format[key][2] : format[key][1];\n        }\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('et', {\n        months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split(\n            '_'\n        ),\n        monthsShort:\n            'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n        weekdays:\n            'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split(\n                '_'\n            ),\n        weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n        weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[Täna,] LT',\n            nextDay: '[Homme,] LT',\n            nextWeek: '[Järgmine] dddd LT',\n            lastDay: '[Eile,] LT',\n            lastWeek: '[Eelmine] dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s pärast',\n            past: '%s tagasi',\n            s: processRelativeTime$4,\n            ss: processRelativeTime$4,\n            m: processRelativeTime$4,\n            mm: processRelativeTime$4,\n            h: processRelativeTime$4,\n            hh: processRelativeTime$4,\n            d: processRelativeTime$4,\n            dd: '%d päeva',\n            M: processRelativeTime$4,\n            MM: processRelativeTime$4,\n            y: processRelativeTime$4,\n            yy: processRelativeTime$4,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('eu', {\n        months: 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split(\n            '_'\n        ),\n        monthsShort:\n            'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays:\n            'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split(\n                '_'\n            ),\n        weekdaysShort: 'ig._al._ar._az._og._ol._lr.'.split('_'),\n        weekdaysMin: 'ig_al_ar_az_og_ol_lr'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY[ko] MMMM[ren] D[a]',\n            LLL: 'YYYY[ko] MMMM[ren] D[a] HH:mm',\n            LLLL: 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',\n            l: 'YYYY-M-D',\n            ll: 'YYYY[ko] MMM D[a]',\n            lll: 'YYYY[ko] MMM D[a] HH:mm',\n            llll: 'ddd, YYYY[ko] MMM D[a] HH:mm',\n        },\n        calendar: {\n            sameDay: '[gaur] LT[etan]',\n            nextDay: '[bihar] LT[etan]',\n            nextWeek: 'dddd LT[etan]',\n            lastDay: '[atzo] LT[etan]',\n            lastWeek: '[aurreko] dddd LT[etan]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s barru',\n            past: 'duela %s',\n            s: 'segundo batzuk',\n            ss: '%d segundo',\n            m: 'minutu bat',\n            mm: '%d minutu',\n            h: 'ordu bat',\n            hh: '%d ordu',\n            d: 'egun bat',\n            dd: '%d egun',\n            M: 'hilabete bat',\n            MM: '%d hilabete',\n            y: 'urte bat',\n            yy: '%d urte',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$7 = {\n            1: '۱',\n            2: '۲',\n            3: '۳',\n            4: '۴',\n            5: '۵',\n            6: '۶',\n            7: '۷',\n            8: '۸',\n            9: '۹',\n            0: '۰',\n        },\n        numberMap$6 = {\n            '۱': '1',\n            '۲': '2',\n            '۳': '3',\n            '۴': '4',\n            '۵': '5',\n            '۶': '6',\n            '۷': '7',\n            '۸': '8',\n            '۹': '9',\n            '۰': '0',\n        };\n\n    hooks.defineLocale('fa', {\n        months: 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(\n            '_'\n        ),\n        monthsShort:\n            'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split(\n                '_'\n            ),\n        weekdays:\n            'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split(\n                '_'\n            ),\n        weekdaysShort:\n            'یک\\u200cشنبه_دوشنبه_سه\\u200cشنبه_چهارشنبه_پنج\\u200cشنبه_جمعه_شنبه'.split(\n                '_'\n            ),\n        weekdaysMin: 'ی_د_س_چ_پ_ج_ش'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /قبل از ظهر|بعد از ظهر/,\n        isPM: function (input) {\n            return /بعد از ظهر/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'قبل از ظهر';\n            } else {\n                return 'بعد از ظهر';\n            }\n        },\n        calendar: {\n            sameDay: '[امروز ساعت] LT',\n            nextDay: '[فردا ساعت] LT',\n            nextWeek: 'dddd [ساعت] LT',\n            lastDay: '[دیروز ساعت] LT',\n            lastWeek: 'dddd [پیش] [ساعت] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'در %s',\n            past: '%s پیش',\n            s: 'چند ثانیه',\n            ss: '%d ثانیه',\n            m: 'یک دقیقه',\n            mm: '%d دقیقه',\n            h: 'یک ساعت',\n            hh: '%d ساعت',\n            d: 'یک روز',\n            dd: '%d روز',\n            M: 'یک ماه',\n            MM: '%d ماه',\n            y: 'یک سال',\n            yy: '%d سال',\n        },\n        preparse: function (string) {\n            return string\n                .replace(/[۰-۹]/g, function (match) {\n                    return numberMap$6[match];\n                })\n                .replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap$7[match];\n                })\n                .replace(/,/g, '،');\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}م/,\n        ordinal: '%dم',\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var numbersPast =\n            'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(\n                ' '\n            ),\n        numbersFuture = [\n            'nolla',\n            'yhden',\n            'kahden',\n            'kolmen',\n            'neljän',\n            'viiden',\n            'kuuden',\n            numbersPast[7],\n            numbersPast[8],\n            numbersPast[9],\n        ];\n    function translate$2(number, withoutSuffix, key, isFuture) {\n        var result = '';\n        switch (key) {\n            case 's':\n                return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n            case 'ss':\n                result = isFuture ? 'sekunnin' : 'sekuntia';\n                break;\n            case 'm':\n                return isFuture ? 'minuutin' : 'minuutti';\n            case 'mm':\n                result = isFuture ? 'minuutin' : 'minuuttia';\n                break;\n            case 'h':\n                return isFuture ? 'tunnin' : 'tunti';\n            case 'hh':\n                result = isFuture ? 'tunnin' : 'tuntia';\n                break;\n            case 'd':\n                return isFuture ? 'päivän' : 'päivä';\n            case 'dd':\n                result = isFuture ? 'päivän' : 'päivää';\n                break;\n            case 'M':\n                return isFuture ? 'kuukauden' : 'kuukausi';\n            case 'MM':\n                result = isFuture ? 'kuukauden' : 'kuukautta';\n                break;\n            case 'y':\n                return isFuture ? 'vuoden' : 'vuosi';\n            case 'yy':\n                result = isFuture ? 'vuoden' : 'vuotta';\n                break;\n        }\n        result = verbalNumber(number, isFuture) + ' ' + result;\n        return result;\n    }\n    function verbalNumber(number, isFuture) {\n        return number < 10\n            ? isFuture\n                ? numbersFuture[number]\n                : numbersPast[number]\n            : number;\n    }\n\n    hooks.defineLocale('fi', {\n        months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split(\n            '_'\n        ),\n        monthsShort:\n            'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split(\n                '_'\n            ),\n        weekdays:\n            'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split(\n                '_'\n            ),\n        weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n        weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD.MM.YYYY',\n            LL: 'Do MMMM[ta] YYYY',\n            LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n            LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n            l: 'D.M.YYYY',\n            ll: 'Do MMM YYYY',\n            lll: 'Do MMM YYYY, [klo] HH.mm',\n            llll: 'ddd, Do MMM YYYY, [klo] HH.mm',\n        },\n        calendar: {\n            sameDay: '[tänään] [klo] LT',\n            nextDay: '[huomenna] [klo] LT',\n            nextWeek: 'dddd [klo] LT',\n            lastDay: '[eilen] [klo] LT',\n            lastWeek: '[viime] dddd[na] [klo] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s päästä',\n            past: '%s sitten',\n            s: translate$2,\n            ss: translate$2,\n            m: translate$2,\n            mm: translate$2,\n            h: translate$2,\n            hh: translate$2,\n            d: translate$2,\n            dd: translate$2,\n            M: translate$2,\n            MM: translate$2,\n            y: translate$2,\n            yy: translate$2,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fil', {\n        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(\n            '_'\n        ),\n        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(\n            '_'\n        ),\n        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'MM/D/YYYY',\n            LL: 'MMMM D, YYYY',\n            LLL: 'MMMM D, YYYY HH:mm',\n            LLLL: 'dddd, MMMM DD, YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: 'LT [ngayong araw]',\n            nextDay: '[Bukas ng] LT',\n            nextWeek: 'LT [sa susunod na] dddd',\n            lastDay: 'LT [kahapon]',\n            lastWeek: 'LT [noong nakaraang] dddd',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'sa loob ng %s',\n            past: '%s ang nakalipas',\n            s: 'ilang segundo',\n            ss: '%d segundo',\n            m: 'isang minuto',\n            mm: '%d minuto',\n            h: 'isang oras',\n            hh: '%d oras',\n            d: 'isang araw',\n            dd: '%d araw',\n            M: 'isang buwan',\n            MM: '%d buwan',\n            y: 'isang taon',\n            yy: '%d taon',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal: function (number) {\n            return number;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fo', {\n        months: 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),\n        weekdays:\n            'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split(\n                '_'\n            ),\n        weekdaysShort: 'sun_mán_týs_mik_hós_frí_ley'.split('_'),\n        weekdaysMin: 'su_má_tý_mi_hó_fr_le'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D. MMMM, YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Í dag kl.] LT',\n            nextDay: '[Í morgin kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[Í gjár kl.] LT',\n            lastWeek: '[síðstu] dddd [kl] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'um %s',\n            past: '%s síðani',\n            s: 'fá sekund',\n            ss: '%d sekundir',\n            m: 'ein minuttur',\n            mm: '%d minuttir',\n            h: 'ein tími',\n            hh: '%d tímar',\n            d: 'ein dagur',\n            dd: '%d dagar',\n            M: 'ein mánaður',\n            MM: '%d mánaðir',\n            y: 'eitt ár',\n            yy: '%d ár',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fr-ca', {\n        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(\n            '_'\n        ),\n        monthsShort:\n            'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Aujourd’hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dans %s',\n            past: 'il y a %s',\n            s: 'quelques secondes',\n            ss: '%d secondes',\n            m: 'une minute',\n            mm: '%d minutes',\n            h: 'une heure',\n            hh: '%d heures',\n            d: 'un jour',\n            dd: '%d jours',\n            M: 'un mois',\n            MM: '%d mois',\n            y: 'un an',\n            yy: '%d ans',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('fr-ch', {\n        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(\n            '_'\n        ),\n        monthsShort:\n            'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Aujourd’hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dans %s',\n            past: 'il y a %s',\n            s: 'quelques secondes',\n            ss: '%d secondes',\n            m: 'une minute',\n            mm: '%d minutes',\n            h: 'une heure',\n            hh: '%d heures',\n            d: 'un jour',\n            dd: '%d jours',\n            M: 'un mois',\n            MM: '%d mois',\n            y: 'un an',\n            yy: '%d ans',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|e)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'D':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsStrictRegex$1 =\n            /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,\n        monthsShortStrictRegex$1 =\n            /(janv\\.?|févr\\.?|mars|avr\\.?|mai|juin|juil\\.?|août|sept\\.?|oct\\.?|nov\\.?|déc\\.?)/i,\n        monthsRegex$7 =\n            /(janv\\.?|févr\\.?|mars|avr\\.?|mai|juin|juil\\.?|août|sept\\.?|oct\\.?|nov\\.?|déc\\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,\n        monthsParse$6 = [\n            /^janv/i,\n            /^févr/i,\n            /^mars/i,\n            /^avr/i,\n            /^mai/i,\n            /^juin/i,\n            /^juil/i,\n            /^août/i,\n            /^sept/i,\n            /^oct/i,\n            /^nov/i,\n            /^déc/i,\n        ];\n\n    hooks.defineLocale('fr', {\n        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(\n            '_'\n        ),\n        monthsShort:\n            'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(\n                '_'\n            ),\n        monthsRegex: monthsRegex$7,\n        monthsShortRegex: monthsRegex$7,\n        monthsStrictRegex: monthsStrictRegex$1,\n        monthsShortStrictRegex: monthsShortStrictRegex$1,\n        monthsParse: monthsParse$6,\n        longMonthsParse: monthsParse$6,\n        shortMonthsParse: monthsParse$6,\n        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Aujourd’hui à] LT',\n            nextDay: '[Demain à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[Hier à] LT',\n            lastWeek: 'dddd [dernier à] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dans %s',\n            past: 'il y a %s',\n            s: 'quelques secondes',\n            ss: '%d secondes',\n            m: 'une minute',\n            mm: '%d minutes',\n            h: 'une heure',\n            hh: '%d heures',\n            d: 'un jour',\n            dd: '%d jours',\n            w: 'une semaine',\n            ww: '%d semaines',\n            M: 'un mois',\n            MM: '%d mois',\n            y: 'un an',\n            yy: '%d ans',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // TODO: Return 'e' when day of month > 1. Move this case inside\n                // block for masculine words below.\n                // See https://github.com/moment/moment/issues/3375\n                case 'D':\n                    return number + (number === 1 ? 'er' : '');\n\n                // Words with masculine grammatical gender: mois, trimestre, jour\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                    return number + (number === 1 ? 'er' : 'e');\n\n                // Words with feminine grammatical gender: semaine\n                case 'w':\n                case 'W':\n                    return number + (number === 1 ? 're' : 'e');\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortWithDots =\n            'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_'),\n        monthsShortWithoutDots =\n            'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');\n\n    hooks.defineLocale('fy', {\n        months: 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortWithDots;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots[m.month()];\n            } else {\n                return monthsShortWithDots[m.month()];\n            }\n        },\n        monthsParseExact: true,\n        weekdays: 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split(\n            '_'\n        ),\n        weekdaysShort: 'si._mo._ti._wo._to._fr._so.'.split('_'),\n        weekdaysMin: 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD-MM-YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[hjoed om] LT',\n            nextDay: '[moarn om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[juster om] LT',\n            lastWeek: '[ôfrûne] dddd [om] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'oer %s',\n            past: '%s lyn',\n            s: 'in pear sekonden',\n            ss: '%d sekonden',\n            m: 'ien minút',\n            mm: '%d minuten',\n            h: 'ien oere',\n            hh: '%d oeren',\n            d: 'ien dei',\n            dd: '%d dagen',\n            M: 'ien moanne',\n            MM: '%d moannen',\n            y: 'ien jier',\n            yy: '%d jierren',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal: function (number) {\n            return (\n                number +\n                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')\n            );\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$6 = [\n            'Eanáir',\n            'Feabhra',\n            'Márta',\n            'Aibreán',\n            'Bealtaine',\n            'Meitheamh',\n            'Iúil',\n            'Lúnasa',\n            'Meán Fómhair',\n            'Deireadh Fómhair',\n            'Samhain',\n            'Nollaig',\n        ],\n        monthsShort$5 = [\n            'Ean',\n            'Feabh',\n            'Márt',\n            'Aib',\n            'Beal',\n            'Meith',\n            'Iúil',\n            'Lún',\n            'M.F.',\n            'D.F.',\n            'Samh',\n            'Noll',\n        ],\n        weekdays$1 = [\n            'Dé Domhnaigh',\n            'Dé Luain',\n            'Dé Máirt',\n            'Dé Céadaoin',\n            'Déardaoin',\n            'Dé hAoine',\n            'Dé Sathairn',\n        ],\n        weekdaysShort = ['Domh', 'Luan', 'Máirt', 'Céad', 'Déar', 'Aoine', 'Sath'],\n        weekdaysMin = ['Do', 'Lu', 'Má', 'Cé', 'Dé', 'A', 'Sa'];\n\n    hooks.defineLocale('ga', {\n        months: months$6,\n        monthsShort: monthsShort$5,\n        monthsParseExact: true,\n        weekdays: weekdays$1,\n        weekdaysShort: weekdaysShort,\n        weekdaysMin: weekdaysMin,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Inniu ag] LT',\n            nextDay: '[Amárach ag] LT',\n            nextWeek: 'dddd [ag] LT',\n            lastDay: '[Inné ag] LT',\n            lastWeek: 'dddd [seo caite] [ag] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'i %s',\n            past: '%s ó shin',\n            s: 'cúpla soicind',\n            ss: '%d soicind',\n            m: 'nóiméad',\n            mm: '%d nóiméad',\n            h: 'uair an chloig',\n            hh: '%d uair an chloig',\n            d: 'lá',\n            dd: '%d lá',\n            M: 'mí',\n            MM: '%d míonna',\n            y: 'bliain',\n            yy: '%d bliain',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(d|na|mh)/,\n        ordinal: function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$7 = [\n            'Am Faoilleach',\n            'An Gearran',\n            'Am Màrt',\n            'An Giblean',\n            'An Cèitean',\n            'An t-Ògmhios',\n            'An t-Iuchar',\n            'An Lùnastal',\n            'An t-Sultain',\n            'An Dàmhair',\n            'An t-Samhain',\n            'An Dùbhlachd',\n        ],\n        monthsShort$6 = [\n            'Faoi',\n            'Gear',\n            'Màrt',\n            'Gibl',\n            'Cèit',\n            'Ògmh',\n            'Iuch',\n            'Lùn',\n            'Sult',\n            'Dàmh',\n            'Samh',\n            'Dùbh',\n        ],\n        weekdays$2 = [\n            'Didòmhnaich',\n            'Diluain',\n            'Dimàirt',\n            'Diciadain',\n            'Diardaoin',\n            'Dihaoine',\n            'Disathairne',\n        ],\n        weekdaysShort$1 = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'],\n        weekdaysMin$1 = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];\n\n    hooks.defineLocale('gd', {\n        months: months$7,\n        monthsShort: monthsShort$6,\n        monthsParseExact: true,\n        weekdays: weekdays$2,\n        weekdaysShort: weekdaysShort$1,\n        weekdaysMin: weekdaysMin$1,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[An-diugh aig] LT',\n            nextDay: '[A-màireach aig] LT',\n            nextWeek: 'dddd [aig] LT',\n            lastDay: '[An-dè aig] LT',\n            lastWeek: 'dddd [seo chaidh] [aig] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ann an %s',\n            past: 'bho chionn %s',\n            s: 'beagan diogan',\n            ss: '%d diogan',\n            m: 'mionaid',\n            mm: '%d mionaidean',\n            h: 'uair',\n            hh: '%d uairean',\n            d: 'latha',\n            dd: '%d latha',\n            M: 'mìos',\n            MM: '%d mìosan',\n            y: 'bliadhna',\n            yy: '%d bliadhna',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(d|na|mh)/,\n        ordinal: function (number) {\n            var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('gl', {\n        months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split(\n            '_'\n        ),\n        monthsShort:\n            'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n        weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n        weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY H:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return '[hoxe ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';\n            },\n            nextDay: function () {\n                return '[mañá ' + (this.hours() !== 1 ? 'ás' : 'á') + '] LT';\n            },\n            nextWeek: function () {\n                return 'dddd [' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT';\n            },\n            lastDay: function () {\n                return '[onte ' + (this.hours() !== 1 ? 'á' : 'a') + '] LT';\n            },\n            lastWeek: function () {\n                return (\n                    '[o] dddd [pasado ' + (this.hours() !== 1 ? 'ás' : 'a') + '] LT'\n                );\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: function (str) {\n                if (str.indexOf('un') === 0) {\n                    return 'n' + str;\n                }\n                return 'en ' + str;\n            },\n            past: 'hai %s',\n            s: 'uns segundos',\n            ss: '%d segundos',\n            m: 'un minuto',\n            mm: '%d minutos',\n            h: 'unha hora',\n            hh: '%d horas',\n            d: 'un día',\n            dd: '%d días',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un ano',\n            yy: '%d anos',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$5(number, withoutSuffix, key, isFuture) {\n        var format = {\n            s: ['थोडया सॅकंडांनी', 'थोडे सॅकंड'],\n            ss: [number + ' सॅकंडांनी', number + ' सॅकंड'],\n            m: ['एका मिणटान', 'एक मिनूट'],\n            mm: [number + ' मिणटांनी', number + ' मिणटां'],\n            h: ['एका वरान', 'एक वर'],\n            hh: [number + ' वरांनी', number + ' वरां'],\n            d: ['एका दिसान', 'एक दीस'],\n            dd: [number + ' दिसांनी', number + ' दीस'],\n            M: ['एका म्हयन्यान', 'एक म्हयनो'],\n            MM: [number + ' म्हयन्यानी', number + ' म्हयने'],\n            y: ['एका वर्सान', 'एक वर्स'],\n            yy: [number + ' वर्सांनी', number + ' वर्सां'],\n        };\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('gom-deva', {\n        months: {\n            standalone:\n                'जानेवारी_फेब्रुवारी_मार्च_एप्रील_मे_जून_जुलय_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(\n                    '_'\n                ),\n            format: 'जानेवारीच्या_फेब्रुवारीच्या_मार्चाच्या_एप्रीलाच्या_मेयाच्या_जूनाच्या_जुलयाच्या_ऑगस्टाच्या_सप्टेंबराच्या_ऑक्टोबराच्या_नोव्हेंबराच्या_डिसेंबराच्या'.split(\n                '_'\n            ),\n            isFormat: /MMMM(\\s)+D[oD]?/,\n        },\n        monthsShort:\n            'जाने._फेब्रु._मार्च_एप्री._मे_जून_जुल._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'आयतार_सोमार_मंगळार_बुधवार_बिरेस्तार_सुक्रार_शेनवार'.split('_'),\n        weekdaysShort: 'आयत._सोम._मंगळ._बुध._ब्रेस्त._सुक्र._शेन.'.split('_'),\n        weekdaysMin: 'आ_सो_मं_बु_ब्रे_सु_शे'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'A h:mm [वाजतां]',\n            LTS: 'A h:mm:ss [वाजतां]',\n            L: 'DD-MM-YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY A h:mm [वाजतां]',\n            LLLL: 'dddd, MMMM Do, YYYY, A h:mm [वाजतां]',\n            llll: 'ddd, D MMM YYYY, A h:mm [वाजतां]',\n        },\n        calendar: {\n            sameDay: '[आयज] LT',\n            nextDay: '[फाल्यां] LT',\n            nextWeek: '[फुडलो] dddd[,] LT',\n            lastDay: '[काल] LT',\n            lastWeek: '[फाटलो] dddd[,] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s',\n            past: '%s आदीं',\n            s: processRelativeTime$5,\n            ss: processRelativeTime$5,\n            m: processRelativeTime$5,\n            mm: processRelativeTime$5,\n            h: processRelativeTime$5,\n            hh: processRelativeTime$5,\n            d: processRelativeTime$5,\n            dd: processRelativeTime$5,\n            M: processRelativeTime$5,\n            MM: processRelativeTime$5,\n            y: processRelativeTime$5,\n            yy: processRelativeTime$5,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(वेर)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // the ordinal 'वेर' only applies to day of the month\n                case 'D':\n                    return number + 'वेर';\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                case 'w':\n                case 'W':\n                    return number;\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week\n            doy: 3, // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)\n        },\n        meridiemParse: /राती|सकाळीं|दनपारां|सांजे/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'राती') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सकाळीं') {\n                return hour;\n            } else if (meridiem === 'दनपारां') {\n                return hour > 12 ? hour : hour + 12;\n            } else if (meridiem === 'सांजे') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'राती';\n            } else if (hour < 12) {\n                return 'सकाळीं';\n            } else if (hour < 16) {\n                return 'दनपारां';\n            } else if (hour < 20) {\n                return 'सांजे';\n            } else {\n                return 'राती';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$6(number, withoutSuffix, key, isFuture) {\n        var format = {\n            s: ['thoddea sekondamni', 'thodde sekond'],\n            ss: [number + ' sekondamni', number + ' sekond'],\n            m: ['eka mintan', 'ek minut'],\n            mm: [number + ' mintamni', number + ' mintam'],\n            h: ['eka voran', 'ek vor'],\n            hh: [number + ' voramni', number + ' voram'],\n            d: ['eka disan', 'ek dis'],\n            dd: [number + ' disamni', number + ' dis'],\n            M: ['eka mhoinean', 'ek mhoino'],\n            MM: [number + ' mhoineamni', number + ' mhoine'],\n            y: ['eka vorsan', 'ek voros'],\n            yy: [number + ' vorsamni', number + ' vorsam'],\n        };\n        return isFuture ? format[key][0] : format[key][1];\n    }\n\n    hooks.defineLocale('gom-latn', {\n        months: {\n            standalone:\n                'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split(\n                    '_'\n                ),\n            format: 'Janerachea_Febrerachea_Marsachea_Abrilachea_Maiachea_Junachea_Julaiachea_Agostachea_Setembrachea_Otubrachea_Novembrachea_Dezembrachea'.split(\n                '_'\n            ),\n            isFormat: /MMMM(\\s)+D[oD]?/,\n        },\n        monthsShort:\n            'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),\n        monthsParseExact: true,\n        weekdays: \"Aitar_Somar_Mongllar_Budhvar_Birestar_Sukrar_Son'var\".split('_'),\n        weekdaysShort: 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),\n        weekdaysMin: 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'A h:mm [vazta]',\n            LTS: 'A h:mm:ss [vazta]',\n            L: 'DD-MM-YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY A h:mm [vazta]',\n            LLLL: 'dddd, MMMM Do, YYYY, A h:mm [vazta]',\n            llll: 'ddd, D MMM YYYY, A h:mm [vazta]',\n        },\n        calendar: {\n            sameDay: '[Aiz] LT',\n            nextDay: '[Faleam] LT',\n            nextWeek: '[Fuddlo] dddd[,] LT',\n            lastDay: '[Kal] LT',\n            lastWeek: '[Fattlo] dddd[,] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s',\n            past: '%s adim',\n            s: processRelativeTime$6,\n            ss: processRelativeTime$6,\n            m: processRelativeTime$6,\n            mm: processRelativeTime$6,\n            h: processRelativeTime$6,\n            hh: processRelativeTime$6,\n            d: processRelativeTime$6,\n            dd: processRelativeTime$6,\n            M: processRelativeTime$6,\n            MM: processRelativeTime$6,\n            y: processRelativeTime$6,\n            yy: processRelativeTime$6,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(er)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                // the ordinal 'er' only applies to day of the month\n                case 'D':\n                    return number + 'er';\n                default:\n                case 'M':\n                case 'Q':\n                case 'DDD':\n                case 'd':\n                case 'w':\n                case 'W':\n                    return number;\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week\n            doy: 3, // The week that contains Jan 4th is the first week of the year (7 + 0 - 4)\n        },\n        meridiemParse: /rati|sokallim|donparam|sanje/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'rati') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'sokallim') {\n                return hour;\n            } else if (meridiem === 'donparam') {\n                return hour > 12 ? hour : hour + 12;\n            } else if (meridiem === 'sanje') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'rati';\n            } else if (hour < 12) {\n                return 'sokallim';\n            } else if (hour < 16) {\n                return 'donparam';\n            } else if (hour < 20) {\n                return 'sanje';\n            } else {\n                return 'rati';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$8 = {\n            1: '૧',\n            2: '૨',\n            3: '૩',\n            4: '૪',\n            5: '૫',\n            6: '૬',\n            7: '૭',\n            8: '૮',\n            9: '૯',\n            0: '૦',\n        },\n        numberMap$7 = {\n            '૧': '1',\n            '૨': '2',\n            '૩': '3',\n            '૪': '4',\n            '૫': '5',\n            '૬': '6',\n            '૭': '7',\n            '૮': '8',\n            '૯': '9',\n            '૦': '0',\n        };\n\n    hooks.defineLocale('gu', {\n        months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split(\n            '_'\n        ),\n        monthsShort:\n            'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split(\n            '_'\n        ),\n        weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),\n        weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm વાગ્યે',\n            LTS: 'A h:mm:ss વાગ્યે',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm વાગ્યે',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે',\n        },\n        calendar: {\n            sameDay: '[આજ] LT',\n            nextDay: '[કાલે] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ગઇકાલે] LT',\n            lastWeek: '[પાછલા] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s મા',\n            past: '%s પહેલા',\n            s: 'અમુક પળો',\n            ss: '%d સેકંડ',\n            m: 'એક મિનિટ',\n            mm: '%d મિનિટ',\n            h: 'એક કલાક',\n            hh: '%d કલાક',\n            d: 'એક દિવસ',\n            dd: '%d દિવસ',\n            M: 'એક મહિનો',\n            MM: '%d મહિનો',\n            y: 'એક વર્ષ',\n            yy: '%d વર્ષ',\n        },\n        preparse: function (string) {\n            return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {\n                return numberMap$7[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$8[match];\n            });\n        },\n        // Gujarati notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.\n        meridiemParse: /રાત|બપોર|સવાર|સાંજ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'રાત') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'સવાર') {\n                return hour;\n            } else if (meridiem === 'બપોર') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'સાંજ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'રાત';\n            } else if (hour < 10) {\n                return 'સવાર';\n            } else if (hour < 17) {\n                return 'બપોર';\n            } else if (hour < 20) {\n                return 'સાંજ';\n            } else {\n                return 'રાત';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('he', {\n        months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split(\n            '_'\n        ),\n        monthsShort:\n            'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n        weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n        weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n        weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [ב]MMMM YYYY',\n            LLL: 'D [ב]MMMM YYYY HH:mm',\n            LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n            l: 'D/M/YYYY',\n            ll: 'D MMM YYYY',\n            lll: 'D MMM YYYY HH:mm',\n            llll: 'ddd, D MMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[היום ב־]LT',\n            nextDay: '[מחר ב־]LT',\n            nextWeek: 'dddd [בשעה] LT',\n            lastDay: '[אתמול ב־]LT',\n            lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'בעוד %s',\n            past: 'לפני %s',\n            s: 'מספר שניות',\n            ss: '%d שניות',\n            m: 'דקה',\n            mm: '%d דקות',\n            h: 'שעה',\n            hh: function (number) {\n                if (number === 2) {\n                    return 'שעתיים';\n                }\n                return number + ' שעות';\n            },\n            d: 'יום',\n            dd: function (number) {\n                if (number === 2) {\n                    return 'יומיים';\n                }\n                return number + ' ימים';\n            },\n            M: 'חודש',\n            MM: function (number) {\n                if (number === 2) {\n                    return 'חודשיים';\n                }\n                return number + ' חודשים';\n            },\n            y: 'שנה',\n            yy: function (number) {\n                if (number === 2) {\n                    return 'שנתיים';\n                } else if (number % 10 === 0 && number !== 10) {\n                    return number + ' שנה';\n                }\n                return number + ' שנים';\n            },\n        },\n        meridiemParse:\n            /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n        isPM: function (input) {\n            return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 5) {\n                return 'לפנות בוקר';\n            } else if (hour < 10) {\n                return 'בבוקר';\n            } else if (hour < 12) {\n                return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n            } else if (hour < 18) {\n                return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n            } else {\n                return 'בערב';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$9 = {\n            1: '१',\n            2: '२',\n            3: '३',\n            4: '४',\n            5: '५',\n            6: '६',\n            7: '७',\n            8: '८',\n            9: '९',\n            0: '०',\n        },\n        numberMap$8 = {\n            '१': '1',\n            '२': '2',\n            '३': '3',\n            '४': '4',\n            '५': '5',\n            '६': '6',\n            '७': '7',\n            '८': '8',\n            '९': '9',\n            '०': '0',\n        },\n        monthsParse$7 = [\n            /^जन/i,\n            /^फ़र|फर/i,\n            /^मार्च/i,\n            /^अप्रै/i,\n            /^मई/i,\n            /^जून/i,\n            /^जुल/i,\n            /^अग/i,\n            /^सितं|सित/i,\n            /^अक्टू/i,\n            /^नव|नवं/i,\n            /^दिसं|दिस/i,\n        ],\n        shortMonthsParse = [\n            /^जन/i,\n            /^फ़र/i,\n            /^मार्च/i,\n            /^अप्रै/i,\n            /^मई/i,\n            /^जून/i,\n            /^जुल/i,\n            /^अग/i,\n            /^सित/i,\n            /^अक्टू/i,\n            /^नव/i,\n            /^दिस/i,\n        ];\n\n    hooks.defineLocale('hi', {\n        months: {\n            format: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split(\n                '_'\n            ),\n            standalone:\n                'जनवरी_फरवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितंबर_अक्टूबर_नवंबर_दिसंबर'.split(\n                    '_'\n                ),\n        },\n        monthsShort:\n            'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n        weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm बजे',\n            LTS: 'A h:mm:ss बजे',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm बजे',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm बजे',\n        },\n\n        monthsParse: monthsParse$7,\n        longMonthsParse: monthsParse$7,\n        shortMonthsParse: shortMonthsParse,\n\n        monthsRegex:\n            /^(जनवरी|जन\\.?|फ़रवरी|फरवरी|फ़र\\.?|मार्च?|अप्रैल|अप्रै\\.?|मई?|जून?|जुलाई|जुल\\.?|अगस्त|अग\\.?|सितम्बर|सितंबर|सित\\.?|अक्टूबर|अक्टू\\.?|नवम्बर|नवंबर|नव\\.?|दिसम्बर|दिसंबर|दिस\\.?)/i,\n\n        monthsShortRegex:\n            /^(जनवरी|जन\\.?|फ़रवरी|फरवरी|फ़र\\.?|मार्च?|अप्रैल|अप्रै\\.?|मई?|जून?|जुलाई|जुल\\.?|अगस्त|अग\\.?|सितम्बर|सितंबर|सित\\.?|अक्टूबर|अक्टू\\.?|नवम्बर|नवंबर|नव\\.?|दिसम्बर|दिसंबर|दिस\\.?)/i,\n\n        monthsStrictRegex:\n            /^(जनवरी?|फ़रवरी|फरवरी?|मार्च?|अप्रैल?|मई?|जून?|जुलाई?|अगस्त?|सितम्बर|सितंबर|सित?\\.?|अक्टूबर|अक्टू\\.?|नवम्बर|नवंबर?|दिसम्बर|दिसंबर?)/i,\n\n        monthsShortStrictRegex:\n            /^(जन\\.?|फ़र\\.?|मार्च?|अप्रै\\.?|मई?|जून?|जुल\\.?|अग\\.?|सित\\.?|अक्टू\\.?|नव\\.?|दिस\\.?)/i,\n\n        calendar: {\n            sameDay: '[आज] LT',\n            nextDay: '[कल] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[कल] LT',\n            lastWeek: '[पिछले] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s में',\n            past: '%s पहले',\n            s: 'कुछ ही क्षण',\n            ss: '%d सेकंड',\n            m: 'एक मिनट',\n            mm: '%d मिनट',\n            h: 'एक घंटा',\n            hh: '%d घंटे',\n            d: 'एक दिन',\n            dd: '%d दिन',\n            M: 'एक महीने',\n            MM: '%d महीने',\n            y: 'एक वर्ष',\n            yy: '%d वर्ष',\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap$8[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$9[match];\n            });\n        },\n        // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n        meridiemParse: /रात|सुबह|दोपहर|शाम/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'रात') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'सुबह') {\n                return hour;\n            } else if (meridiem === 'दोपहर') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'शाम') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'रात';\n            } else if (hour < 10) {\n                return 'सुबह';\n            } else if (hour < 17) {\n                return 'दोपहर';\n            } else if (hour < 20) {\n                return 'शाम';\n            } else {\n                return 'रात';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function translate$3(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    hooks.defineLocale('hr', {\n        months: {\n            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split(\n                '_'\n            ),\n            standalone:\n                'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split(\n                    '_'\n                ),\n        },\n        monthsShort:\n            'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'Do MMMM YYYY',\n            LLL: 'Do MMMM YYYY H:mm',\n            LLLL: 'dddd, Do MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay: '[jučer u] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[prošlu] [nedjelju] [u] LT';\n                    case 3:\n                        return '[prošlu] [srijedu] [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'prije %s',\n            s: 'par sekundi',\n            ss: translate$3,\n            m: translate$3,\n            mm: translate$3,\n            h: translate$3,\n            hh: translate$3,\n            d: 'dan',\n            dd: translate$3,\n            M: 'mjesec',\n            MM: translate$3,\n            y: 'godinu',\n            yy: translate$3,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var weekEndings =\n        'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n    function translate$4(number, withoutSuffix, key, isFuture) {\n        var num = number;\n        switch (key) {\n            case 's':\n                return isFuture || withoutSuffix\n                    ? 'néhány másodperc'\n                    : 'néhány másodperce';\n            case 'ss':\n                return num + (isFuture || withoutSuffix)\n                    ? ' másodperc'\n                    : ' másodperce';\n            case 'm':\n                return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'mm':\n                return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n            case 'h':\n                return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'hh':\n                return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n            case 'd':\n                return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'dd':\n                return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n            case 'M':\n                return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'MM':\n                return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n            case 'y':\n                return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n            case 'yy':\n                return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n        }\n        return '';\n    }\n    function week(isFuture) {\n        return (\n            (isFuture ? '' : '[múlt] ') +\n            '[' +\n            weekEndings[this.day()] +\n            '] LT[-kor]'\n        );\n    }\n\n    hooks.defineLocale('hu', {\n        months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._márc._ápr._máj._jún._júl._aug._szept._okt._nov._dec.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n        weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n        weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'YYYY.MM.DD.',\n            LL: 'YYYY. MMMM D.',\n            LLL: 'YYYY. MMMM D. H:mm',\n            LLLL: 'YYYY. MMMM D., dddd H:mm',\n        },\n        meridiemParse: /de|du/i,\n        isPM: function (input) {\n            return input.charAt(1).toLowerCase() === 'u';\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower === true ? 'de' : 'DE';\n            } else {\n                return isLower === true ? 'du' : 'DU';\n            }\n        },\n        calendar: {\n            sameDay: '[ma] LT[-kor]',\n            nextDay: '[holnap] LT[-kor]',\n            nextWeek: function () {\n                return week.call(this, true);\n            },\n            lastDay: '[tegnap] LT[-kor]',\n            lastWeek: function () {\n                return week.call(this, false);\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s múlva',\n            past: '%s',\n            s: translate$4,\n            ss: translate$4,\n            m: translate$4,\n            mm: translate$4,\n            h: translate$4,\n            hh: translate$4,\n            d: translate$4,\n            dd: translate$4,\n            M: translate$4,\n            MM: translate$4,\n            y: translate$4,\n            yy: translate$4,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('hy-am', {\n        months: {\n            format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split(\n                '_'\n            ),\n            standalone:\n                'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split(\n                    '_'\n                ),\n        },\n        monthsShort: 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),\n        weekdays:\n            'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split(\n                '_'\n            ),\n        weekdaysShort: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        weekdaysMin: 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY թ.',\n            LLL: 'D MMMM YYYY թ., HH:mm',\n            LLLL: 'dddd, D MMMM YYYY թ., HH:mm',\n        },\n        calendar: {\n            sameDay: '[այսօր] LT',\n            nextDay: '[վաղը] LT',\n            lastDay: '[երեկ] LT',\n            nextWeek: function () {\n                return 'dddd [օրը ժամը] LT';\n            },\n            lastWeek: function () {\n                return '[անցած] dddd [օրը ժամը] LT';\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s հետո',\n            past: '%s առաջ',\n            s: 'մի քանի վայրկյան',\n            ss: '%d վայրկյան',\n            m: 'րոպե',\n            mm: '%d րոպե',\n            h: 'ժամ',\n            hh: '%d ժամ',\n            d: 'օր',\n            dd: '%d օր',\n            M: 'ամիս',\n            MM: '%d ամիս',\n            y: 'տարի',\n            yy: '%d տարի',\n        },\n        meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,\n        isPM: function (input) {\n            return /^(ցերեկվա|երեկոյան)$/.test(input);\n        },\n        meridiem: function (hour) {\n            if (hour < 4) {\n                return 'գիշերվա';\n            } else if (hour < 12) {\n                return 'առավոտվա';\n            } else if (hour < 17) {\n                return 'ցերեկվա';\n            } else {\n                return 'երեկոյան';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}|\\d{1,2}-(ին|րդ)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'DDD':\n                case 'w':\n                case 'W':\n                case 'DDDo':\n                    if (number === 1) {\n                        return number + '-ին';\n                    }\n                    return number + '-րդ';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('id', {\n        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des'.split('_'),\n        weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n        weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [pukul] HH.mm',\n            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n        },\n        meridiemParse: /pagi|siang|sore|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'siang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sore' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'siang';\n            } else if (hours < 19) {\n                return 'sore';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar: {\n            sameDay: '[Hari ini pukul] LT',\n            nextDay: '[Besok pukul] LT',\n            nextWeek: 'dddd [pukul] LT',\n            lastDay: '[Kemarin pukul] LT',\n            lastWeek: 'dddd [lalu pukul] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dalam %s',\n            past: '%s yang lalu',\n            s: 'beberapa detik',\n            ss: '%d detik',\n            m: 'semenit',\n            mm: '%d menit',\n            h: 'sejam',\n            hh: '%d jam',\n            d: 'sehari',\n            dd: '%d hari',\n            M: 'sebulan',\n            MM: '%d bulan',\n            y: 'setahun',\n            yy: '%d tahun',\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function plural$2(n) {\n        if (n % 100 === 11) {\n            return true;\n        } else if (n % 10 === 1) {\n            return false;\n        }\n        return true;\n    }\n    function translate$5(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture\n                    ? 'nokkrar sekúndur'\n                    : 'nokkrum sekúndum';\n            case 'ss':\n                if (plural$2(number)) {\n                    return (\n                        result +\n                        (withoutSuffix || isFuture ? 'sekúndur' : 'sekúndum')\n                    );\n                }\n                return result + 'sekúnda';\n            case 'm':\n                return withoutSuffix ? 'mínúta' : 'mínútu';\n            case 'mm':\n                if (plural$2(number)) {\n                    return (\n                        result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum')\n                    );\n                } else if (withoutSuffix) {\n                    return result + 'mínúta';\n                }\n                return result + 'mínútu';\n            case 'hh':\n                if (plural$2(number)) {\n                    return (\n                        result +\n                        (withoutSuffix || isFuture\n                            ? 'klukkustundir'\n                            : 'klukkustundum')\n                    );\n                }\n                return result + 'klukkustund';\n            case 'd':\n                if (withoutSuffix) {\n                    return 'dagur';\n                }\n                return isFuture ? 'dag' : 'degi';\n            case 'dd':\n                if (plural$2(number)) {\n                    if (withoutSuffix) {\n                        return result + 'dagar';\n                    }\n                    return result + (isFuture ? 'daga' : 'dögum');\n                } else if (withoutSuffix) {\n                    return result + 'dagur';\n                }\n                return result + (isFuture ? 'dag' : 'degi');\n            case 'M':\n                if (withoutSuffix) {\n                    return 'mánuður';\n                }\n                return isFuture ? 'mánuð' : 'mánuði';\n            case 'MM':\n                if (plural$2(number)) {\n                    if (withoutSuffix) {\n                        return result + 'mánuðir';\n                    }\n                    return result + (isFuture ? 'mánuði' : 'mánuðum');\n                } else if (withoutSuffix) {\n                    return result + 'mánuður';\n                }\n                return result + (isFuture ? 'mánuð' : 'mánuði');\n            case 'y':\n                return withoutSuffix || isFuture ? 'ár' : 'ári';\n            case 'yy':\n                if (plural$2(number)) {\n                    return result + (withoutSuffix || isFuture ? 'ár' : 'árum');\n                }\n                return result + (withoutSuffix || isFuture ? 'ár' : 'ári');\n        }\n    }\n\n    hooks.defineLocale('is', {\n        months: 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),\n        weekdays:\n            'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split(\n                '_'\n            ),\n        weekdaysShort: 'sun_mán_þri_mið_fim_fös_lau'.split('_'),\n        weekdaysMin: 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY [kl.] H:mm',\n            LLLL: 'dddd, D. MMMM YYYY [kl.] H:mm',\n        },\n        calendar: {\n            sameDay: '[í dag kl.] LT',\n            nextDay: '[á morgun kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[í gær kl.] LT',\n            lastWeek: '[síðasta] dddd [kl.] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'eftir %s',\n            past: 'fyrir %s síðan',\n            s: translate$5,\n            ss: translate$5,\n            m: translate$5,\n            mm: translate$5,\n            h: 'klukkustund',\n            hh: translate$5,\n            d: translate$5,\n            dd: translate$5,\n            M: translate$5,\n            MM: translate$5,\n            y: translate$5,\n            yy: translate$5,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('it-ch', {\n        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(\n            '_'\n        ),\n        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(\n            '_'\n        ),\n        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Oggi alle] LT',\n            nextDay: '[Domani alle] LT',\n            nextWeek: 'dddd [alle] LT',\n            lastDay: '[Ieri alle] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[la scorsa] dddd [alle] LT';\n                    default:\n                        return '[lo scorso] dddd [alle] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: function (s) {\n                return (/^[0-9].+$/.test(s) ? 'tra' : 'in') + ' ' + s;\n            },\n            past: '%s fa',\n            s: 'alcuni secondi',\n            ss: '%d secondi',\n            m: 'un minuto',\n            mm: '%d minuti',\n            h: \"un'ora\",\n            hh: '%d ore',\n            d: 'un giorno',\n            dd: '%d giorni',\n            M: 'un mese',\n            MM: '%d mesi',\n            y: 'un anno',\n            yy: '%d anni',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('it', {\n        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(\n            '_'\n        ),\n        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(\n            '_'\n        ),\n        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: function () {\n                return (\n                    '[Oggi a' +\n                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n                    ']LT'\n                );\n            },\n            nextDay: function () {\n                return (\n                    '[Domani a' +\n                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n                    ']LT'\n                );\n            },\n            nextWeek: function () {\n                return (\n                    'dddd [a' +\n                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n                    ']LT'\n                );\n            },\n            lastDay: function () {\n                return (\n                    '[Ieri a' +\n                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n                    ']LT'\n                );\n            },\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return (\n                            '[La scorsa] dddd [a' +\n                            (this.hours() > 1\n                                ? 'lle '\n                                : this.hours() === 0\n                                  ? ' '\n                                  : \"ll'\") +\n                            ']LT'\n                        );\n                    default:\n                        return (\n                            '[Lo scorso] dddd [a' +\n                            (this.hours() > 1\n                                ? 'lle '\n                                : this.hours() === 0\n                                  ? ' '\n                                  : \"ll'\") +\n                            ']LT'\n                        );\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'tra %s',\n            past: '%s fa',\n            s: 'alcuni secondi',\n            ss: '%d secondi',\n            m: 'un minuto',\n            mm: '%d minuti',\n            h: \"un'ora\",\n            hh: '%d ore',\n            d: 'un giorno',\n            dd: '%d giorni',\n            w: 'una settimana',\n            ww: '%d settimane',\n            M: 'un mese',\n            MM: '%d mesi',\n            y: 'un anno',\n            yy: '%d anni',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ja', {\n        eras: [\n            {\n                since: '2019-05-01',\n                offset: 1,\n                name: '令和',\n                narrow: '㋿',\n                abbr: 'R',\n            },\n            {\n                since: '1989-01-08',\n                until: '2019-04-30',\n                offset: 1,\n                name: '平成',\n                narrow: '㍻',\n                abbr: 'H',\n            },\n            {\n                since: '1926-12-25',\n                until: '1989-01-07',\n                offset: 1,\n                name: '昭和',\n                narrow: '㍼',\n                abbr: 'S',\n            },\n            {\n                since: '1912-07-30',\n                until: '1926-12-24',\n                offset: 1,\n                name: '大正',\n                narrow: '㍽',\n                abbr: 'T',\n            },\n            {\n                since: '1873-01-01',\n                until: '1912-07-29',\n                offset: 6,\n                name: '明治',\n                narrow: '㍾',\n                abbr: 'M',\n            },\n            {\n                since: '0001-01-01',\n                until: '1873-12-31',\n                offset: 1,\n                name: '西暦',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: '紀元前',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        eraYearOrdinalRegex: /(元|\\d+)年/,\n        eraYearOrdinalParse: function (input, match) {\n            return match[1] === '元' ? 1 : parseInt(match[1] || input, 10);\n        },\n        months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n        weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n        weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日 HH:mm',\n            LLLL: 'YYYY年M月D日 dddd HH:mm',\n            l: 'YYYY/MM/DD',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日(ddd) HH:mm',\n        },\n        meridiemParse: /午前|午後/i,\n        isPM: function (input) {\n            return input === '午後';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return '午前';\n            } else {\n                return '午後';\n            }\n        },\n        calendar: {\n            sameDay: '[今日] LT',\n            nextDay: '[明日] LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    return '[来週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            lastDay: '[昨日] LT',\n            lastWeek: function (now) {\n                if (this.week() !== now.week()) {\n                    return '[先週]dddd LT';\n                } else {\n                    return 'dddd LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}日/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'y':\n                    return number === 1 ? '元年' : number + '年';\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s後',\n            past: '%s前',\n            s: '数秒',\n            ss: '%d秒',\n            m: '1分',\n            mm: '%d分',\n            h: '1時間',\n            hh: '%d時間',\n            d: '1日',\n            dd: '%d日',\n            M: '1ヶ月',\n            MM: '%dヶ月',\n            y: '1年',\n            yy: '%d年',\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('jv', {\n        months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),\n        weekdays: 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),\n        weekdaysShort: 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),\n        weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [pukul] HH.mm',\n            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n        },\n        meridiemParse: /enjing|siyang|sonten|ndalu/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'enjing') {\n                return hour;\n            } else if (meridiem === 'siyang') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'sonten' || meridiem === 'ndalu') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'enjing';\n            } else if (hours < 15) {\n                return 'siyang';\n            } else if (hours < 19) {\n                return 'sonten';\n            } else {\n                return 'ndalu';\n            }\n        },\n        calendar: {\n            sameDay: '[Dinten puniko pukul] LT',\n            nextDay: '[Mbenjang pukul] LT',\n            nextWeek: 'dddd [pukul] LT',\n            lastDay: '[Kala wingi pukul] LT',\n            lastWeek: 'dddd [kepengker pukul] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'wonten ing %s',\n            past: '%s ingkang kepengker',\n            s: 'sawetawis detik',\n            ss: '%d detik',\n            m: 'setunggal menit',\n            mm: '%d menit',\n            h: 'setunggal jam',\n            hh: '%d jam',\n            d: 'sedinten',\n            dd: '%d dinten',\n            M: 'sewulan',\n            MM: '%d wulan',\n            y: 'setaun',\n            yy: '%d taun',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ka', {\n        months: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split(\n            '_'\n        ),\n        monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n        weekdays: {\n            standalone:\n                'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split(\n                    '_'\n                ),\n            format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split(\n                '_'\n            ),\n            isFormat: /(წინა|შემდეგ)/,\n        },\n        weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n        weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[დღეს] LT[-ზე]',\n            nextDay: '[ხვალ] LT[-ზე]',\n            lastDay: '[გუშინ] LT[-ზე]',\n            nextWeek: '[შემდეგ] dddd LT[-ზე]',\n            lastWeek: '[წინა] dddd LT-ზე',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: function (s) {\n                return s.replace(\n                    /(წამ|წუთ|საათ|წელ|დღ|თვ)(ი|ე)/,\n                    function ($0, $1, $2) {\n                        return $2 === 'ი' ? $1 + 'ში' : $1 + $2 + 'ში';\n                    }\n                );\n            },\n            past: function (s) {\n                if (/(წამი|წუთი|საათი|დღე|თვე)/.test(s)) {\n                    return s.replace(/(ი|ე)$/, 'ის წინ');\n                }\n                if (/წელი/.test(s)) {\n                    return s.replace(/წელი$/, 'წლის წინ');\n                }\n                return s;\n            },\n            s: 'რამდენიმე წამი',\n            ss: '%d წამი',\n            m: 'წუთი',\n            mm: '%d წუთი',\n            h: 'საათი',\n            hh: '%d საათი',\n            d: 'დღე',\n            dd: '%d დღე',\n            M: 'თვე',\n            MM: '%d თვე',\n            y: 'წელი',\n            yy: '%d წელი',\n        },\n        dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n        ordinal: function (number) {\n            if (number === 0) {\n                return number;\n            }\n            if (number === 1) {\n                return number + '-ლი';\n            }\n            if (\n                number < 20 ||\n                (number <= 100 && number % 20 === 0) ||\n                number % 100 === 0\n            ) {\n                return 'მე-' + number;\n            }\n            return number + '-ე';\n        },\n        week: {\n            dow: 1,\n            doy: 7,\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$1 = {\n        0: '-ші',\n        1: '-ші',\n        2: '-ші',\n        3: '-ші',\n        4: '-ші',\n        5: '-ші',\n        6: '-шы',\n        7: '-ші',\n        8: '-ші',\n        9: '-шы',\n        10: '-шы',\n        20: '-шы',\n        30: '-шы',\n        40: '-шы',\n        50: '-ші',\n        60: '-шы',\n        70: '-ші',\n        80: '-ші',\n        90: '-шы',\n        100: '-ші',\n    };\n\n    hooks.defineLocale('kk', {\n        months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split(\n            '_'\n        ),\n        monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n        weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split(\n            '_'\n        ),\n        weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n        weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Бүгін сағат] LT',\n            nextDay: '[Ертең сағат] LT',\n            nextWeek: 'dddd [сағат] LT',\n            lastDay: '[Кеше сағат] LT',\n            lastWeek: '[Өткен аптаның] dddd [сағат] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ішінде',\n            past: '%s бұрын',\n            s: 'бірнеше секунд',\n            ss: '%d секунд',\n            m: 'бір минут',\n            mm: '%d минут',\n            h: 'бір сағат',\n            hh: '%d сағат',\n            d: 'бір күн',\n            dd: '%d күн',\n            M: 'бір ай',\n            MM: '%d ай',\n            y: 'бір жыл',\n            yy: '%d жыл',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes$1[number] || suffixes$1[a] || suffixes$1[b]);\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$a = {\n            1: '១',\n            2: '២',\n            3: '៣',\n            4: '៤',\n            5: '៥',\n            6: '៦',\n            7: '៧',\n            8: '៨',\n            9: '៩',\n            0: '០',\n        },\n        numberMap$9 = {\n            '១': '1',\n            '២': '2',\n            '៣': '3',\n            '៤': '4',\n            '៥': '5',\n            '៦': '6',\n            '៧': '7',\n            '៨': '8',\n            '៩': '9',\n            '០': '0',\n        };\n\n    hooks.defineLocale('km', {\n        months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n            '_'\n        ),\n        monthsShort:\n            'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split(\n                '_'\n            ),\n        weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),\n        weekdaysShort: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysMin: 'អា_ច_អ_ព_ព្រ_សុ_ស'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ព្រឹក|ល្ងាច/,\n        isPM: function (input) {\n            return input === 'ល្ងាច';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ព្រឹក';\n            } else {\n                return 'ល្ងាច';\n            }\n        },\n        calendar: {\n            sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',\n            nextDay: '[ស្អែក ម៉ោង] LT',\n            nextWeek: 'dddd [ម៉ោង] LT',\n            lastDay: '[ម្សិលមិញ ម៉ោង] LT',\n            lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%sទៀត',\n            past: '%sមុន',\n            s: 'ប៉ុន្មានវិនាទី',\n            ss: '%d វិនាទី',\n            m: 'មួយនាទី',\n            mm: '%d នាទី',\n            h: 'មួយម៉ោង',\n            hh: '%d ម៉ោង',\n            d: 'មួយថ្ងៃ',\n            dd: '%d ថ្ងៃ',\n            M: 'មួយខែ',\n            MM: '%d ខែ',\n            y: 'មួយឆ្នាំ',\n            yy: '%d ឆ្នាំ',\n        },\n        dayOfMonthOrdinalParse: /ទី\\d{1,2}/,\n        ordinal: 'ទី%d',\n        preparse: function (string) {\n            return string.replace(/[១២៣៤៥៦៧៨៩០]/g, function (match) {\n                return numberMap$9[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$a[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$b = {\n            1: '೧',\n            2: '೨',\n            3: '೩',\n            4: '೪',\n            5: '೫',\n            6: '೬',\n            7: '೭',\n            8: '೮',\n            9: '೯',\n            0: '೦',\n        },\n        numberMap$a = {\n            '೧': '1',\n            '೨': '2',\n            '೩': '3',\n            '೪': '4',\n            '೫': '5',\n            '೬': '6',\n            '೭': '7',\n            '೮': '8',\n            '೯': '9',\n            '೦': '0',\n        };\n\n    hooks.defineLocale('kn', {\n        months: 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split(\n            '_'\n        ),\n        monthsShort:\n            'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split(\n            '_'\n        ),\n        weekdaysShort: 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),\n        weekdaysMin: 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm',\n        },\n        calendar: {\n            sameDay: '[ಇಂದು] LT',\n            nextDay: '[ನಾಳೆ] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ನಿನ್ನೆ] LT',\n            lastWeek: '[ಕೊನೆಯ] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ನಂತರ',\n            past: '%s ಹಿಂದೆ',\n            s: 'ಕೆಲವು ಕ್ಷಣಗಳು',\n            ss: '%d ಸೆಕೆಂಡುಗಳು',\n            m: 'ಒಂದು ನಿಮಿಷ',\n            mm: '%d ನಿಮಿಷ',\n            h: 'ಒಂದು ಗಂಟೆ',\n            hh: '%d ಗಂಟೆ',\n            d: 'ಒಂದು ದಿನ',\n            dd: '%d ದಿನ',\n            M: 'ಒಂದು ತಿಂಗಳು',\n            MM: '%d ತಿಂಗಳು',\n            y: 'ಒಂದು ವರ್ಷ',\n            yy: '%d ವರ್ಷ',\n        },\n        preparse: function (string) {\n            return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {\n                return numberMap$a[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$b[match];\n            });\n        },\n        meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ರಾತ್ರಿ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {\n                return hour;\n            } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ಸಂಜೆ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ರಾತ್ರಿ';\n            } else if (hour < 10) {\n                return 'ಬೆಳಿಗ್ಗೆ';\n            } else if (hour < 17) {\n                return 'ಮಧ್ಯಾಹ್ನ';\n            } else if (hour < 20) {\n                return 'ಸಂಜೆ';\n            } else {\n                return 'ರಾತ್ರಿ';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ನೇ)/,\n        ordinal: function (number) {\n            return number + 'ನೇ';\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ko', {\n        months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split(\n            '_'\n        ),\n        weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n        weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n        weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'YYYY.MM.DD.',\n            LL: 'YYYY년 MMMM D일',\n            LLL: 'YYYY년 MMMM D일 A h:mm',\n            LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n            l: 'YYYY.MM.DD.',\n            ll: 'YYYY년 MMMM D일',\n            lll: 'YYYY년 MMMM D일 A h:mm',\n            llll: 'YYYY년 MMMM D일 dddd A h:mm',\n        },\n        calendar: {\n            sameDay: '오늘 LT',\n            nextDay: '내일 LT',\n            nextWeek: 'dddd LT',\n            lastDay: '어제 LT',\n            lastWeek: '지난주 dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s 후',\n            past: '%s 전',\n            s: '몇 초',\n            ss: '%d초',\n            m: '1분',\n            mm: '%d분',\n            h: '한 시간',\n            hh: '%d시간',\n            d: '하루',\n            dd: '%d일',\n            M: '한 달',\n            MM: '%d달',\n            y: '일 년',\n            yy: '%d년',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '일';\n                case 'M':\n                    return number + '월';\n                case 'w':\n                case 'W':\n                    return number + '주';\n                default:\n                    return number;\n            }\n        },\n        meridiemParse: /오전|오후/,\n        isPM: function (token) {\n            return token === '오후';\n        },\n        meridiem: function (hour, minute, isUpper) {\n            return hour < 12 ? '오전' : '오후';\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$7(num, withoutSuffix, key, isFuture) {\n        var format = {\n            s: ['çend sanîye', 'çend sanîyeyan'],\n            ss: [num + ' sanîye', num + ' sanîyeyan'],\n            m: ['deqîqeyek', 'deqîqeyekê'],\n            mm: [num + ' deqîqe', num + ' deqîqeyan'],\n            h: ['saetek', 'saetekê'],\n            hh: [num + ' saet', num + ' saetan'],\n            d: ['rojek', 'rojekê'],\n            dd: [num + ' roj', num + ' rojan'],\n            w: ['hefteyek', 'hefteyekê'],\n            ww: [num + ' hefte', num + ' hefteyan'],\n            M: ['mehek', 'mehekê'],\n            MM: [num + ' meh', num + ' mehan'],\n            y: ['salek', 'salekê'],\n            yy: [num + ' sal', num + ' salan'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n    // function obliqueNumSuffix(num) {\n    //     if(num.includes(':'))\n    //         num = parseInt(num.split(':')[0]);\n    //     else\n    //         num = parseInt(num);\n    //     return num == 0 || num % 10 == 1 ? 'ê'\n    //                         : (num > 10 && num % 10 == 0 ? 'î' : 'an');\n    // }\n    function ezafeNumSuffix(num) {\n        num = '' + num;\n        var l = num.substring(num.length - 1),\n            ll = num.length > 1 ? num.substring(num.length - 2) : '';\n        if (\n            !(ll == 12 || ll == 13) &&\n            (l == '2' || l == '3' || ll == '50' || l == '70' || l == '80')\n        )\n            return 'yê';\n        return 'ê';\n    }\n\n    hooks.defineLocale('ku-kmr', {\n        // According to the spelling rules defined by the work group of Weqfa Mezopotamyayê (Mesopotamia Foundation)\n        // this should be: 'Kanûna Paşîn_Sibat_Adar_Nîsan_Gulan_Hezîran_Tîrmeh_Tebax_Îlon_Çirîya Pêşîn_Çirîya Paşîn_Kanûna Pêşîn'\n        // But the names below are more well known and handy\n        months: 'Rêbendan_Sibat_Adar_Nîsan_Gulan_Hezîran_Tîrmeh_Tebax_Îlon_Cotmeh_Mijdar_Berfanbar'.split(\n            '_'\n        ),\n        monthsShort: 'Rêb_Sib_Ada_Nîs_Gul_Hez_Tîr_Teb_Îlo_Cot_Mij_Ber'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'Yekşem_Duşem_Sêşem_Çarşem_Pêncşem_În_Şemî'.split('_'),\n        weekdaysShort: 'Yek_Du_Sê_Çar_Pên_În_Şem'.split('_'),\n        weekdaysMin: 'Ye_Du_Sê_Ça_Pê_În_Şe'.split('_'),\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'bn' : 'BN';\n            } else {\n                return isLower ? 'pn' : 'PN';\n            }\n        },\n        meridiemParse: /bn|BN|pn|PN/,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'Do MMMM[a] YYYY[an]',\n            LLL: 'Do MMMM[a] YYYY[an] HH:mm',\n            LLLL: 'dddd, Do MMMM[a] YYYY[an] HH:mm',\n            ll: 'Do MMM[.] YYYY[an]',\n            lll: 'Do MMM[.] YYYY[an] HH:mm',\n            llll: 'ddd[.], Do MMM[.] YYYY[an] HH:mm',\n        },\n        calendar: {\n            sameDay: '[Îro di saet] LT [de]',\n            nextDay: '[Sibê di saet] LT [de]',\n            nextWeek: 'dddd [di saet] LT [de]',\n            lastDay: '[Duh di saet] LT [de]',\n            lastWeek: 'dddd[a borî di saet] LT [de]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'di %s de',\n            past: 'berî %s',\n            s: processRelativeTime$7,\n            ss: processRelativeTime$7,\n            m: processRelativeTime$7,\n            mm: processRelativeTime$7,\n            h: processRelativeTime$7,\n            hh: processRelativeTime$7,\n            d: processRelativeTime$7,\n            dd: processRelativeTime$7,\n            w: processRelativeTime$7,\n            ww: processRelativeTime$7,\n            M: processRelativeTime$7,\n            MM: processRelativeTime$7,\n            y: processRelativeTime$7,\n            yy: processRelativeTime$7,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(?:yê|ê|\\.)/,\n        ordinal: function (num, period) {\n            var p = period.toLowerCase();\n            if (p.includes('w') || p.includes('m')) return num + '.';\n\n            return num + ezafeNumSuffix(num);\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$c = {\n            1: '١',\n            2: '٢',\n            3: '٣',\n            4: '٤',\n            5: '٥',\n            6: '٦',\n            7: '٧',\n            8: '٨',\n            9: '٩',\n            0: '٠',\n        },\n        numberMap$b = {\n            '١': '1',\n            '٢': '2',\n            '٣': '3',\n            '٤': '4',\n            '٥': '5',\n            '٦': '6',\n            '٧': '7',\n            '٨': '8',\n            '٩': '9',\n            '٠': '0',\n        },\n        months$8 = [\n            'کانونی دووەم',\n            'شوبات',\n            'ئازار',\n            'نیسان',\n            'ئایار',\n            'حوزەیران',\n            'تەمموز',\n            'ئاب',\n            'ئەیلوول',\n            'تشرینی یەكەم',\n            'تشرینی دووەم',\n            'كانونی یەکەم',\n        ];\n\n    hooks.defineLocale('ku', {\n        months: months$8,\n        monthsShort: months$8,\n        weekdays:\n            'یه‌كشه‌ممه‌_دووشه‌ممه‌_سێشه‌ممه‌_چوارشه‌ممه‌_پێنجشه‌ممه‌_هه‌ینی_شه‌ممه‌'.split(\n                '_'\n            ),\n        weekdaysShort:\n            'یه‌كشه‌م_دووشه‌م_سێشه‌م_چوارشه‌م_پێنجشه‌م_هه‌ینی_شه‌ممه‌'.split('_'),\n        weekdaysMin: 'ی_د_س_چ_پ_ه_ش'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ئێواره‌|به‌یانی/,\n        isPM: function (input) {\n            return /ئێواره‌/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'به‌یانی';\n            } else {\n                return 'ئێواره‌';\n            }\n        },\n        calendar: {\n            sameDay: '[ئه‌مرۆ كاتژمێر] LT',\n            nextDay: '[به‌یانی كاتژمێر] LT',\n            nextWeek: 'dddd [كاتژمێر] LT',\n            lastDay: '[دوێنێ كاتژمێر] LT',\n            lastWeek: 'dddd [كاتژمێر] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'له‌ %s',\n            past: '%s',\n            s: 'چه‌ند چركه‌یه‌ك',\n            ss: 'چركه‌ %d',\n            m: 'یه‌ك خوله‌ك',\n            mm: '%d خوله‌ك',\n            h: 'یه‌ك كاتژمێر',\n            hh: '%d كاتژمێر',\n            d: 'یه‌ك ڕۆژ',\n            dd: '%d ڕۆژ',\n            M: 'یه‌ك مانگ',\n            MM: '%d مانگ',\n            y: 'یه‌ك ساڵ',\n            yy: '%d ساڵ',\n        },\n        preparse: function (string) {\n            return string\n                .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {\n                    return numberMap$b[match];\n                })\n                .replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string\n                .replace(/\\d/g, function (match) {\n                    return symbolMap$c[match];\n                })\n                .replace(/,/g, '،');\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$2 = {\n        0: '-чү',\n        1: '-чи',\n        2: '-чи',\n        3: '-чү',\n        4: '-чү',\n        5: '-чи',\n        6: '-чы',\n        7: '-чи',\n        8: '-чи',\n        9: '-чу',\n        10: '-чу',\n        20: '-чы',\n        30: '-чу',\n        40: '-чы',\n        50: '-чү',\n        60: '-чы',\n        70: '-чи',\n        80: '-чи',\n        90: '-чу',\n        100: '-чү',\n    };\n\n    hooks.defineLocale('ky', {\n        months: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(\n            '_'\n        ),\n        monthsShort: 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split(\n            '_'\n        ),\n        weekdays: 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split(\n            '_'\n        ),\n        weekdaysShort: 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),\n        weekdaysMin: 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Бүгүн саат] LT',\n            nextDay: '[Эртең саат] LT',\n            nextWeek: 'dddd [саат] LT',\n            lastDay: '[Кечээ саат] LT',\n            lastWeek: '[Өткөн аптанын] dddd [күнү] [саат] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ичинде',\n            past: '%s мурун',\n            s: 'бирнече секунд',\n            ss: '%d секунд',\n            m: 'бир мүнөт',\n            mm: '%d мүнөт',\n            h: 'бир саат',\n            hh: '%d саат',\n            d: 'бир күн',\n            dd: '%d күн',\n            M: 'бир ай',\n            MM: '%d ай',\n            y: 'бир жыл',\n            yy: '%d жыл',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(чи|чы|чү|чу)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes$2[number] || suffixes$2[a] || suffixes$2[b]);\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$8(number, withoutSuffix, key, isFuture) {\n        var format = {\n            m: ['eng Minutt', 'enger Minutt'],\n            h: ['eng Stonn', 'enger Stonn'],\n            d: ['een Dag', 'engem Dag'],\n            M: ['ee Mount', 'engem Mount'],\n            y: ['ee Joer', 'engem Joer'],\n        };\n        return withoutSuffix ? format[key][0] : format[key][1];\n    }\n    function processFutureTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'a ' + string;\n        }\n        return 'an ' + string;\n    }\n    function processPastTime(string) {\n        var number = string.substr(0, string.indexOf(' '));\n        if (eifelerRegelAppliesToNumber(number)) {\n            return 'viru ' + string;\n        }\n        return 'virun ' + string;\n    }\n    /**\n     * Returns true if the word before the given number loses the '-n' ending.\n     * e.g. 'an 10 Deeg' but 'a 5 Deeg'\n     *\n     * @param number {integer}\n     * @returns {boolean}\n     */\n    function eifelerRegelAppliesToNumber(number) {\n        number = parseInt(number, 10);\n        if (isNaN(number)) {\n            return false;\n        }\n        if (number < 0) {\n            // Negative Number --> always true\n            return true;\n        } else if (number < 10) {\n            // Only 1 digit\n            if (4 <= number && number <= 7) {\n                return true;\n            }\n            return false;\n        } else if (number < 100) {\n            // 2 digits\n            var lastDigit = number % 10,\n                firstDigit = number / 10;\n            if (lastDigit === 0) {\n                return eifelerRegelAppliesToNumber(firstDigit);\n            }\n            return eifelerRegelAppliesToNumber(lastDigit);\n        } else if (number < 10000) {\n            // 3 or 4 digits --> recursively check first digit\n            while (number >= 10) {\n                number = number / 10;\n            }\n            return eifelerRegelAppliesToNumber(number);\n        } else {\n            // Anything larger than 4 digits: recursively check first n-3 digits\n            number = number / 1000;\n            return eifelerRegelAppliesToNumber(number);\n        }\n    }\n\n    hooks.defineLocale('lb', {\n        months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n            '_'\n        ),\n        monthsShort:\n            'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays:\n            'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split(\n                '_'\n            ),\n        weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),\n        weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm [Auer]',\n            LTS: 'H:mm:ss [Auer]',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm [Auer]',\n            LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]',\n        },\n        calendar: {\n            sameDay: '[Haut um] LT',\n            sameElse: 'L',\n            nextDay: '[Muer um] LT',\n            nextWeek: 'dddd [um] LT',\n            lastDay: '[Gëschter um] LT',\n            lastWeek: function () {\n                // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule\n                switch (this.day()) {\n                    case 2:\n                    case 4:\n                        return '[Leschten] dddd [um] LT';\n                    default:\n                        return '[Leschte] dddd [um] LT';\n                }\n            },\n        },\n        relativeTime: {\n            future: processFutureTime,\n            past: processPastTime,\n            s: 'e puer Sekonnen',\n            ss: '%d Sekonnen',\n            m: processRelativeTime$8,\n            mm: '%d Minutten',\n            h: processRelativeTime$8,\n            hh: '%d Stonnen',\n            d: processRelativeTime$8,\n            dd: '%d Deeg',\n            M: processRelativeTime$8,\n            MM: '%d Méint',\n            y: processRelativeTime$8,\n            yy: '%d Joer',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('lo', {\n        months: 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(\n            '_'\n        ),\n        monthsShort:\n            'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split(\n                '_'\n            ),\n        weekdays: 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysShort: 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),\n        weekdaysMin: 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'ວັນdddd D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,\n        isPM: function (input) {\n            return input === 'ຕອນແລງ';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ຕອນເຊົ້າ';\n            } else {\n                return 'ຕອນແລງ';\n            }\n        },\n        calendar: {\n            sameDay: '[ມື້ນີ້ເວລາ] LT',\n            nextDay: '[ມື້ອື່ນເວລາ] LT',\n            nextWeek: '[ວັນ]dddd[ໜ້າເວລາ] LT',\n            lastDay: '[ມື້ວານນີ້ເວລາ] LT',\n            lastWeek: '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ອີກ %s',\n            past: '%sຜ່ານມາ',\n            s: 'ບໍ່ເທົ່າໃດວິນາທີ',\n            ss: '%d ວິນາທີ',\n            m: '1 ນາທີ',\n            mm: '%d ນາທີ',\n            h: '1 ຊົ່ວໂມງ',\n            hh: '%d ຊົ່ວໂມງ',\n            d: '1 ມື້',\n            dd: '%d ມື້',\n            M: '1 ເດືອນ',\n            MM: '%d ເດືອນ',\n            y: '1 ປີ',\n            yy: '%d ປີ',\n        },\n        dayOfMonthOrdinalParse: /(ທີ່)\\d{1,2}/,\n        ordinal: function (number) {\n            return 'ທີ່' + number;\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var units = {\n        ss: 'sekundė_sekundžių_sekundes',\n        m: 'minutė_minutės_minutę',\n        mm: 'minutės_minučių_minutes',\n        h: 'valanda_valandos_valandą',\n        hh: 'valandos_valandų_valandas',\n        d: 'diena_dienos_dieną',\n        dd: 'dienos_dienų_dienas',\n        M: 'mėnuo_mėnesio_mėnesį',\n        MM: 'mėnesiai_mėnesių_mėnesius',\n        y: 'metai_metų_metus',\n        yy: 'metai_metų_metus',\n    };\n    function translateSeconds(number, withoutSuffix, key, isFuture) {\n        if (withoutSuffix) {\n            return 'kelios sekundės';\n        } else {\n            return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n        }\n    }\n    function translateSingular(number, withoutSuffix, key, isFuture) {\n        return withoutSuffix\n            ? forms(key)[0]\n            : isFuture\n              ? forms(key)[1]\n              : forms(key)[2];\n    }\n    function special(number) {\n        return number % 10 === 0 || (number > 10 && number < 20);\n    }\n    function forms(key) {\n        return units[key].split('_');\n    }\n    function translate$6(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        if (number === 1) {\n            return (\n                result + translateSingular(number, withoutSuffix, key[0], isFuture)\n            );\n        } else if (withoutSuffix) {\n            return result + (special(number) ? forms(key)[1] : forms(key)[0]);\n        } else {\n            if (isFuture) {\n                return result + forms(key)[1];\n            } else {\n                return result + (special(number) ? forms(key)[1] : forms(key)[2]);\n            }\n        }\n    }\n    hooks.defineLocale('lt', {\n        months: {\n            format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split(\n                '_'\n            ),\n            standalone:\n                'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split(\n                    '_'\n                ),\n            isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/,\n        },\n        monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n        weekdays: {\n            format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split(\n                '_'\n            ),\n            standalone:\n                'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split(\n                    '_'\n                ),\n            isFormat: /dddd HH:mm/,\n        },\n        weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n        weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY [m.] MMMM D [d.]',\n            LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n            l: 'YYYY-MM-DD',\n            ll: 'YYYY [m.] MMMM D [d.]',\n            lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n            llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]',\n        },\n        calendar: {\n            sameDay: '[Šiandien] LT',\n            nextDay: '[Rytoj] LT',\n            nextWeek: 'dddd LT',\n            lastDay: '[Vakar] LT',\n            lastWeek: '[Praėjusį] dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'po %s',\n            past: 'prieš %s',\n            s: translateSeconds,\n            ss: translate$6,\n            m: translateSingular,\n            mm: translate$6,\n            h: translateSingular,\n            hh: translate$6,\n            d: translateSingular,\n            dd: translate$6,\n            M: translateSingular,\n            MM: translate$6,\n            y: translateSingular,\n            yy: translate$6,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n        ordinal: function (number) {\n            return number + '-oji';\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var units$1 = {\n        ss: 'sekundes_sekundēm_sekunde_sekundes'.split('_'),\n        m: 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        mm: 'minūtes_minūtēm_minūte_minūtes'.split('_'),\n        h: 'stundas_stundām_stunda_stundas'.split('_'),\n        hh: 'stundas_stundām_stunda_stundas'.split('_'),\n        d: 'dienas_dienām_diena_dienas'.split('_'),\n        dd: 'dienas_dienām_diena_dienas'.split('_'),\n        M: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        MM: 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),\n        y: 'gada_gadiem_gads_gadi'.split('_'),\n        yy: 'gada_gadiem_gads_gadi'.split('_'),\n    };\n    /**\n     * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.\n     */\n    function format$1(forms, number, withoutSuffix) {\n        if (withoutSuffix) {\n            // E.g. \"21 minūte\", \"3 minūtes\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];\n        } else {\n            // E.g. \"21 minūtes\" as in \"pēc 21 minūtes\".\n            // E.g. \"3 minūtēm\" as in \"pēc 3 minūtēm\".\n            return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];\n        }\n    }\n    function relativeTimeWithPlural$1(number, withoutSuffix, key) {\n        return number + ' ' + format$1(units$1[key], number, withoutSuffix);\n    }\n    function relativeTimeWithSingular(number, withoutSuffix, key) {\n        return format$1(units$1[key], number, withoutSuffix);\n    }\n    function relativeSeconds(number, withoutSuffix) {\n        return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';\n    }\n\n    hooks.defineLocale('lv', {\n        months: 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),\n        weekdays:\n            'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split(\n                '_'\n            ),\n        weekdaysShort: 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysMin: 'Sv_P_O_T_C_Pk_S'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY.',\n            LL: 'YYYY. [gada] D. MMMM',\n            LLL: 'YYYY. [gada] D. MMMM, HH:mm',\n            LLLL: 'YYYY. [gada] D. MMMM, dddd, HH:mm',\n        },\n        calendar: {\n            sameDay: '[Šodien pulksten] LT',\n            nextDay: '[Rīt pulksten] LT',\n            nextWeek: 'dddd [pulksten] LT',\n            lastDay: '[Vakar pulksten] LT',\n            lastWeek: '[Pagājušā] dddd [pulksten] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'pēc %s',\n            past: 'pirms %s',\n            s: relativeSeconds,\n            ss: relativeTimeWithPlural$1,\n            m: relativeTimeWithSingular,\n            mm: relativeTimeWithPlural$1,\n            h: relativeTimeWithSingular,\n            hh: relativeTimeWithPlural$1,\n            d: relativeTimeWithSingular,\n            dd: relativeTimeWithPlural$1,\n            M: relativeTimeWithSingular,\n            MM: relativeTimeWithPlural$1,\n            y: relativeTimeWithSingular,\n            yy: relativeTimeWithPlural$1,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var translator = {\n        words: {\n            //Different grammatical cases\n            ss: ['sekund', 'sekunda', 'sekundi'],\n            m: ['jedan minut', 'jednog minuta'],\n            mm: ['minut', 'minuta', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            dd: ['dan', 'dana', 'dana'],\n            MM: ['mjesec', 'mjeseca', 'mjeseci'],\n            yy: ['godina', 'godine', 'godina'],\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            return number === 1\n                ? wordKey[0]\n                : number >= 2 && number <= 4\n                  ? wordKey[1]\n                  : wordKey[2];\n        },\n        translate: function (number, withoutSuffix, key) {\n            var wordKey = translator.words[key];\n            if (key.length === 1) {\n                return withoutSuffix ? wordKey[0] : wordKey[1];\n            } else {\n                return (\n                    number +\n                    ' ' +\n                    translator.correctGrammaticalCase(number, wordKey)\n                );\n            }\n        },\n    };\n\n    hooks.defineLocale('me', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sjutra u] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay: '[juče u] LT',\n            lastWeek: function () {\n                var lastWeekDays = [\n                    '[prošle] [nedjelje] [u] LT',\n                    '[prošlog] [ponedjeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srijede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT',\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'prije %s',\n            s: 'nekoliko sekundi',\n            ss: translator.translate,\n            m: translator.translate,\n            mm: translator.translate,\n            h: translator.translate,\n            hh: translator.translate,\n            d: 'dan',\n            dd: translator.translate,\n            M: 'mjesec',\n            MM: translator.translate,\n            y: 'godinu',\n            yy: translator.translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('mi', {\n        months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split(\n            '_'\n        ),\n        monthsShort:\n            'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split(\n                '_'\n            ),\n        monthsRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,3}/i,\n        monthsShortStrictRegex: /(?:['a-z\\u0101\\u014D\\u016B]+\\-?){1,2}/i,\n        weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),\n        weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [i] HH:mm',\n            LLLL: 'dddd, D MMMM YYYY [i] HH:mm',\n        },\n        calendar: {\n            sameDay: '[i teie mahana, i] LT',\n            nextDay: '[apopo i] LT',\n            nextWeek: 'dddd [i] LT',\n            lastDay: '[inanahi i] LT',\n            lastWeek: 'dddd [whakamutunga i] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'i roto i %s',\n            past: '%s i mua',\n            s: 'te hēkona ruarua',\n            ss: '%d hēkona',\n            m: 'he meneti',\n            mm: '%d meneti',\n            h: 'te haora',\n            hh: '%d haora',\n            d: 'he ra',\n            dd: '%d ra',\n            M: 'he marama',\n            MM: '%d marama',\n            y: 'he tau',\n            yy: '%d tau',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('mk', {\n        months: 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split(\n            '_'\n        ),\n        monthsShort: 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),\n        weekdays: 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split(\n            '_'\n        ),\n        weekdaysShort: 'нед_пон_вто_сре_чет_пет_саб'.split('_'),\n        weekdaysMin: 'нe_пo_вт_ср_че_пе_сa'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'D.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY H:mm',\n            LLLL: 'dddd, D MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[Денес во] LT',\n            nextDay: '[Утре во] LT',\n            nextWeek: '[Во] dddd [во] LT',\n            lastDay: '[Вчера во] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 6:\n                        return '[Изминатата] dddd [во] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[Изминатиот] dddd [во] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'за %s',\n            past: 'пред %s',\n            s: 'неколку секунди',\n            ss: '%d секунди',\n            m: 'една минута',\n            mm: '%d минути',\n            h: 'еден час',\n            hh: '%d часа',\n            d: 'еден ден',\n            dd: '%d дена',\n            M: 'еден месец',\n            MM: '%d месеци',\n            y: 'една година',\n            yy: '%d години',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n        ordinal: function (number) {\n            var lastDigit = number % 10,\n                last2Digits = number % 100;\n            if (number === 0) {\n                return number + '-ев';\n            } else if (last2Digits === 0) {\n                return number + '-ен';\n            } else if (last2Digits > 10 && last2Digits < 20) {\n                return number + '-ти';\n            } else if (lastDigit === 1) {\n                return number + '-ви';\n            } else if (lastDigit === 2) {\n                return number + '-ри';\n            } else if (lastDigit === 7 || lastDigit === 8) {\n                return number + '-ми';\n            } else {\n                return number + '-ти';\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ml', {\n        months: 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split(\n            '_'\n        ),\n        monthsShort:\n            'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays:\n            'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split(\n                '_'\n            ),\n        weekdaysShort: 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),\n        weekdaysMin: 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm -നു',\n            LTS: 'A h:mm:ss -നു',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm -നു',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm -നു',\n        },\n        calendar: {\n            sameDay: '[ഇന്ന്] LT',\n            nextDay: '[നാളെ] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[ഇന്നലെ] LT',\n            lastWeek: '[കഴിഞ്ഞ] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s കഴിഞ്ഞ്',\n            past: '%s മുൻപ്',\n            s: 'അൽപ നിമിഷങ്ങൾ',\n            ss: '%d സെക്കൻഡ്',\n            m: 'ഒരു മിനിറ്റ്',\n            mm: '%d മിനിറ്റ്',\n            h: 'ഒരു മണിക്കൂർ',\n            hh: '%d മണിക്കൂർ',\n            d: 'ഒരു ദിവസം',\n            dd: '%d ദിവസം',\n            M: 'ഒരു മാസം',\n            MM: '%d മാസം',\n            y: 'ഒരു വർഷം',\n            yy: '%d വർഷം',\n        },\n        meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                (meridiem === 'രാത്രി' && hour >= 4) ||\n                meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||\n                meridiem === 'വൈകുന്നേരം'\n            ) {\n                return hour + 12;\n            } else {\n                return hour;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'രാത്രി';\n            } else if (hour < 12) {\n                return 'രാവിലെ';\n            } else if (hour < 17) {\n                return 'ഉച്ച കഴിഞ്ഞ്';\n            } else if (hour < 20) {\n                return 'വൈകുന്നേരം';\n            } else {\n                return 'രാത്രി';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function translate$7(number, withoutSuffix, key, isFuture) {\n        switch (key) {\n            case 's':\n                return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n            case 'ss':\n                return number + (withoutSuffix ? ' секунд' : ' секундын');\n            case 'm':\n            case 'mm':\n                return number + (withoutSuffix ? ' минут' : ' минутын');\n            case 'h':\n            case 'hh':\n                return number + (withoutSuffix ? ' цаг' : ' цагийн');\n            case 'd':\n            case 'dd':\n                return number + (withoutSuffix ? ' өдөр' : ' өдрийн');\n            case 'M':\n            case 'MM':\n                return number + (withoutSuffix ? ' сар' : ' сарын');\n            case 'y':\n            case 'yy':\n                return number + (withoutSuffix ? ' жил' : ' жилийн');\n            default:\n                return number;\n        }\n    }\n\n    hooks.defineLocale('mn', {\n        months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split(\n            '_'\n        ),\n        monthsShort:\n            '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n        weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n        weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY оны MMMMын D',\n            LLL: 'YYYY оны MMMMын D HH:mm',\n            LLLL: 'dddd, YYYY оны MMMMын D HH:mm',\n        },\n        meridiemParse: /ҮӨ|ҮХ/i,\n        isPM: function (input) {\n            return input === 'ҮХ';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ҮӨ';\n            } else {\n                return 'ҮХ';\n            }\n        },\n        calendar: {\n            sameDay: '[Өнөөдөр] LT',\n            nextDay: '[Маргааш] LT',\n            nextWeek: '[Ирэх] dddd LT',\n            lastDay: '[Өчигдөр] LT',\n            lastWeek: '[Өнгөрсөн] dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s дараа',\n            past: '%s өмнө',\n            s: translate$7,\n            ss: translate$7,\n            m: translate$7,\n            mm: translate$7,\n            h: translate$7,\n            hh: translate$7,\n            d: translate$7,\n            dd: translate$7,\n            M: translate$7,\n            MM: translate$7,\n            y: translate$7,\n            yy: translate$7,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + ' өдөр';\n                default:\n                    return number;\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$d = {\n            1: '१',\n            2: '२',\n            3: '३',\n            4: '४',\n            5: '५',\n            6: '६',\n            7: '७',\n            8: '८',\n            9: '९',\n            0: '०',\n        },\n        numberMap$c = {\n            '१': '1',\n            '२': '2',\n            '३': '3',\n            '४': '4',\n            '५': '5',\n            '६': '6',\n            '७': '7',\n            '८': '8',\n            '९': '9',\n            '०': '0',\n        };\n\n    function relativeTimeMr(number, withoutSuffix, string, isFuture) {\n        var output = '';\n        if (withoutSuffix) {\n            switch (string) {\n                case 's':\n                    output = 'काही सेकंद';\n                    break;\n                case 'ss':\n                    output = '%d सेकंद';\n                    break;\n                case 'm':\n                    output = 'एक मिनिट';\n                    break;\n                case 'mm':\n                    output = '%d मिनिटे';\n                    break;\n                case 'h':\n                    output = 'एक तास';\n                    break;\n                case 'hh':\n                    output = '%d तास';\n                    break;\n                case 'd':\n                    output = 'एक दिवस';\n                    break;\n                case 'dd':\n                    output = '%d दिवस';\n                    break;\n                case 'M':\n                    output = 'एक महिना';\n                    break;\n                case 'MM':\n                    output = '%d महिने';\n                    break;\n                case 'y':\n                    output = 'एक वर्ष';\n                    break;\n                case 'yy':\n                    output = '%d वर्षे';\n                    break;\n            }\n        } else {\n            switch (string) {\n                case 's':\n                    output = 'काही सेकंदां';\n                    break;\n                case 'ss':\n                    output = '%d सेकंदां';\n                    break;\n                case 'm':\n                    output = 'एका मिनिटा';\n                    break;\n                case 'mm':\n                    output = '%d मिनिटां';\n                    break;\n                case 'h':\n                    output = 'एका तासा';\n                    break;\n                case 'hh':\n                    output = '%d तासां';\n                    break;\n                case 'd':\n                    output = 'एका दिवसा';\n                    break;\n                case 'dd':\n                    output = '%d दिवसां';\n                    break;\n                case 'M':\n                    output = 'एका महिन्या';\n                    break;\n                case 'MM':\n                    output = '%d महिन्यां';\n                    break;\n                case 'y':\n                    output = 'एका वर्षा';\n                    break;\n                case 'yy':\n                    output = '%d वर्षां';\n                    break;\n            }\n        }\n        return output.replace(/%d/i, number);\n    }\n\n    hooks.defineLocale('mr', {\n        months: 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split(\n            '_'\n        ),\n        monthsShort:\n            'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n        weekdaysShort: 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),\n        weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm वाजता',\n            LTS: 'A h:mm:ss वाजता',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm वाजता',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm वाजता',\n        },\n        calendar: {\n            sameDay: '[आज] LT',\n            nextDay: '[उद्या] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[काल] LT',\n            lastWeek: '[मागील] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%sमध्ये',\n            past: '%sपूर्वी',\n            s: relativeTimeMr,\n            ss: relativeTimeMr,\n            m: relativeTimeMr,\n            mm: relativeTimeMr,\n            h: relativeTimeMr,\n            hh: relativeTimeMr,\n            d: relativeTimeMr,\n            dd: relativeTimeMr,\n            M: relativeTimeMr,\n            MM: relativeTimeMr,\n            y: relativeTimeMr,\n            yy: relativeTimeMr,\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap$c[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$d[match];\n            });\n        },\n        meridiemParse: /पहाटे|सकाळी|दुपारी|सायंकाळी|रात्री/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'पहाटे' || meridiem === 'सकाळी') {\n                return hour;\n            } else if (\n                meridiem === 'दुपारी' ||\n                meridiem === 'सायंकाळी' ||\n                meridiem === 'रात्री'\n            ) {\n                return hour >= 12 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour >= 0 && hour < 6) {\n                return 'पहाटे';\n            } else if (hour < 12) {\n                return 'सकाळी';\n            } else if (hour < 17) {\n                return 'दुपारी';\n            } else if (hour < 20) {\n                return 'सायंकाळी';\n            } else {\n                return 'रात्री';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ms-my', {\n        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [pukul] HH.mm',\n            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar: {\n            sameDay: '[Hari ini pukul] LT',\n            nextDay: '[Esok pukul] LT',\n            nextWeek: 'dddd [pukul] LT',\n            lastDay: '[Kelmarin pukul] LT',\n            lastWeek: 'dddd [lepas pukul] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dalam %s',\n            past: '%s yang lepas',\n            s: 'beberapa saat',\n            ss: '%d saat',\n            m: 'seminit',\n            mm: '%d minit',\n            h: 'sejam',\n            hh: '%d jam',\n            d: 'sehari',\n            dd: '%d hari',\n            M: 'sebulan',\n            MM: '%d bulan',\n            y: 'setahun',\n            yy: '%d tahun',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ms', {\n        months: 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),\n        weekdays: 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),\n        weekdaysShort: 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),\n        weekdaysMin: 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [pukul] HH.mm',\n            LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm',\n        },\n        meridiemParse: /pagi|tengahari|petang|malam/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'pagi') {\n                return hour;\n            } else if (meridiem === 'tengahari') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'petang' || meridiem === 'malam') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'pagi';\n            } else if (hours < 15) {\n                return 'tengahari';\n            } else if (hours < 19) {\n                return 'petang';\n            } else {\n                return 'malam';\n            }\n        },\n        calendar: {\n            sameDay: '[Hari ini pukul] LT',\n            nextDay: '[Esok pukul] LT',\n            nextWeek: 'dddd [pukul] LT',\n            lastDay: '[Kelmarin pukul] LT',\n            lastWeek: 'dddd [lepas pukul] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dalam %s',\n            past: '%s yang lepas',\n            s: 'beberapa saat',\n            ss: '%d saat',\n            m: 'seminit',\n            mm: '%d minit',\n            h: 'sejam',\n            hh: '%d jam',\n            d: 'sehari',\n            dd: '%d hari',\n            M: 'sebulan',\n            MM: '%d bulan',\n            y: 'setahun',\n            yy: '%d tahun',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('mt', {\n        months: 'Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ'.split('_'),\n        weekdays:\n            'Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt'.split(\n                '_'\n            ),\n        weekdaysShort: 'Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib'.split('_'),\n        weekdaysMin: 'Ħa_Tn_Tl_Er_Ħa_Ġi_Si'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Illum fil-]LT',\n            nextDay: '[Għada fil-]LT',\n            nextWeek: 'dddd [fil-]LT',\n            lastDay: '[Il-bieraħ fil-]LT',\n            lastWeek: 'dddd [li għadda] [fil-]LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'f’ %s',\n            past: '%s ilu',\n            s: 'ftit sekondi',\n            ss: '%d sekondi',\n            m: 'minuta',\n            mm: '%d minuti',\n            h: 'siegħa',\n            hh: '%d siegħat',\n            d: 'ġurnata',\n            dd: '%d ġranet',\n            M: 'xahar',\n            MM: '%d xhur',\n            y: 'sena',\n            yy: '%d sni',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$e = {\n            1: '၁',\n            2: '၂',\n            3: '၃',\n            4: '၄',\n            5: '၅',\n            6: '၆',\n            7: '၇',\n            8: '၈',\n            9: '၉',\n            0: '၀',\n        },\n        numberMap$d = {\n            '၁': '1',\n            '၂': '2',\n            '၃': '3',\n            '၄': '4',\n            '၅': '5',\n            '၆': '6',\n            '၇': '7',\n            '၈': '8',\n            '၉': '9',\n            '၀': '0',\n        };\n\n    hooks.defineLocale('my', {\n        months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split(\n            '_'\n        ),\n        monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),\n        weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split(\n            '_'\n        ),\n        weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n        weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),\n\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[ယနေ.] LT [မှာ]',\n            nextDay: '[မနက်ဖြန်] LT [မှာ]',\n            nextWeek: 'dddd LT [မှာ]',\n            lastDay: '[မနေ.က] LT [မှာ]',\n            lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'လာမည့် %s မှာ',\n            past: 'လွန်ခဲ့သော %s က',\n            s: 'စက္ကန်.အနည်းငယ်',\n            ss: '%d စက္ကန့်',\n            m: 'တစ်မိနစ်',\n            mm: '%d မိနစ်',\n            h: 'တစ်နာရီ',\n            hh: '%d နာရီ',\n            d: 'တစ်ရက်',\n            dd: '%d ရက်',\n            M: 'တစ်လ',\n            MM: '%d လ',\n            y: 'တစ်နှစ်',\n            yy: '%d နှစ်',\n        },\n        preparse: function (string) {\n            return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {\n                return numberMap$d[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$e[match];\n            });\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('nb', {\n        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n        weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n        weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY [kl.] HH:mm',\n            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',\n        },\n        calendar: {\n            sameDay: '[i dag kl.] LT',\n            nextDay: '[i morgen kl.] LT',\n            nextWeek: 'dddd [kl.] LT',\n            lastDay: '[i går kl.] LT',\n            lastWeek: '[forrige] dddd [kl.] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'om %s',\n            past: '%s siden',\n            s: 'noen sekunder',\n            ss: '%d sekunder',\n            m: 'ett minutt',\n            mm: '%d minutter',\n            h: 'én time',\n            hh: '%d timer',\n            d: 'én dag',\n            dd: '%d dager',\n            w: 'én uke',\n            ww: '%d uker',\n            M: 'én måned',\n            MM: '%d måneder',\n            y: 'ett år',\n            yy: '%d år',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$f = {\n            1: '१',\n            2: '२',\n            3: '३',\n            4: '४',\n            5: '५',\n            6: '६',\n            7: '७',\n            8: '८',\n            9: '९',\n            0: '०',\n        },\n        numberMap$e = {\n            '१': '1',\n            '२': '2',\n            '३': '3',\n            '४': '4',\n            '५': '5',\n            '६': '6',\n            '७': '7',\n            '८': '8',\n            '९': '9',\n            '०': '0',\n        };\n\n    hooks.defineLocale('ne', {\n        months: 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split(\n            '_'\n        ),\n        monthsShort:\n            'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split(\n            '_'\n        ),\n        weekdaysShort: 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),\n        weekdaysMin: 'आ._सो._मं._बु._बि._शु._श.'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'Aको h:mm बजे',\n            LTS: 'Aको h:mm:ss बजे',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, Aको h:mm बजे',\n            LLLL: 'dddd, D MMMM YYYY, Aको h:mm बजे',\n        },\n        preparse: function (string) {\n            return string.replace(/[१२३४५६७८९०]/g, function (match) {\n                return numberMap$e[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$f[match];\n            });\n        },\n        meridiemParse: /राति|बिहान|दिउँसो|साँझ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'राति') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'बिहान') {\n                return hour;\n            } else if (meridiem === 'दिउँसो') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'साँझ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 3) {\n                return 'राति';\n            } else if (hour < 12) {\n                return 'बिहान';\n            } else if (hour < 16) {\n                return 'दिउँसो';\n            } else if (hour < 20) {\n                return 'साँझ';\n            } else {\n                return 'राति';\n            }\n        },\n        calendar: {\n            sameDay: '[आज] LT',\n            nextDay: '[भोलि] LT',\n            nextWeek: '[आउँदो] dddd[,] LT',\n            lastDay: '[हिजो] LT',\n            lastWeek: '[गएको] dddd[,] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%sमा',\n            past: '%s अगाडि',\n            s: 'केही क्षण',\n            ss: '%d सेकेण्ड',\n            m: 'एक मिनेट',\n            mm: '%d मिनेट',\n            h: 'एक घण्टा',\n            hh: '%d घण्टा',\n            d: 'एक दिन',\n            dd: '%d दिन',\n            M: 'एक महिना',\n            MM: '%d महिना',\n            y: 'एक बर्ष',\n            yy: '%d बर्ष',\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortWithDots$1 =\n            'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots$1 =\n            'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        monthsParse$8 = [\n            /^jan/i,\n            /^feb/i,\n            /^(maart|mrt\\.?)$/i,\n            /^apr/i,\n            /^mei$/i,\n            /^jun[i.]?$/i,\n            /^jul[i.]?$/i,\n            /^aug/i,\n            /^sep/i,\n            /^okt/i,\n            /^nov/i,\n            /^dec/i,\n        ],\n        monthsRegex$8 =\n            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    hooks.defineLocale('nl-be', {\n        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortWithDots$1;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots$1[m.month()];\n            } else {\n                return monthsShortWithDots$1[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex$8,\n        monthsShortRegex: monthsRegex$8,\n        monthsStrictRegex:\n            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex:\n            /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse: monthsParse$8,\n        longMonthsParse: monthsParse$8,\n        shortMonthsParse: monthsParse$8,\n\n        weekdays:\n            'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'over %s',\n            past: '%s geleden',\n            s: 'een paar seconden',\n            ss: '%d seconden',\n            m: 'één minuut',\n            mm: '%d minuten',\n            h: 'één uur',\n            hh: '%d uur',\n            d: 'één dag',\n            dd: '%d dagen',\n            M: 'één maand',\n            MM: '%d maanden',\n            y: 'één jaar',\n            yy: '%d jaar',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal: function (number) {\n            return (\n                number +\n                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')\n            );\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsShortWithDots$2 =\n            'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n        monthsShortWithoutDots$2 =\n            'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        monthsParse$9 = [\n            /^jan/i,\n            /^feb/i,\n            /^(maart|mrt\\.?)$/i,\n            /^apr/i,\n            /^mei$/i,\n            /^jun[i.]?$/i,\n            /^jul[i.]?$/i,\n            /^aug/i,\n            /^sep/i,\n            /^okt/i,\n            /^nov/i,\n            /^dec/i,\n        ],\n        monthsRegex$9 =\n            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n    hooks.defineLocale('nl', {\n        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort: function (m, format) {\n            if (!m) {\n                return monthsShortWithDots$2;\n            } else if (/-MMM-/.test(format)) {\n                return monthsShortWithoutDots$2[m.month()];\n            } else {\n                return monthsShortWithDots$2[m.month()];\n            }\n        },\n\n        monthsRegex: monthsRegex$9,\n        monthsShortRegex: monthsRegex$9,\n        monthsStrictRegex:\n            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n        monthsShortStrictRegex:\n            /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n        monthsParse: monthsParse$9,\n        longMonthsParse: monthsParse$9,\n        shortMonthsParse: monthsParse$9,\n\n        weekdays:\n            'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD-MM-YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[vandaag om] LT',\n            nextDay: '[morgen om] LT',\n            nextWeek: 'dddd [om] LT',\n            lastDay: '[gisteren om] LT',\n            lastWeek: '[afgelopen] dddd [om] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'over %s',\n            past: '%s geleden',\n            s: 'een paar seconden',\n            ss: '%d seconden',\n            m: 'één minuut',\n            mm: '%d minuten',\n            h: 'één uur',\n            hh: '%d uur',\n            d: 'één dag',\n            dd: '%d dagen',\n            w: 'één week',\n            ww: '%d weken',\n            M: 'één maand',\n            MM: '%d maanden',\n            y: 'één jaar',\n            yy: '%d jaar',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n        ordinal: function (number) {\n            return (\n                number +\n                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')\n            );\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('nn', {\n        months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._mars_apr._mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),\n        weekdaysShort: 'su._må._ty._on._to._fr._lau.'.split('_'),\n        weekdaysMin: 'su_må_ty_on_to_fr_la'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY [kl.] H:mm',\n            LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm',\n        },\n        calendar: {\n            sameDay: '[I dag klokka] LT',\n            nextDay: '[I morgon klokka] LT',\n            nextWeek: 'dddd [klokka] LT',\n            lastDay: '[I går klokka] LT',\n            lastWeek: '[Føregåande] dddd [klokka] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'om %s',\n            past: '%s sidan',\n            s: 'nokre sekund',\n            ss: '%d sekund',\n            m: 'eit minutt',\n            mm: '%d minutt',\n            h: 'ein time',\n            hh: '%d timar',\n            d: 'ein dag',\n            dd: '%d dagar',\n            w: 'ei veke',\n            ww: '%d veker',\n            M: 'ein månad',\n            MM: '%d månader',\n            y: 'eit år',\n            yy: '%d år',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('oc-lnc', {\n        months: {\n            standalone:\n                'genièr_febrièr_març_abril_mai_junh_julhet_agost_setembre_octòbre_novembre_decembre'.split(\n                    '_'\n                ),\n            format: \"de genièr_de febrièr_de març_d'abril_de mai_de junh_de julhet_d'agost_de setembre_d'octòbre_de novembre_de decembre\".split(\n                '_'\n            ),\n            isFormat: /D[oD]?(\\s)+MMMM/,\n        },\n        monthsShort:\n            'gen._febr._març_abr._mai_junh_julh._ago._set._oct._nov._dec.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'dimenge_diluns_dimars_dimècres_dijòus_divendres_dissabte'.split(\n            '_'\n        ),\n        weekdaysShort: 'dg._dl._dm._dc._dj._dv._ds.'.split('_'),\n        weekdaysMin: 'dg_dl_dm_dc_dj_dv_ds'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM [de] YYYY',\n            ll: 'D MMM YYYY',\n            LLL: 'D MMMM [de] YYYY [a] H:mm',\n            lll: 'D MMM YYYY, H:mm',\n            LLLL: 'dddd D MMMM [de] YYYY [a] H:mm',\n            llll: 'ddd D MMM YYYY, H:mm',\n        },\n        calendar: {\n            sameDay: '[uèi a] LT',\n            nextDay: '[deman a] LT',\n            nextWeek: 'dddd [a] LT',\n            lastDay: '[ièr a] LT',\n            lastWeek: 'dddd [passat a] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: \"d'aquí %s\",\n            past: 'fa %s',\n            s: 'unas segondas',\n            ss: '%d segondas',\n            m: 'una minuta',\n            mm: '%d minutas',\n            h: 'una ora',\n            hh: '%d oras',\n            d: 'un jorn',\n            dd: '%d jorns',\n            M: 'un mes',\n            MM: '%d meses',\n            y: 'un an',\n            yy: '%d ans',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(r|n|t|è|a)/,\n        ordinal: function (number, period) {\n            var output =\n                number === 1\n                    ? 'r'\n                    : number === 2\n                      ? 'n'\n                      : number === 3\n                        ? 'r'\n                        : number === 4\n                          ? 't'\n                          : 'è';\n            if (period === 'w' || period === 'W') {\n                output = 'a';\n            }\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4,\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$g = {\n            1: '੧',\n            2: '੨',\n            3: '੩',\n            4: '੪',\n            5: '੫',\n            6: '੬',\n            7: '੭',\n            8: '੮',\n            9: '੯',\n            0: '੦',\n        },\n        numberMap$f = {\n            '੧': '1',\n            '੨': '2',\n            '੩': '3',\n            '੪': '4',\n            '੫': '5',\n            '੬': '6',\n            '੭': '7',\n            '੮': '8',\n            '੯': '9',\n            '੦': '0',\n        };\n\n    hooks.defineLocale('pa-in', {\n        // There are months name as per Nanakshahi Calendar but they are not used as rigidly in modern Punjabi.\n        months: 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(\n            '_'\n        ),\n        monthsShort:\n            'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split(\n                '_'\n            ),\n        weekdays: 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split(\n            '_'\n        ),\n        weekdaysShort: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        weekdaysMin: 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm ਵਜੇ',\n            LTS: 'A h:mm:ss ਵਜੇ',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm ਵਜੇ',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm ਵਜੇ',\n        },\n        calendar: {\n            sameDay: '[ਅਜ] LT',\n            nextDay: '[ਕਲ] LT',\n            nextWeek: '[ਅਗਲਾ] dddd, LT',\n            lastDay: '[ਕਲ] LT',\n            lastWeek: '[ਪਿਛਲੇ] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s ਵਿੱਚ',\n            past: '%s ਪਿਛਲੇ',\n            s: 'ਕੁਝ ਸਕਿੰਟ',\n            ss: '%d ਸਕਿੰਟ',\n            m: 'ਇਕ ਮਿੰਟ',\n            mm: '%d ਮਿੰਟ',\n            h: 'ਇੱਕ ਘੰਟਾ',\n            hh: '%d ਘੰਟੇ',\n            d: 'ਇੱਕ ਦਿਨ',\n            dd: '%d ਦਿਨ',\n            M: 'ਇੱਕ ਮਹੀਨਾ',\n            MM: '%d ਮਹੀਨੇ',\n            y: 'ਇੱਕ ਸਾਲ',\n            yy: '%d ਸਾਲ',\n        },\n        preparse: function (string) {\n            return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {\n                return numberMap$f[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$g[match];\n            });\n        },\n        // Punjabi notation for meridiems are quite fuzzy in practice. While there exists\n        // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.\n        meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ਰਾਤ') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ਸਵੇਰ') {\n                return hour;\n            } else if (meridiem === 'ਦੁਪਹਿਰ') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'ਸ਼ਾਮ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ਰਾਤ';\n            } else if (hour < 10) {\n                return 'ਸਵੇਰ';\n            } else if (hour < 17) {\n                return 'ਦੁਪਹਿਰ';\n            } else if (hour < 20) {\n                return 'ਸ਼ਾਮ';\n            } else {\n                return 'ਰਾਤ';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var monthsNominative =\n            'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(\n                '_'\n            ),\n        monthsSubjective =\n            'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(\n                '_'\n            ),\n        monthsParse$a = [\n            /^sty/i,\n            /^lut/i,\n            /^mar/i,\n            /^kwi/i,\n            /^maj/i,\n            /^cze/i,\n            /^lip/i,\n            /^sie/i,\n            /^wrz/i,\n            /^paź/i,\n            /^lis/i,\n            /^gru/i,\n        ];\n    function plural$3(n) {\n        return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;\n    }\n    function translate$8(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                return result + (plural$3(number) ? 'sekundy' : 'sekund');\n            case 'm':\n                return withoutSuffix ? 'minuta' : 'minutę';\n            case 'mm':\n                return result + (plural$3(number) ? 'minuty' : 'minut');\n            case 'h':\n                return withoutSuffix ? 'godzina' : 'godzinę';\n            case 'hh':\n                return result + (plural$3(number) ? 'godziny' : 'godzin');\n            case 'ww':\n                return result + (plural$3(number) ? 'tygodnie' : 'tygodni');\n            case 'MM':\n                return result + (plural$3(number) ? 'miesiące' : 'miesięcy');\n            case 'yy':\n                return result + (plural$3(number) ? 'lata' : 'lat');\n        }\n    }\n\n    hooks.defineLocale('pl', {\n        months: function (momentToFormat, format) {\n            if (!momentToFormat) {\n                return monthsNominative;\n            } else if (/D MMMM/.test(format)) {\n                return monthsSubjective[momentToFormat.month()];\n            } else {\n                return monthsNominative[momentToFormat.month()];\n            }\n        },\n        monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n        monthsParse: monthsParse$a,\n        longMonthsParse: monthsParse$a,\n        shortMonthsParse: monthsParse$a,\n        weekdays:\n            'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n        weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n        weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Dziś o] LT',\n            nextDay: '[Jutro o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W niedzielę o] LT';\n\n                    case 2:\n                        return '[We wtorek o] LT';\n\n                    case 3:\n                        return '[W środę o] LT';\n\n                    case 6:\n                        return '[W sobotę o] LT';\n\n                    default:\n                        return '[W] dddd [o] LT';\n                }\n            },\n            lastDay: '[Wczoraj o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[W zeszłą niedzielę o] LT';\n                    case 3:\n                        return '[W zeszłą środę o] LT';\n                    case 6:\n                        return '[W zeszłą sobotę o] LT';\n                    default:\n                        return '[W zeszły] dddd [o] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: '%s temu',\n            s: 'kilka sekund',\n            ss: translate$8,\n            m: translate$8,\n            mm: translate$8,\n            h: translate$8,\n            hh: translate$8,\n            d: '1 dzień',\n            dd: '%d dni',\n            w: 'tydzień',\n            ww: translate$8,\n            M: 'miesiąc',\n            MM: translate$8,\n            y: 'rok',\n            yy: translate$8,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('pt-br', {\n        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(\n            '_'\n        ),\n        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays:\n            'domingo_segunda-feira_terça-feira_quarta-feira_quinta-feira_sexta-feira_sábado'.split(\n                '_'\n            ),\n        weekdaysShort: 'dom_seg_ter_qua_qui_sex_sáb'.split('_'),\n        weekdaysMin: 'do_2ª_3ª_4ª_5ª_6ª_sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm',\n        },\n        calendar: {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return this.day() === 0 || this.day() === 6\n                    ? '[Último] dddd [às] LT' // Saturday + Sunday\n                    : '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'em %s',\n            past: 'há %s',\n            s: 'poucos segundos',\n            ss: '%d segundos',\n            m: 'um minuto',\n            mm: '%d minutos',\n            h: 'uma hora',\n            hh: '%d horas',\n            d: 'um dia',\n            dd: '%d dias',\n            M: 'um mês',\n            MM: '%d meses',\n            y: 'um ano',\n            yy: '%d anos',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        invalidDate: 'Data inválida',\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('pt', {\n        months: 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split(\n            '_'\n        ),\n        monthsShort: 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),\n        weekdays:\n            'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split(\n                '_'\n            ),\n        weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n        weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D [de] MMMM [de] YYYY',\n            LLL: 'D [de] MMMM [de] YYYY HH:mm',\n            LLLL: 'dddd, D [de] MMMM [de] YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Hoje às] LT',\n            nextDay: '[Amanhã às] LT',\n            nextWeek: 'dddd [às] LT',\n            lastDay: '[Ontem às] LT',\n            lastWeek: function () {\n                return this.day() === 0 || this.day() === 6\n                    ? '[Último] dddd [às] LT' // Saturday + Sunday\n                    : '[Última] dddd [às] LT'; // Monday - Friday\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'em %s',\n            past: 'há %s',\n            s: 'segundos',\n            ss: '%d segundos',\n            m: 'um minuto',\n            mm: '%d minutos',\n            h: 'uma hora',\n            hh: '%d horas',\n            d: 'um dia',\n            dd: '%d dias',\n            w: 'uma semana',\n            ww: '%d semanas',\n            M: 'um mês',\n            MM: '%d meses',\n            y: 'um ano',\n            yy: '%d anos',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n        ordinal: '%dº',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function relativeTimeWithPlural$2(number, withoutSuffix, key) {\n        var format = {\n                ss: 'secunde',\n                mm: 'minute',\n                hh: 'ore',\n                dd: 'zile',\n                ww: 'săptămâni',\n                MM: 'luni',\n                yy: 'ani',\n            },\n            separator = ' ';\n        if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {\n            separator = ' de ';\n        }\n        return number + separator + format[key];\n    }\n\n    hooks.defineLocale('ro', {\n        months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split(\n            '_'\n        ),\n        monthsShort:\n            'ian._feb._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n        weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n        weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY H:mm',\n            LLLL: 'dddd, D MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[azi la] LT',\n            nextDay: '[mâine la] LT',\n            nextWeek: 'dddd [la] LT',\n            lastDay: '[ieri la] LT',\n            lastWeek: '[fosta] dddd [la] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'peste %s',\n            past: '%s în urmă',\n            s: 'câteva secunde',\n            ss: relativeTimeWithPlural$2,\n            m: 'un minut',\n            mm: relativeTimeWithPlural$2,\n            h: 'o oră',\n            hh: relativeTimeWithPlural$2,\n            d: 'o zi',\n            dd: relativeTimeWithPlural$2,\n            w: 'o săptămână',\n            ww: relativeTimeWithPlural$2,\n            M: 'o lună',\n            MM: relativeTimeWithPlural$2,\n            y: 'un an',\n            yy: relativeTimeWithPlural$2,\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function plural$4(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11\n            ? forms[0]\n            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n              ? forms[1]\n              : forms[2];\n    }\n    function relativeTimeWithPlural$3(number, withoutSuffix, key) {\n        var format = {\n            ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n            mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n            hh: 'час_часа_часов',\n            dd: 'день_дня_дней',\n            ww: 'неделя_недели_недель',\n            MM: 'месяц_месяца_месяцев',\n            yy: 'год_года_лет',\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'минута' : 'минуту';\n        } else {\n            return number + ' ' + plural$4(format[key], +number);\n        }\n    }\n    var monthsParse$b = [\n        /^янв/i,\n        /^фев/i,\n        /^мар/i,\n        /^апр/i,\n        /^ма[йя]/i,\n        /^июн/i,\n        /^июл/i,\n        /^авг/i,\n        /^сен/i,\n        /^окт/i,\n        /^ноя/i,\n        /^дек/i,\n    ];\n\n    // http://new.gramota.ru/spravka/rules/139-prop : § 103\n    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n    hooks.defineLocale('ru', {\n        months: {\n            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(\n                '_'\n            ),\n            standalone:\n                'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(\n                    '_'\n                ),\n        },\n        monthsShort: {\n            // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку?\n            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(\n                '_'\n            ),\n            standalone:\n                'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(\n                    '_'\n                ),\n        },\n        weekdays: {\n            standalone:\n                'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(\n                    '_'\n                ),\n            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(\n                '_'\n            ),\n            isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/,\n        },\n        weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n        monthsParse: monthsParse$b,\n        longMonthsParse: monthsParse$b,\n        shortMonthsParse: monthsParse$b,\n\n        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n        monthsRegex:\n            /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // копия предыдущего\n        monthsShortRegex:\n            /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n        // полные названия с падежами\n        monthsStrictRegex:\n            /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n        // Выражение, которое соответствует только сокращённым формам\n        monthsShortStrictRegex:\n            /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY г.',\n            LLL: 'D MMMM YYYY г., H:mm',\n            LLLL: 'dddd, D MMMM YYYY г., H:mm',\n        },\n        calendar: {\n            sameDay: '[Сегодня, в] LT',\n            nextDay: '[Завтра, в] LT',\n            lastDay: '[Вчера, в] LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В следующее] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В следующий] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В следующую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            lastWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    switch (this.day()) {\n                        case 0:\n                            return '[В прошлое] dddd, [в] LT';\n                        case 1:\n                        case 2:\n                        case 4:\n                            return '[В прошлый] dddd, [в] LT';\n                        case 3:\n                        case 5:\n                        case 6:\n                            return '[В прошлую] dddd, [в] LT';\n                    }\n                } else {\n                    if (this.day() === 2) {\n                        return '[Во] dddd, [в] LT';\n                    } else {\n                        return '[В] dddd, [в] LT';\n                    }\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'через %s',\n            past: '%s назад',\n            s: 'несколько секунд',\n            ss: relativeTimeWithPlural$3,\n            m: relativeTimeWithPlural$3,\n            mm: relativeTimeWithPlural$3,\n            h: 'час',\n            hh: relativeTimeWithPlural$3,\n            d: 'день',\n            dd: relativeTimeWithPlural$3,\n            w: 'неделя',\n            ww: relativeTimeWithPlural$3,\n            M: 'месяц',\n            MM: relativeTimeWithPlural$3,\n            y: 'год',\n            yy: relativeTimeWithPlural$3,\n        },\n        meridiemParse: /ночи|утра|дня|вечера/i,\n        isPM: function (input) {\n            return /^(дня|вечера)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночи';\n            } else if (hour < 12) {\n                return 'утра';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечера';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                case 'w':\n                case 'W':\n                    return number + '-я';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$9 = [\n            'جنوري',\n            'فيبروري',\n            'مارچ',\n            'اپريل',\n            'مئي',\n            'جون',\n            'جولاءِ',\n            'آگسٽ',\n            'سيپٽمبر',\n            'آڪٽوبر',\n            'نومبر',\n            'ڊسمبر',\n        ],\n        days$1 = ['آچر', 'سومر', 'اڱارو', 'اربع', 'خميس', 'جمع', 'ڇنڇر'];\n\n    hooks.defineLocale('sd', {\n        months: months$9,\n        monthsShort: months$9,\n        weekdays: days$1,\n        weekdaysShort: days$1,\n        weekdaysMin: days$1,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd، D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /صبح|شام/,\n        isPM: function (input) {\n            return 'شام' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar: {\n            sameDay: '[اڄ] LT',\n            nextDay: '[سڀاڻي] LT',\n            nextWeek: 'dddd [اڳين هفتي تي] LT',\n            lastDay: '[ڪالهه] LT',\n            lastWeek: '[گزريل هفتي] dddd [تي] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s پوء',\n            past: '%s اڳ',\n            s: 'چند سيڪنڊ',\n            ss: '%d سيڪنڊ',\n            m: 'هڪ منٽ',\n            mm: '%d منٽ',\n            h: 'هڪ ڪلاڪ',\n            hh: '%d ڪلاڪ',\n            d: 'هڪ ڏينهن',\n            dd: '%d ڏينهن',\n            M: 'هڪ مهينو',\n            MM: '%d مهينا',\n            y: 'هڪ سال',\n            yy: '%d سال',\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('se', {\n        months: 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split(\n            '_'\n        ),\n        monthsShort:\n            'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),\n        weekdays:\n            'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split(\n                '_'\n            ),\n        weekdaysShort: 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),\n        weekdaysMin: 's_v_m_g_d_b_L'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'MMMM D. [b.] YYYY',\n            LLL: 'MMMM D. [b.] YYYY [ti.] HH:mm',\n            LLLL: 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm',\n        },\n        calendar: {\n            sameDay: '[otne ti] LT',\n            nextDay: '[ihttin ti] LT',\n            nextWeek: 'dddd [ti] LT',\n            lastDay: '[ikte ti] LT',\n            lastWeek: '[ovddit] dddd [ti] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s geažes',\n            past: 'maŋit %s',\n            s: 'moadde sekunddat',\n            ss: '%d sekunddat',\n            m: 'okta minuhta',\n            mm: '%d minuhtat',\n            h: 'okta diimmu',\n            hh: '%d diimmut',\n            d: 'okta beaivi',\n            dd: '%d beaivvit',\n            M: 'okta mánnu',\n            MM: '%d mánut',\n            y: 'okta jahki',\n            yy: '%d jagit',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    /*jshint -W100*/\n    hooks.defineLocale('si', {\n        months: 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split(\n            '_'\n        ),\n        monthsShort: 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split(\n            '_'\n        ),\n        weekdays:\n            'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split(\n                '_'\n            ),\n        weekdaysShort: 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),\n        weekdaysMin: 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'a h:mm',\n            LTS: 'a h:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY MMMM D',\n            LLL: 'YYYY MMMM D, a h:mm',\n            LLLL: 'YYYY MMMM D [වැනි] dddd, a h:mm:ss',\n        },\n        calendar: {\n            sameDay: '[අද] LT[ට]',\n            nextDay: '[හෙට] LT[ට]',\n            nextWeek: 'dddd LT[ට]',\n            lastDay: '[ඊයේ] LT[ට]',\n            lastWeek: '[පසුගිය] dddd LT[ට]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%sකින්',\n            past: '%sකට පෙර',\n            s: 'තත්පර කිහිපය',\n            ss: 'තත්පර %d',\n            m: 'මිනිත්තුව',\n            mm: 'මිනිත්තු %d',\n            h: 'පැය',\n            hh: 'පැය %d',\n            d: 'දිනය',\n            dd: 'දින %d',\n            M: 'මාසය',\n            MM: 'මාස %d',\n            y: 'වසර',\n            yy: 'වසර %d',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2} වැනි/,\n        ordinal: function (number) {\n            return number + ' වැනි';\n        },\n        meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,\n        isPM: function (input) {\n            return input === 'ප.ව.' || input === 'පස් වරු';\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? 'ප.ව.' : 'පස් වරු';\n            } else {\n                return isLower ? 'පෙ.ව.' : 'පෙර වරු';\n            }\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$a =\n            'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split(\n                '_'\n            ),\n        monthsShort$7 = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n    function plural$5(n) {\n        return n > 1 && n < 5;\n    }\n    function translate$9(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's': // a few seconds / in a few seconds / a few seconds ago\n                return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';\n            case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'sekundy' : 'sekúnd');\n                } else {\n                    return result + 'sekundami';\n                }\n            case 'm': // a minute / in a minute / a minute ago\n                return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';\n            case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'minúty' : 'minút');\n                } else {\n                    return result + 'minútami';\n                }\n            case 'h': // an hour / in an hour / an hour ago\n                return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n            case 'hh': // 9 hours / in 9 hours / 9 hours ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'hodiny' : 'hodín');\n                } else {\n                    return result + 'hodinami';\n                }\n            case 'd': // a day / in a day / a day ago\n                return withoutSuffix || isFuture ? 'deň' : 'dňom';\n            case 'dd': // 9 days / in 9 days / 9 days ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'dni' : 'dní');\n                } else {\n                    return result + 'dňami';\n                }\n            case 'M': // a month / in a month / a month ago\n                return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';\n            case 'MM': // 9 months / in 9 months / 9 months ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'mesiace' : 'mesiacov');\n                } else {\n                    return result + 'mesiacmi';\n                }\n            case 'y': // a year / in a year / a year ago\n                return withoutSuffix || isFuture ? 'rok' : 'rokom';\n            case 'yy': // 9 years / in 9 years / 9 years ago\n                if (withoutSuffix || isFuture) {\n                    return result + (plural$5(number) ? 'roky' : 'rokov');\n                } else {\n                    return result + 'rokmi';\n                }\n        }\n    }\n\n    hooks.defineLocale('sk', {\n        months: months$a,\n        monthsShort: monthsShort$7,\n        weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n        weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n        weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[dnes o] LT',\n            nextDay: '[zajtra o] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[v] dddd [o] LT';\n                    case 3:\n                        return '[v stredu o] LT';\n                    case 4:\n                        return '[vo štvrtok o] LT';\n                    case 5:\n                        return '[v piatok o] LT';\n                    case 6:\n                        return '[v sobotu o] LT';\n                }\n            },\n            lastDay: '[včera o] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[minulú nedeľu o] LT';\n                    case 1:\n                    case 2:\n                        return '[minulý] dddd [o] LT';\n                    case 3:\n                        return '[minulú stredu o] LT';\n                    case 4:\n                    case 5:\n                        return '[minulý] dddd [o] LT';\n                    case 6:\n                        return '[minulú sobotu o] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'pred %s',\n            s: translate$9,\n            ss: translate$9,\n            m: translate$9,\n            mm: translate$9,\n            h: translate$9,\n            hh: translate$9,\n            d: translate$9,\n            dd: translate$9,\n            M: translate$9,\n            MM: translate$9,\n            y: translate$9,\n            yy: translate$9,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function processRelativeTime$9(number, withoutSuffix, key, isFuture) {\n        var result = number + ' ';\n        switch (key) {\n            case 's':\n                return withoutSuffix || isFuture\n                    ? 'nekaj sekund'\n                    : 'nekaj sekundami';\n            case 'ss':\n                if (number === 1) {\n                    result += withoutSuffix ? 'sekundo' : 'sekundi';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n                } else {\n                    result += 'sekund';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'ena minuta' : 'eno minuto';\n            case 'mm':\n                if (number === 1) {\n                    result += withoutSuffix ? 'minuta' : 'minuto';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'ena ura' : 'eno uro';\n            case 'hh':\n                if (number === 1) {\n                    result += withoutSuffix ? 'ura' : 'uro';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'uri' : 'urama';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'ure' : 'urami';\n                } else {\n                    result += withoutSuffix || isFuture ? 'ur' : 'urami';\n                }\n                return result;\n            case 'd':\n                return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n            case 'dd':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n                } else {\n                    result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n                }\n                return result;\n            case 'M':\n                return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n            case 'MM':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n                } else {\n                    result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n                }\n                return result;\n            case 'y':\n                return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n            case 'yy':\n                if (number === 1) {\n                    result += withoutSuffix || isFuture ? 'leto' : 'letom';\n                } else if (number === 2) {\n                    result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n                } else if (number < 5) {\n                    result += withoutSuffix || isFuture ? 'leta' : 'leti';\n                } else {\n                    result += withoutSuffix || isFuture ? 'let' : 'leti';\n                }\n                return result;\n        }\n    }\n\n    hooks.defineLocale('sl', {\n        months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n        weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n        weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD. MM. YYYY',\n            LL: 'D. MMMM YYYY',\n            LLL: 'D. MMMM YYYY H:mm',\n            LLLL: 'dddd, D. MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[danes ob] LT',\n            nextDay: '[jutri ob] LT',\n\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[v] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[v] [sredo] [ob] LT';\n                    case 6:\n                        return '[v] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[v] dddd [ob] LT';\n                }\n            },\n            lastDay: '[včeraj ob] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[prejšnjo] [nedeljo] [ob] LT';\n                    case 3:\n                        return '[prejšnjo] [sredo] [ob] LT';\n                    case 6:\n                        return '[prejšnjo] [soboto] [ob] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prejšnji] dddd [ob] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'čez %s',\n            past: 'pred %s',\n            s: processRelativeTime$9,\n            ss: processRelativeTime$9,\n            m: processRelativeTime$9,\n            mm: processRelativeTime$9,\n            h: processRelativeTime$9,\n            hh: processRelativeTime$9,\n            d: processRelativeTime$9,\n            dd: processRelativeTime$9,\n            M: processRelativeTime$9,\n            MM: processRelativeTime$9,\n            y: processRelativeTime$9,\n            yy: processRelativeTime$9,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('sq', {\n        months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n        weekdays: 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split(\n            '_'\n        ),\n        weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n        weekdaysMin: 'D_H_Ma_Më_E_P_Sh'.split('_'),\n        weekdaysParseExact: true,\n        meridiemParse: /PD|MD/,\n        isPM: function (input) {\n            return input.charAt(0) === 'M';\n        },\n        meridiem: function (hours, minutes, isLower) {\n            return hours < 12 ? 'PD' : 'MD';\n        },\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Sot në] LT',\n            nextDay: '[Nesër në] LT',\n            nextWeek: 'dddd [në] LT',\n            lastDay: '[Dje në] LT',\n            lastWeek: 'dddd [e kaluar në] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'në %s',\n            past: '%s më parë',\n            s: 'disa sekonda',\n            ss: '%d sekonda',\n            m: 'një minutë',\n            mm: '%d minuta',\n            h: 'një orë',\n            hh: '%d orë',\n            d: 'një ditë',\n            dd: '%d ditë',\n            M: 'një muaj',\n            MM: '%d muaj',\n            y: 'një vit',\n            yy: '%d vite',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var translator$1 = {\n        words: {\n            //Different grammatical cases\n            ss: ['секунда', 'секунде', 'секунди'],\n            m: ['један минут', 'једног минута'],\n            mm: ['минут', 'минута', 'минута'],\n            h: ['један сат', 'једног сата'],\n            hh: ['сат', 'сата', 'сати'],\n            d: ['један дан', 'једног дана'],\n            dd: ['дан', 'дана', 'дана'],\n            M: ['један месец', 'једног месеца'],\n            MM: ['месец', 'месеца', 'месеци'],\n            y: ['једну годину', 'једне године'],\n            yy: ['годину', 'године', 'година'],\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            if (\n                number % 10 >= 1 &&\n                number % 10 <= 4 &&\n                (number % 100 < 10 || number % 100 >= 20)\n            ) {\n                return number % 10 === 1 ? wordKey[0] : wordKey[1];\n            }\n            return wordKey[2];\n        },\n        translate: function (number, withoutSuffix, key, isFuture) {\n            var wordKey = translator$1.words[key],\n                word;\n\n            if (key.length === 1) {\n                // Nominativ\n                if (key === 'y' && withoutSuffix) return 'једна година';\n                return isFuture || withoutSuffix ? wordKey[0] : wordKey[1];\n            }\n\n            word = translator$1.correctGrammaticalCase(number, wordKey);\n            // Nominativ\n            if (key === 'yy' && withoutSuffix && word === 'годину') {\n                return number + ' година';\n            }\n\n            return number + ' ' + word;\n        },\n    };\n\n    hooks.defineLocale('sr-cyrl', {\n        months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split(\n            '_'\n        ),\n        monthsShort:\n            'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),\n        weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),\n        weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'D. M. YYYY.',\n            LL: 'D. MMMM YYYY.',\n            LLL: 'D. MMMM YYYY. H:mm',\n            LLLL: 'dddd, D. MMMM YYYY. H:mm',\n        },\n        calendar: {\n            sameDay: '[данас у] LT',\n            nextDay: '[сутра у] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[у] [недељу] [у] LT';\n                    case 3:\n                        return '[у] [среду] [у] LT';\n                    case 6:\n                        return '[у] [суботу] [у] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[у] dddd [у] LT';\n                }\n            },\n            lastDay: '[јуче у] LT',\n            lastWeek: function () {\n                var lastWeekDays = [\n                    '[прошле] [недеље] [у] LT',\n                    '[прошлог] [понедељка] [у] LT',\n                    '[прошлог] [уторка] [у] LT',\n                    '[прошле] [среде] [у] LT',\n                    '[прошлог] [четвртка] [у] LT',\n                    '[прошлог] [петка] [у] LT',\n                    '[прошле] [суботе] [у] LT',\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'за %s',\n            past: 'пре %s',\n            s: 'неколико секунди',\n            ss: translator$1.translate,\n            m: translator$1.translate,\n            mm: translator$1.translate,\n            h: translator$1.translate,\n            hh: translator$1.translate,\n            d: translator$1.translate,\n            dd: translator$1.translate,\n            M: translator$1.translate,\n            MM: translator$1.translate,\n            y: translator$1.translate,\n            yy: translator$1.translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 1st is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var translator$2 = {\n        words: {\n            //Different grammatical cases\n            ss: ['sekunda', 'sekunde', 'sekundi'],\n            m: ['jedan minut', 'jednog minuta'],\n            mm: ['minut', 'minuta', 'minuta'],\n            h: ['jedan sat', 'jednog sata'],\n            hh: ['sat', 'sata', 'sati'],\n            d: ['jedan dan', 'jednog dana'],\n            dd: ['dan', 'dana', 'dana'],\n            M: ['jedan mesec', 'jednog meseca'],\n            MM: ['mesec', 'meseca', 'meseci'],\n            y: ['jednu godinu', 'jedne godine'],\n            yy: ['godinu', 'godine', 'godina'],\n        },\n        correctGrammaticalCase: function (number, wordKey) {\n            if (\n                number % 10 >= 1 &&\n                number % 10 <= 4 &&\n                (number % 100 < 10 || number % 100 >= 20)\n            ) {\n                return number % 10 === 1 ? wordKey[0] : wordKey[1];\n            }\n            return wordKey[2];\n        },\n        translate: function (number, withoutSuffix, key, isFuture) {\n            var wordKey = translator$2.words[key],\n                word;\n\n            if (key.length === 1) {\n                // Nominativ\n                if (key === 'y' && withoutSuffix) return 'jedna godina';\n                return isFuture || withoutSuffix ? wordKey[0] : wordKey[1];\n            }\n\n            word = translator$2.correctGrammaticalCase(number, wordKey);\n            // Nominativ\n            if (key === 'yy' && withoutSuffix && word === 'godinu') {\n                return number + ' godina';\n            }\n\n            return number + ' ' + word;\n        },\n    };\n\n    hooks.defineLocale('sr', {\n        months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split(\n            '_'\n        ),\n        monthsShort:\n            'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),\n        monthsParseExact: true,\n        weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'D. M. YYYY.',\n            LL: 'D. MMMM YYYY.',\n            LLL: 'D. MMMM YYYY. H:mm',\n            LLLL: 'dddd, D. MMMM YYYY. H:mm',\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedelju] [u] LT';\n                    case 3:\n                        return '[u] [sredu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay: '[juče u] LT',\n            lastWeek: function () {\n                var lastWeekDays = [\n                    '[prošle] [nedelje] [u] LT',\n                    '[prošlog] [ponedeljka] [u] LT',\n                    '[prošlog] [utorka] [u] LT',\n                    '[prošle] [srede] [u] LT',\n                    '[prošlog] [četvrtka] [u] LT',\n                    '[prošlog] [petka] [u] LT',\n                    '[prošle] [subote] [u] LT',\n                ];\n                return lastWeekDays[this.day()];\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'pre %s',\n            s: 'nekoliko sekundi',\n            ss: translator$2.translate,\n            m: translator$2.translate,\n            mm: translator$2.translate,\n            h: translator$2.translate,\n            hh: translator$2.translate,\n            d: translator$2.translate,\n            dd: translator$2.translate,\n            M: translator$2.translate,\n            MM: translator$2.translate,\n            y: translator$2.translate,\n            yy: translator$2.translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ss', {\n        months: \"Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni\".split(\n            '_'\n        ),\n        monthsShort: 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),\n        weekdays:\n            'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split(\n                '_'\n            ),\n        weekdaysShort: 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),\n        weekdaysMin: 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Namuhla nga] LT',\n            nextDay: '[Kusasa nga] LT',\n            nextWeek: 'dddd [nga] LT',\n            lastDay: '[Itolo nga] LT',\n            lastWeek: 'dddd [leliphelile] [nga] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'nga %s',\n            past: 'wenteka nga %s',\n            s: 'emizuzwana lomcane',\n            ss: '%d mzuzwana',\n            m: 'umzuzu',\n            mm: '%d emizuzu',\n            h: 'lihora',\n            hh: '%d emahora',\n            d: 'lilanga',\n            dd: '%d emalanga',\n            M: 'inyanga',\n            MM: '%d tinyanga',\n            y: 'umnyaka',\n            yy: '%d iminyaka',\n        },\n        meridiemParse: /ekuseni|emini|entsambama|ebusuku/,\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 11) {\n                return 'ekuseni';\n            } else if (hours < 15) {\n                return 'emini';\n            } else if (hours < 19) {\n                return 'entsambama';\n            } else {\n                return 'ebusuku';\n            }\n        },\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'ekuseni') {\n                return hour;\n            } else if (meridiem === 'emini') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {\n                if (hour === 0) {\n                    return 0;\n                }\n                return hour + 12;\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal: '%d',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('sv', {\n        months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split(\n            '_'\n        ),\n        monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n        weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n        weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n        weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY [kl.] HH:mm',\n            LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n            lll: 'D MMM YYYY HH:mm',\n            llll: 'ddd D MMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Idag] LT',\n            nextDay: '[Imorgon] LT',\n            lastDay: '[Igår] LT',\n            nextWeek: '[På] dddd LT',\n            lastWeek: '[I] dddd[s] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'om %s',\n            past: 'för %s sedan',\n            s: 'några sekunder',\n            ss: '%d sekunder',\n            m: 'en minut',\n            mm: '%d minuter',\n            h: 'en timme',\n            hh: '%d timmar',\n            d: 'en dag',\n            dd: '%d dagar',\n            M: 'en månad',\n            MM: '%d månader',\n            y: 'ett år',\n            yy: '%d år',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(\\:e|\\:a)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? ':e'\n                        : b === 1\n                          ? ':a'\n                          : b === 2\n                            ? ':a'\n                            : b === 3\n                              ? ':e'\n                              : ':e';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('sw', {\n        months: 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),\n        weekdays:\n            'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split(\n                '_'\n            ),\n        weekdaysShort: 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),\n        weekdaysMin: 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'hh:mm A',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[leo saa] LT',\n            nextDay: '[kesho saa] LT',\n            nextWeek: '[wiki ijayo] dddd [saat] LT',\n            lastDay: '[jana] LT',\n            lastWeek: '[wiki iliyopita] dddd [saat] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s baadaye',\n            past: 'tokea %s',\n            s: 'hivi punde',\n            ss: 'sekunde %d',\n            m: 'dakika moja',\n            mm: 'dakika %d',\n            h: 'saa limoja',\n            hh: 'masaa %d',\n            d: 'siku moja',\n            dd: 'siku %d',\n            M: 'mwezi mmoja',\n            MM: 'miezi %d',\n            y: 'mwaka mmoja',\n            yy: 'miaka %d',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var symbolMap$h = {\n            1: '௧',\n            2: '௨',\n            3: '௩',\n            4: '௪',\n            5: '௫',\n            6: '௬',\n            7: '௭',\n            8: '௮',\n            9: '௯',\n            0: '௦',\n        },\n        numberMap$g = {\n            '௧': '1',\n            '௨': '2',\n            '௩': '3',\n            '௪': '4',\n            '௫': '5',\n            '௬': '6',\n            '௭': '7',\n            '௮': '8',\n            '௯': '9',\n            '௦': '0',\n        };\n\n    hooks.defineLocale('ta', {\n        months: 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(\n            '_'\n        ),\n        monthsShort:\n            'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split(\n                '_'\n            ),\n        weekdays:\n            'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split(\n                '_'\n            ),\n        weekdaysShort: 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split(\n            '_'\n        ),\n        weekdaysMin: 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, HH:mm',\n            LLLL: 'dddd, D MMMM YYYY, HH:mm',\n        },\n        calendar: {\n            sameDay: '[இன்று] LT',\n            nextDay: '[நாளை] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[நேற்று] LT',\n            lastWeek: '[கடந்த வாரம்] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s இல்',\n            past: '%s முன்',\n            s: 'ஒரு சில விநாடிகள்',\n            ss: '%d விநாடிகள்',\n            m: 'ஒரு நிமிடம்',\n            mm: '%d நிமிடங்கள்',\n            h: 'ஒரு மணி நேரம்',\n            hh: '%d மணி நேரம்',\n            d: 'ஒரு நாள்',\n            dd: '%d நாட்கள்',\n            M: 'ஒரு மாதம்',\n            MM: '%d மாதங்கள்',\n            y: 'ஒரு வருடம்',\n            yy: '%d ஆண்டுகள்',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}வது/,\n        ordinal: function (number) {\n            return number + 'வது';\n        },\n        preparse: function (string) {\n            return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {\n                return numberMap$g[match];\n            });\n        },\n        postformat: function (string) {\n            return string.replace(/\\d/g, function (match) {\n                return symbolMap$h[match];\n            });\n        },\n        // refer http://ta.wikipedia.org/s/1er1\n        meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 2) {\n                return ' யாமம்';\n            } else if (hour < 6) {\n                return ' வைகறை'; // வைகறை\n            } else if (hour < 10) {\n                return ' காலை'; // காலை\n            } else if (hour < 14) {\n                return ' நண்பகல்'; // நண்பகல்\n            } else if (hour < 18) {\n                return ' எற்பாடு'; // எற்பாடு\n            } else if (hour < 22) {\n                return ' மாலை'; // மாலை\n            } else {\n                return ' யாமம்';\n            }\n        },\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'யாமம்') {\n                return hour < 2 ? hour : hour + 12;\n            } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {\n                return hour;\n            } else if (meridiem === 'நண்பகல்') {\n                return hour >= 10 ? hour : hour + 12;\n            } else {\n                return hour + 12;\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('te', {\n        months: 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జులై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split(\n            '_'\n        ),\n        monthsShort:\n            'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జులై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays:\n            'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split(\n                '_'\n            ),\n        weekdaysShort: 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),\n        weekdaysMin: 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY, A h:mm',\n            LLLL: 'dddd, D MMMM YYYY, A h:mm',\n        },\n        calendar: {\n            sameDay: '[నేడు] LT',\n            nextDay: '[రేపు] LT',\n            nextWeek: 'dddd, LT',\n            lastDay: '[నిన్న] LT',\n            lastWeek: '[గత] dddd, LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s లో',\n            past: '%s క్రితం',\n            s: 'కొన్ని క్షణాలు',\n            ss: '%d సెకన్లు',\n            m: 'ఒక నిమిషం',\n            mm: '%d నిమిషాలు',\n            h: 'ఒక గంట',\n            hh: '%d గంటలు',\n            d: 'ఒక రోజు',\n            dd: '%d రోజులు',\n            M: 'ఒక నెల',\n            MM: '%d నెలలు',\n            y: 'ఒక సంవత్సరం',\n            yy: '%d సంవత్సరాలు',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}వ/,\n        ordinal: '%dవ',\n        meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'రాత్రి') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'ఉదయం') {\n                return hour;\n            } else if (meridiem === 'మధ్యాహ్నం') {\n                return hour >= 10 ? hour : hour + 12;\n            } else if (meridiem === 'సాయంత్రం') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'రాత్రి';\n            } else if (hour < 10) {\n                return 'ఉదయం';\n            } else if (hour < 17) {\n                return 'మధ్యాహ్నం';\n            } else if (hour < 20) {\n                return 'సాయంత్రం';\n            } else {\n                return 'రాత్రి';\n            }\n        },\n        week: {\n            dow: 0, // Sunday is the first day of the week.\n            doy: 6, // The week that contains Jan 6th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tet', {\n        months: 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n        weekdays: 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu'.split('_'),\n        weekdaysShort: 'Dom_Seg_Ters_Kua_Kint_Sest_Sab'.split('_'),\n        weekdaysMin: 'Do_Seg_Te_Ku_Ki_Ses_Sa'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Ohin iha] LT',\n            nextDay: '[Aban iha] LT',\n            nextWeek: 'dddd [iha] LT',\n            lastDay: '[Horiseik iha] LT',\n            lastWeek: 'dddd [semana kotuk] [iha] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'iha %s',\n            past: '%s liuba',\n            s: 'segundu balun',\n            ss: 'segundu %d',\n            m: 'minutu ida',\n            mm: 'minutu %d',\n            h: 'oras ida',\n            hh: 'oras %d',\n            d: 'loron ida',\n            dd: 'loron %d',\n            M: 'fulan ida',\n            MM: 'fulan %d',\n            y: 'tinan ida',\n            yy: 'tinan %d',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                          ? 'st'\n                          : b === 2\n                            ? 'nd'\n                            : b === 3\n                              ? 'rd'\n                              : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$3 = {\n        0: '-ум',\n        1: '-ум',\n        2: '-юм',\n        3: '-юм',\n        4: '-ум',\n        5: '-ум',\n        6: '-ум',\n        7: '-ум',\n        8: '-ум',\n        9: '-ум',\n        10: '-ум',\n        12: '-ум',\n        13: '-ум',\n        20: '-ум',\n        30: '-юм',\n        40: '-ум',\n        50: '-ум',\n        60: '-ум',\n        70: '-ум',\n        80: '-ум',\n        90: '-ум',\n        100: '-ум',\n    };\n\n    hooks.defineLocale('tg', {\n        months: {\n            format: 'январи_феврали_марти_апрели_майи_июни_июли_августи_сентябри_октябри_ноябри_декабри'.split(\n                '_'\n            ),\n            standalone:\n                'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(\n                    '_'\n                ),\n        },\n        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays: 'якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе'.split(\n            '_'\n        ),\n        weekdaysShort: 'яшб_дшб_сшб_чшб_пшб_ҷум_шнб'.split('_'),\n        weekdaysMin: 'яш_дш_сш_чш_пш_ҷм_шб'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Имрӯз соати] LT',\n            nextDay: '[Фардо соати] LT',\n            lastDay: '[Дирӯз соати] LT',\n            nextWeek: 'dddd[и] [ҳафтаи оянда соати] LT',\n            lastWeek: 'dddd[и] [ҳафтаи гузашта соати] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'баъди %s',\n            past: '%s пеш',\n            s: 'якчанд сония',\n            m: 'як дақиқа',\n            mm: '%d дақиқа',\n            h: 'як соат',\n            hh: '%d соат',\n            d: 'як рӯз',\n            dd: '%d рӯз',\n            M: 'як моҳ',\n            MM: '%d моҳ',\n            y: 'як сол',\n            yy: '%d сол',\n        },\n        meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === 'шаб') {\n                return hour < 4 ? hour : hour + 12;\n            } else if (meridiem === 'субҳ') {\n                return hour;\n            } else if (meridiem === 'рӯз') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === 'бегоҳ') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'шаб';\n            } else if (hour < 11) {\n                return 'субҳ';\n            } else if (hour < 16) {\n                return 'рӯз';\n            } else if (hour < 19) {\n                return 'бегоҳ';\n            } else {\n                return 'шаб';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(ум|юм)/,\n        ordinal: function (number) {\n            var a = number % 10,\n                b = number >= 100 ? 100 : null;\n            return number + (suffixes$3[number] || suffixes$3[a] || suffixes$3[b]);\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 1th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('th', {\n        months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split(\n            '_'\n        ),\n        monthsShort:\n            'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n        weekdaysShort: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference\n        weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY เวลา H:mm',\n            LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm',\n        },\n        meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n        isPM: function (input) {\n            return input === 'หลังเที่ยง';\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'ก่อนเที่ยง';\n            } else {\n                return 'หลังเที่ยง';\n            }\n        },\n        calendar: {\n            sameDay: '[วันนี้ เวลา] LT',\n            nextDay: '[พรุ่งนี้ เวลา] LT',\n            nextWeek: 'dddd[หน้า เวลา] LT',\n            lastDay: '[เมื่อวานนี้ เวลา] LT',\n            lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'อีก %s',\n            past: '%sที่แล้ว',\n            s: 'ไม่กี่วินาที',\n            ss: '%d วินาที',\n            m: '1 นาที',\n            mm: '%d นาที',\n            h: '1 ชั่วโมง',\n            hh: '%d ชั่วโมง',\n            d: '1 วัน',\n            dd: '%d วัน',\n            w: '1 สัปดาห์',\n            ww: '%d สัปดาห์',\n            M: '1 เดือน',\n            MM: '%d เดือน',\n            y: '1 ปี',\n            yy: '%d ปี',\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$4 = {\n        1: \"'inji\",\n        5: \"'inji\",\n        8: \"'inji\",\n        70: \"'inji\",\n        80: \"'inji\",\n        2: \"'nji\",\n        7: \"'nji\",\n        20: \"'nji\",\n        50: \"'nji\",\n        3: \"'ünji\",\n        4: \"'ünji\",\n        100: \"'ünji\",\n        6: \"'njy\",\n        9: \"'unjy\",\n        10: \"'unjy\",\n        30: \"'unjy\",\n        60: \"'ynjy\",\n        90: \"'ynjy\",\n    };\n\n    hooks.defineLocale('tk', {\n        months: 'Ýanwar_Fewral_Mart_Aprel_Maý_Iýun_Iýul_Awgust_Sentýabr_Oktýabr_Noýabr_Dekabr'.split(\n            '_'\n        ),\n        monthsShort: 'Ýan_Few_Mar_Apr_Maý_Iýn_Iýl_Awg_Sen_Okt_Noý_Dek'.split('_'),\n        weekdays: 'Ýekşenbe_Duşenbe_Sişenbe_Çarşenbe_Penşenbe_Anna_Şenbe'.split(\n            '_'\n        ),\n        weekdaysShort: 'Ýek_Duş_Siş_Çar_Pen_Ann_Şen'.split('_'),\n        weekdaysMin: 'Ýk_Dş_Sş_Çr_Pn_An_Şn'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[bugün sagat] LT',\n            nextDay: '[ertir sagat] LT',\n            nextWeek: '[indiki] dddd [sagat] LT',\n            lastDay: '[düýn] LT',\n            lastWeek: '[geçen] dddd [sagat] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s soň',\n            past: '%s öň',\n            s: 'birnäçe sekunt',\n            m: 'bir minut',\n            mm: '%d minut',\n            h: 'bir sagat',\n            hh: '%d sagat',\n            d: 'bir gün',\n            dd: '%d gün',\n            M: 'bir aý',\n            MM: '%d aý',\n            y: 'bir ýyl',\n            yy: '%d ýyl',\n        },\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'Do':\n                case 'DD':\n                    return number;\n                default:\n                    if (number === 0) {\n                        // special case for zero\n                        return number + \"'unjy\";\n                    }\n                    var a = number % 10,\n                        b = (number % 100) - a,\n                        c = number >= 100 ? 100 : null;\n                    return number + (suffixes$4[a] || suffixes$4[b] || suffixes$4[c]);\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tl-ph', {\n        months: 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split(\n            '_'\n        ),\n        monthsShort: 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),\n        weekdays: 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split(\n            '_'\n        ),\n        weekdaysShort: 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),\n        weekdaysMin: 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'MM/D/YYYY',\n            LL: 'MMMM D, YYYY',\n            LLL: 'MMMM D, YYYY HH:mm',\n            LLLL: 'dddd, MMMM DD, YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: 'LT [ngayong araw]',\n            nextDay: '[Bukas ng] LT',\n            nextWeek: 'LT [sa susunod na] dddd',\n            lastDay: 'LT [kahapon]',\n            lastWeek: 'LT [noong nakaraang] dddd',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'sa loob ng %s',\n            past: '%s ang nakalipas',\n            s: 'ilang segundo',\n            ss: '%d segundo',\n            m: 'isang minuto',\n            mm: '%d minuto',\n            h: 'isang oras',\n            hh: '%d oras',\n            d: 'isang araw',\n            dd: '%d araw',\n            M: 'isang buwan',\n            MM: '%d buwan',\n            y: 'isang taon',\n            yy: '%d taon',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal: function (number) {\n            return number;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');\n\n    function translateFuture(output) {\n        var time = output;\n        time =\n            output.indexOf('jaj') !== -1\n                ? time.slice(0, -3) + 'leS'\n                : output.indexOf('jar') !== -1\n                  ? time.slice(0, -3) + 'waQ'\n                  : output.indexOf('DIS') !== -1\n                    ? time.slice(0, -3) + 'nem'\n                    : time + ' pIq';\n        return time;\n    }\n\n    function translatePast(output) {\n        var time = output;\n        time =\n            output.indexOf('jaj') !== -1\n                ? time.slice(0, -3) + 'Hu’'\n                : output.indexOf('jar') !== -1\n                  ? time.slice(0, -3) + 'wen'\n                  : output.indexOf('DIS') !== -1\n                    ? time.slice(0, -3) + 'ben'\n                    : time + ' ret';\n        return time;\n    }\n\n    function translate$a(number, withoutSuffix, string, isFuture) {\n        var numberNoun = numberAsNoun(number);\n        switch (string) {\n            case 'ss':\n                return numberNoun + ' lup';\n            case 'mm':\n                return numberNoun + ' tup';\n            case 'hh':\n                return numberNoun + ' rep';\n            case 'dd':\n                return numberNoun + ' jaj';\n            case 'MM':\n                return numberNoun + ' jar';\n            case 'yy':\n                return numberNoun + ' DIS';\n        }\n    }\n\n    function numberAsNoun(number) {\n        var hundred = Math.floor((number % 1000) / 100),\n            ten = Math.floor((number % 100) / 10),\n            one = number % 10,\n            word = '';\n        if (hundred > 0) {\n            word += numbersNouns[hundred] + 'vatlh';\n        }\n        if (ten > 0) {\n            word += (word !== '' ? ' ' : '') + numbersNouns[ten] + 'maH';\n        }\n        if (one > 0) {\n            word += (word !== '' ? ' ' : '') + numbersNouns[one];\n        }\n        return word === '' ? 'pagh' : word;\n    }\n\n    hooks.defineLocale('tlh', {\n        months: 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split(\n            '_'\n        ),\n        monthsShort:\n            'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split(\n            '_'\n        ),\n        weekdaysShort:\n            'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        weekdaysMin:\n            'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[DaHjaj] LT',\n            nextDay: '[wa’leS] LT',\n            nextWeek: 'LLL',\n            lastDay: '[wa’Hu’] LT',\n            lastWeek: 'LLL',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: translateFuture,\n            past: translatePast,\n            s: 'puS lup',\n            ss: translate$a,\n            m: 'wa’ tup',\n            mm: translate$a,\n            h: 'wa’ rep',\n            hh: translate$a,\n            d: 'wa’ jaj',\n            dd: translate$a,\n            M: 'wa’ jar',\n            MM: translate$a,\n            y: 'wa’ DIS',\n            yy: translate$a,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var suffixes$5 = {\n        1: \"'inci\",\n        5: \"'inci\",\n        8: \"'inci\",\n        70: \"'inci\",\n        80: \"'inci\",\n        2: \"'nci\",\n        7: \"'nci\",\n        20: \"'nci\",\n        50: \"'nci\",\n        3: \"'üncü\",\n        4: \"'üncü\",\n        100: \"'üncü\",\n        6: \"'ncı\",\n        9: \"'uncu\",\n        10: \"'uncu\",\n        30: \"'uncu\",\n        60: \"'ıncı\",\n        90: \"'ıncı\",\n    };\n\n    hooks.defineLocale('tr', {\n        months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split(\n            '_'\n        ),\n        monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n        weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split(\n            '_'\n        ),\n        weekdaysShort: 'Paz_Pzt_Sal_Çar_Per_Cum_Cmt'.split('_'),\n        weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'öö' : 'ÖÖ';\n            } else {\n                return isLower ? 'ös' : 'ÖS';\n            }\n        },\n        meridiemParse: /öö|ÖÖ|ös|ÖS/,\n        isPM: function (input) {\n            return input === 'ös' || input === 'ÖS';\n        },\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[bugün saat] LT',\n            nextDay: '[yarın saat] LT',\n            nextWeek: '[gelecek] dddd [saat] LT',\n            lastDay: '[dün] LT',\n            lastWeek: '[geçen] dddd [saat] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s sonra',\n            past: '%s önce',\n            s: 'birkaç saniye',\n            ss: '%d saniye',\n            m: 'bir dakika',\n            mm: '%d dakika',\n            h: 'bir saat',\n            hh: '%d saat',\n            d: 'bir gün',\n            dd: '%d gün',\n            w: 'bir hafta',\n            ww: '%d hafta',\n            M: 'bir ay',\n            MM: '%d ay',\n            y: 'bir yıl',\n            yy: '%d yıl',\n        },\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'Do':\n                case 'DD':\n                    return number;\n                default:\n                    if (number === 0) {\n                        // special case for zero\n                        return number + \"'ıncı\";\n                    }\n                    var a = number % 10,\n                        b = (number % 100) - a,\n                        c = number >= 100 ? 100 : null;\n                    return number + (suffixes$5[a] || suffixes$5[b] || suffixes$5[c]);\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    // After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.\n    // This is currently too difficult (maybe even impossible) to add.\n    hooks.defineLocale('tzl', {\n        months: 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split(\n            '_'\n        ),\n        monthsShort: 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),\n        weekdays: 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),\n        weekdaysShort: 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),\n        weekdaysMin: 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),\n        longDateFormat: {\n            LT: 'HH.mm',\n            LTS: 'HH.mm.ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D. MMMM [dallas] YYYY',\n            LLL: 'D. MMMM [dallas] YYYY HH.mm',\n            LLLL: 'dddd, [li] D. MMMM [dallas] YYYY HH.mm',\n        },\n        meridiemParse: /d\\'o|d\\'a/i,\n        isPM: function (input) {\n            return \"d'o\" === input.toLowerCase();\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours > 11) {\n                return isLower ? \"d'o\" : \"D'O\";\n            } else {\n                return isLower ? \"d'a\" : \"D'A\";\n            }\n        },\n        calendar: {\n            sameDay: '[oxhi à] LT',\n            nextDay: '[demà à] LT',\n            nextWeek: 'dddd [à] LT',\n            lastDay: '[ieiri à] LT',\n            lastWeek: '[sür el] dddd [lasteu à] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'osprei %s',\n            past: 'ja%s',\n            s: processRelativeTime$a,\n            ss: processRelativeTime$a,\n            m: processRelativeTime$a,\n            mm: processRelativeTime$a,\n            h: processRelativeTime$a,\n            hh: processRelativeTime$a,\n            d: processRelativeTime$a,\n            dd: processRelativeTime$a,\n            M: processRelativeTime$a,\n            MM: processRelativeTime$a,\n            y: processRelativeTime$a,\n            yy: processRelativeTime$a,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    function processRelativeTime$a(number, withoutSuffix, key, isFuture) {\n        var format = {\n            s: ['viensas secunds', \"'iensas secunds\"],\n            ss: [number + ' secunds', '' + number + ' secunds'],\n            m: [\"'n míut\", \"'iens míut\"],\n            mm: [number + ' míuts', '' + number + ' míuts'],\n            h: [\"'n þora\", \"'iensa þora\"],\n            hh: [number + ' þoras', '' + number + ' þoras'],\n            d: [\"'n ziua\", \"'iensa ziua\"],\n            dd: [number + ' ziuas', '' + number + ' ziuas'],\n            M: [\"'n mes\", \"'iens mes\"],\n            MM: [number + ' mesen', '' + number + ' mesen'],\n            y: [\"'n ar\", \"'iens ar\"],\n            yy: [number + ' ars', '' + number + ' ars'],\n        };\n        return isFuture\n            ? format[key][0]\n            : withoutSuffix\n              ? format[key][0]\n              : format[key][1];\n    }\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tzm-latn', {\n        months: 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(\n            '_'\n        ),\n        monthsShort:\n            'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split(\n                '_'\n            ),\n        weekdays: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysShort: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        weekdaysMin: 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[asdkh g] LT',\n            nextDay: '[aska g] LT',\n            nextWeek: 'dddd [g] LT',\n            lastDay: '[assant g] LT',\n            lastWeek: 'dddd [g] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'dadkh s yan %s',\n            past: 'yan %s',\n            s: 'imik',\n            ss: '%d imik',\n            m: 'minuḍ',\n            mm: '%d minuḍ',\n            h: 'saɛa',\n            hh: '%d tassaɛin',\n            d: 'ass',\n            dd: '%d ossan',\n            M: 'ayowr',\n            MM: '%d iyyirn',\n            y: 'asgas',\n            yy: '%d isgasn',\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('tzm', {\n        months: 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(\n            '_'\n        ),\n        monthsShort:\n            'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split(\n                '_'\n            ),\n        weekdays: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysShort: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        weekdaysMin: 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',\n            nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',\n            nextWeek: 'dddd [ⴴ] LT',\n            lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',\n            lastWeek: 'dddd [ⴴ] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',\n            past: 'ⵢⴰⵏ %s',\n            s: 'ⵉⵎⵉⴽ',\n            ss: '%d ⵉⵎⵉⴽ',\n            m: 'ⵎⵉⵏⵓⴺ',\n            mm: '%d ⵎⵉⵏⵓⴺ',\n            h: 'ⵙⴰⵄⴰ',\n            hh: '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',\n            d: 'ⴰⵙⵙ',\n            dd: '%d oⵙⵙⴰⵏ',\n            M: 'ⴰⵢoⵓⵔ',\n            MM: '%d ⵉⵢⵢⵉⵔⵏ',\n            y: 'ⴰⵙⴳⴰⵙ',\n            yy: '%d ⵉⵙⴳⴰⵙⵏ',\n        },\n        week: {\n            dow: 6, // Saturday is the first day of the week.\n            doy: 12, // The week that contains Jan 12th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('ug-cn', {\n        months: 'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n            '_'\n        ),\n        monthsShort:\n            'يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر'.split(\n                '_'\n            ),\n        weekdays: 'يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە'.split(\n            '_'\n        ),\n        weekdaysShort: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        weekdaysMin: 'يە_دۈ_سە_چا_پە_جۈ_شە'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY-MM-DD',\n            LL: 'YYYY-يىلىM-ئاينىڭD-كۈنى',\n            LLL: 'YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n            LLLL: 'dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm',\n        },\n        meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (\n                meridiem === 'يېرىم كېچە' ||\n                meridiem === 'سەھەر' ||\n                meridiem === 'چۈشتىن بۇرۇن'\n            ) {\n                return hour;\n            } else if (meridiem === 'چۈشتىن كېيىن' || meridiem === 'كەچ') {\n                return hour + 12;\n            } else {\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return 'يېرىم كېچە';\n            } else if (hm < 900) {\n                return 'سەھەر';\n            } else if (hm < 1130) {\n                return 'چۈشتىن بۇرۇن';\n            } else if (hm < 1230) {\n                return 'چۈش';\n            } else if (hm < 1800) {\n                return 'چۈشتىن كېيىن';\n            } else {\n                return 'كەچ';\n            }\n        },\n        calendar: {\n            sameDay: '[بۈگۈن سائەت] LT',\n            nextDay: '[ئەتە سائەت] LT',\n            nextWeek: '[كېلەركى] dddd [سائەت] LT',\n            lastDay: '[تۆنۈگۈن] LT',\n            lastWeek: '[ئالدىنقى] dddd [سائەت] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s كېيىن',\n            past: '%s بۇرۇن',\n            s: 'نەچچە سېكونت',\n            ss: '%d سېكونت',\n            m: 'بىر مىنۇت',\n            mm: '%d مىنۇت',\n            h: 'بىر سائەت',\n            hh: '%d سائەت',\n            d: 'بىر كۈن',\n            dd: '%d كۈن',\n            M: 'بىر ئاي',\n            MM: '%d ئاي',\n            y: 'بىر يىل',\n            yy: '%d يىل',\n        },\n\n        dayOfMonthOrdinalParse: /\\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '-كۈنى';\n                case 'w':\n                case 'W':\n                    return number + '-ھەپتە';\n                default:\n                    return number;\n            }\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 1st is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    function plural$6(word, num) {\n        var forms = word.split('_');\n        return num % 10 === 1 && num % 100 !== 11\n            ? forms[0]\n            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n              ? forms[1]\n              : forms[2];\n    }\n    function relativeTimeWithPlural$4(number, withoutSuffix, key) {\n        var format = {\n            ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n            mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n            hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n            dd: 'день_дні_днів',\n            MM: 'місяць_місяці_місяців',\n            yy: 'рік_роки_років',\n        };\n        if (key === 'm') {\n            return withoutSuffix ? 'хвилина' : 'хвилину';\n        } else if (key === 'h') {\n            return withoutSuffix ? 'година' : 'годину';\n        } else {\n            return number + ' ' + plural$6(format[key], +number);\n        }\n    }\n    function weekdaysCaseReplace(m, format) {\n        var weekdays = {\n                nominative:\n                    'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(\n                        '_'\n                    ),\n                accusative:\n                    'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(\n                        '_'\n                    ),\n                genitive:\n                    'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(\n                        '_'\n                    ),\n            },\n            nounCase;\n\n        if (m === true) {\n            return weekdays['nominative']\n                .slice(1, 7)\n                .concat(weekdays['nominative'].slice(0, 1));\n        }\n        if (!m) {\n            return weekdays['nominative'];\n        }\n\n        nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format)\n            ? 'accusative'\n            : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format)\n              ? 'genitive'\n              : 'nominative';\n        return weekdays[nounCase][m.day()];\n    }\n    function processHoursFunction(str) {\n        return function () {\n            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n        };\n    }\n\n    hooks.defineLocale('uk', {\n        months: {\n            format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(\n                '_'\n            ),\n            standalone:\n                'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(\n                    '_'\n                ),\n        },\n        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(\n            '_'\n        ),\n        weekdays: weekdaysCaseReplace,\n        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'D MMMM YYYY р.',\n            LLL: 'D MMMM YYYY р., HH:mm',\n            LLLL: 'dddd, D MMMM YYYY р., HH:mm',\n        },\n        calendar: {\n            sameDay: processHoursFunction('[Сьогодні '),\n            nextDay: processHoursFunction('[Завтра '),\n            lastDay: processHoursFunction('[Вчора '),\n            nextWeek: processHoursFunction('[У] dddd ['),\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                    case 3:\n                    case 5:\n                    case 6:\n                        return processHoursFunction('[Минулої] dddd [').call(this);\n                    case 1:\n                    case 2:\n                    case 4:\n                        return processHoursFunction('[Минулого] dddd [').call(this);\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'за %s',\n            past: '%s тому',\n            s: 'декілька секунд',\n            ss: relativeTimeWithPlural$4,\n            m: relativeTimeWithPlural$4,\n            mm: relativeTimeWithPlural$4,\n            h: 'годину',\n            hh: relativeTimeWithPlural$4,\n            d: 'день',\n            dd: relativeTimeWithPlural$4,\n            M: 'місяць',\n            MM: relativeTimeWithPlural$4,\n            y: 'рік',\n            yy: relativeTimeWithPlural$4,\n        },\n        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n        meridiemParse: /ночі|ранку|дня|вечора/,\n        isPM: function (input) {\n            return /^(дня|вечора)$/.test(input);\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 4) {\n                return 'ночі';\n            } else if (hour < 12) {\n                return 'ранку';\n            } else if (hour < 17) {\n                return 'дня';\n            } else {\n                return 'вечора';\n            }\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'M':\n                case 'd':\n                case 'DDD':\n                case 'w':\n                case 'W':\n                    return number + '-й';\n                case 'D':\n                    return number + '-го';\n                default:\n                    return number;\n            }\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    var months$b = [\n            'جنوری',\n            'فروری',\n            'مارچ',\n            'اپریل',\n            'مئی',\n            'جون',\n            'جولائی',\n            'اگست',\n            'ستمبر',\n            'اکتوبر',\n            'نومبر',\n            'دسمبر',\n        ],\n        days$2 = ['اتوار', 'پیر', 'منگل', 'بدھ', 'جمعرات', 'جمعہ', 'ہفتہ'];\n\n    hooks.defineLocale('ur', {\n        months: months$b,\n        monthsShort: months$b,\n        weekdays: days$2,\n        weekdaysShort: days$2,\n        weekdaysMin: days$2,\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd، D MMMM YYYY HH:mm',\n        },\n        meridiemParse: /صبح|شام/,\n        isPM: function (input) {\n            return 'شام' === input;\n        },\n        meridiem: function (hour, minute, isLower) {\n            if (hour < 12) {\n                return 'صبح';\n            }\n            return 'شام';\n        },\n        calendar: {\n            sameDay: '[آج بوقت] LT',\n            nextDay: '[کل بوقت] LT',\n            nextWeek: 'dddd [بوقت] LT',\n            lastDay: '[گذشتہ روز بوقت] LT',\n            lastWeek: '[گذشتہ] dddd [بوقت] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s بعد',\n            past: '%s قبل',\n            s: 'چند سیکنڈ',\n            ss: '%d سیکنڈ',\n            m: 'ایک منٹ',\n            mm: '%d منٹ',\n            h: 'ایک گھنٹہ',\n            hh: '%d گھنٹے',\n            d: 'ایک دن',\n            dd: '%d دن',\n            M: 'ایک ماہ',\n            MM: '%d ماہ',\n            y: 'ایک سال',\n            yy: '%d سال',\n        },\n        preparse: function (string) {\n            return string.replace(/،/g, ',');\n        },\n        postformat: function (string) {\n            return string.replace(/,/g, '،');\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('uz-latn', {\n        months: 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split(\n            '_'\n        ),\n        monthsShort: 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),\n        weekdays:\n            'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split(\n                '_'\n            ),\n        weekdaysShort: 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),\n        weekdaysMin: 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'D MMMM YYYY, dddd HH:mm',\n        },\n        calendar: {\n            sameDay: '[Bugun soat] LT [da]',\n            nextDay: '[Ertaga] LT [da]',\n            nextWeek: 'dddd [kuni soat] LT [da]',\n            lastDay: '[Kecha soat] LT [da]',\n            lastWeek: \"[O'tgan] dddd [kuni soat] LT [da]\",\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'Yaqin %s ichida',\n            past: 'Bir necha %s oldin',\n            s: 'soniya',\n            ss: '%d soniya',\n            m: 'bir daqiqa',\n            mm: '%d daqiqa',\n            h: 'bir soat',\n            hh: '%d soat',\n            d: 'bir kun',\n            dd: '%d kun',\n            M: 'bir oy',\n            MM: '%d oy',\n            y: 'bir yil',\n            yy: '%d yil',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('uz', {\n        months: 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split(\n            '_'\n        ),\n        monthsShort: 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),\n        weekdays: 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),\n        weekdaysShort: 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),\n        weekdaysMin: 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'D MMMM YYYY, dddd HH:mm',\n        },\n        calendar: {\n            sameDay: '[Бугун соат] LT [да]',\n            nextDay: '[Эртага] LT [да]',\n            nextWeek: 'dddd [куни соат] LT [да]',\n            lastDay: '[Кеча соат] LT [да]',\n            lastWeek: '[Утган] dddd [куни соат] LT [да]',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'Якин %s ичида',\n            past: 'Бир неча %s олдин',\n            s: 'фурсат',\n            ss: '%d фурсат',\n            m: 'бир дакика',\n            mm: '%d дакика',\n            h: 'бир соат',\n            hh: '%d соат',\n            d: 'бир кун',\n            dd: '%d кун',\n            M: 'бир ой',\n            MM: '%d ой',\n            y: 'бир йил',\n            yy: '%d йил',\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('vi', {\n        months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split(\n            '_'\n        ),\n        monthsShort:\n            'Thg 01_Thg 02_Thg 03_Thg 04_Thg 05_Thg 06_Thg 07_Thg 08_Thg 09_Thg 10_Thg 11_Thg 12'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split(\n            '_'\n        ),\n        weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n        weekdaysParseExact: true,\n        meridiemParse: /sa|ch/i,\n        isPM: function (input) {\n            return /^ch$/i.test(input);\n        },\n        meridiem: function (hours, minutes, isLower) {\n            if (hours < 12) {\n                return isLower ? 'sa' : 'SA';\n            } else {\n                return isLower ? 'ch' : 'CH';\n            }\n        },\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM [năm] YYYY',\n            LLL: 'D MMMM [năm] YYYY HH:mm',\n            LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n            l: 'DD/M/YYYY',\n            ll: 'D MMM YYYY',\n            lll: 'D MMM YYYY HH:mm',\n            llll: 'ddd, D MMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[Hôm nay lúc] LT',\n            nextDay: '[Ngày mai lúc] LT',\n            nextWeek: 'dddd [tuần tới lúc] LT',\n            lastDay: '[Hôm qua lúc] LT',\n            lastWeek: 'dddd [tuần trước lúc] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s tới',\n            past: '%s trước',\n            s: 'vài giây',\n            ss: '%d giây',\n            m: 'một phút',\n            mm: '%d phút',\n            h: 'một giờ',\n            hh: '%d giờ',\n            d: 'một ngày',\n            dd: '%d ngày',\n            w: 'một tuần',\n            ww: '%d tuần',\n            M: 'một tháng',\n            MM: '%d tháng',\n            y: 'một năm',\n            yy: '%d năm',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}/,\n        ordinal: function (number) {\n            return number;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('x-pseudo', {\n        months: 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split(\n            '_'\n        ),\n        monthsShort:\n            'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split(\n                '_'\n            ),\n        monthsParseExact: true,\n        weekdays:\n            'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split(\n                '_'\n            ),\n        weekdaysShort: 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),\n        weekdaysMin: 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'HH:mm',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY HH:mm',\n            LLLL: 'dddd, D MMMM YYYY HH:mm',\n        },\n        calendar: {\n            sameDay: '[T~ódá~ý át] LT',\n            nextDay: '[T~ómó~rró~w át] LT',\n            nextWeek: 'dddd [át] LT',\n            lastDay: '[Ý~ést~érdá~ý át] LT',\n            lastWeek: '[L~ást] dddd [át] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'í~ñ %s',\n            past: '%s á~gó',\n            s: 'á ~féw ~sécó~ñds',\n            ss: '%d s~écóñ~ds',\n            m: 'á ~míñ~úté',\n            mm: '%d m~íñú~tés',\n            h: 'á~ñ hó~úr',\n            hh: '%d h~óúrs',\n            d: 'á ~dáý',\n            dd: '%d d~áýs',\n            M: 'á ~móñ~th',\n            MM: '%d m~óñt~hs',\n            y: 'á ~ýéár',\n            yy: '%d ý~éárs',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    ~~((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                          ? 'st'\n                          : b === 2\n                            ? 'nd'\n                            : b === 3\n                              ? 'rd'\n                              : 'th';\n            return number + output;\n        },\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('yo', {\n        months: 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split(\n            '_'\n        ),\n        monthsShort: 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),\n        weekdays: 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),\n        weekdaysShort: 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),\n        weekdaysMin: 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),\n        longDateFormat: {\n            LT: 'h:mm A',\n            LTS: 'h:mm:ss A',\n            L: 'DD/MM/YYYY',\n            LL: 'D MMMM YYYY',\n            LLL: 'D MMMM YYYY h:mm A',\n            LLLL: 'dddd, D MMMM YYYY h:mm A',\n        },\n        calendar: {\n            sameDay: '[Ònì ni] LT',\n            nextDay: '[Ọ̀la ni] LT',\n            nextWeek: \"dddd [Ọsẹ̀ tón'bọ] [ni] LT\",\n            lastDay: '[Àna ni] LT',\n            lastWeek: 'dddd [Ọsẹ̀ tólọ́] [ni] LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'ní %s',\n            past: '%s kọjá',\n            s: 'ìsẹjú aayá die',\n            ss: 'aayá %d',\n            m: 'ìsẹjú kan',\n            mm: 'ìsẹjú %d',\n            h: 'wákati kan',\n            hh: 'wákati %d',\n            d: 'ọjọ́ kan',\n            dd: 'ọjọ́ %d',\n            M: 'osù kan',\n            MM: 'osù %d',\n            y: 'ọdún kan',\n            yy: 'ọdún %d',\n        },\n        dayOfMonthOrdinalParse: /ọjọ́\\s\\d{1,2}/,\n        ordinal: 'ọjọ́ %d',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-cn', {\n        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(\n            '_'\n        ),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日Ah点mm分',\n            LLLL: 'YYYY年M月D日ddddAh点mm分',\n            l: 'YYYY/M/D',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日dddd HH:mm',\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            } else {\n                // '中午'\n                return hour >= 11 ? hour : hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar: {\n            sameDay: '[今天]LT',\n            nextDay: '[明天]LT',\n            nextWeek: function (now) {\n                if (now.week() !== this.week()) {\n                    return '[下]dddLT';\n                } else {\n                    return '[本]dddLT';\n                }\n            },\n            lastDay: '[昨天]LT',\n            lastWeek: function (now) {\n                if (this.week() !== now.week()) {\n                    return '[上]dddLT';\n                } else {\n                    return '[本]dddLT';\n                }\n            },\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '周';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s后',\n            past: '%s前',\n            s: '几秒',\n            ss: '%d 秒',\n            m: '1 分钟',\n            mm: '%d 分钟',\n            h: '1 小时',\n            hh: '%d 小时',\n            d: '1 天',\n            dd: '%d 天',\n            w: '1 周',\n            ww: '%d 周',\n            M: '1 个月',\n            MM: '%d 个月',\n            y: '1 年',\n            yy: '%d 年',\n        },\n        week: {\n            // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n            dow: 1, // Monday is the first day of the week.\n            doy: 4, // The week that contains Jan 4th is the first week of the year.\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-hk', {\n        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(\n            '_'\n        ),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日 HH:mm',\n            LLLL: 'YYYY年M月D日dddd HH:mm',\n            l: 'YYYY/M/D',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日dddd HH:mm',\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1200) {\n                return '上午';\n            } else if (hm === 1200) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar: {\n            sameDay: '[今天]LT',\n            nextDay: '[明天]LT',\n            nextWeek: '[下]ddddLT',\n            lastDay: '[昨天]LT',\n            lastWeek: '[上]ddddLT',\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '週';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s後',\n            past: '%s前',\n            s: '幾秒',\n            ss: '%d 秒',\n            m: '1 分鐘',\n            mm: '%d 分鐘',\n            h: '1 小時',\n            hh: '%d 小時',\n            d: '1 天',\n            dd: '%d 天',\n            M: '1 個月',\n            MM: '%d 個月',\n            y: '1 年',\n            yy: '%d 年',\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-mo', {\n        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(\n            '_'\n        ),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'DD/MM/YYYY',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日 HH:mm',\n            LLLL: 'YYYY年M月D日dddd HH:mm',\n            l: 'D/M/YYYY',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日dddd HH:mm',\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar: {\n            sameDay: '[今天] LT',\n            nextDay: '[明天] LT',\n            nextWeek: '[下]dddd LT',\n            lastDay: '[昨天] LT',\n            lastWeek: '[上]dddd LT',\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '週';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s內',\n            past: '%s前',\n            s: '幾秒',\n            ss: '%d 秒',\n            m: '1 分鐘',\n            mm: '%d 分鐘',\n            h: '1 小時',\n            hh: '%d 小時',\n            d: '1 天',\n            dd: '%d 天',\n            M: '1 個月',\n            MM: '%d 個月',\n            y: '1 年',\n            yy: '%d 年',\n        },\n    });\n\n    //! moment.js locale configuration\n\n    hooks.defineLocale('zh-tw', {\n        months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split(\n            '_'\n        ),\n        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n            '_'\n        ),\n        weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n        weekdaysShort: '週日_週一_週二_週三_週四_週五_週六'.split('_'),\n        weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n        longDateFormat: {\n            LT: 'HH:mm',\n            LTS: 'HH:mm:ss',\n            L: 'YYYY/MM/DD',\n            LL: 'YYYY年M月D日',\n            LLL: 'YYYY年M月D日 HH:mm',\n            LLLL: 'YYYY年M月D日dddd HH:mm',\n            l: 'YYYY/M/D',\n            ll: 'YYYY年M月D日',\n            lll: 'YYYY年M月D日 HH:mm',\n            llll: 'YYYY年M月D日dddd HH:mm',\n        },\n        meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n        meridiemHour: function (hour, meridiem) {\n            if (hour === 12) {\n                hour = 0;\n            }\n            if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n                return hour;\n            } else if (meridiem === '中午') {\n                return hour >= 11 ? hour : hour + 12;\n            } else if (meridiem === '下午' || meridiem === '晚上') {\n                return hour + 12;\n            }\n        },\n        meridiem: function (hour, minute, isLower) {\n            var hm = hour * 100 + minute;\n            if (hm < 600) {\n                return '凌晨';\n            } else if (hm < 900) {\n                return '早上';\n            } else if (hm < 1130) {\n                return '上午';\n            } else if (hm < 1230) {\n                return '中午';\n            } else if (hm < 1800) {\n                return '下午';\n            } else {\n                return '晚上';\n            }\n        },\n        calendar: {\n            sameDay: '[今天] LT',\n            nextDay: '[明天] LT',\n            nextWeek: '[下]dddd LT',\n            lastDay: '[昨天] LT',\n            lastWeek: '[上]dddd LT',\n            sameElse: 'L',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(日|月|週)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '日';\n                case 'M':\n                    return number + '月';\n                case 'w':\n                case 'W':\n                    return number + '週';\n                default:\n                    return number;\n            }\n        },\n        relativeTime: {\n            future: '%s後',\n            past: '%s前',\n            s: '幾秒',\n            ss: '%d 秒',\n            m: '1 分鐘',\n            mm: '%d 分鐘',\n            h: '1 小時',\n            hh: '%d 小時',\n            d: '1 天',\n            dd: '%d 天',\n            M: '1 個月',\n            MM: '%d 個月',\n            y: '1 年',\n            yy: '%d 年',\n        },\n    });\n\n    hooks.locale('en');\n\n    return hooks;\n\n})));\n","// NOTE(lexisother): I really don't want to do this but I'm really left no choice.\n//  Dynamic imports are apparently not an option. So we'll have to settle with\n//  quadrupling (64kB~ -> 300kB~) our result bundle size just for some stupid locale support.\nimport moment from 'moment/min/moment-with-locales';\n\nwindow.moment = moment\n\nexport default {};\n\nexport const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nexport const prefixes = ['First', 'Second', 'Third', 'Fourth', 'Last'];\n\nexport const setLocale = (locale) => {\n    moment.locale(locale);\n}\n\nexport const getDayName = (date) => {\n    const d = new Date(date);\n    return days[d.getDay()];\n};\n\nexport const getLocalizedDayName = (mom) => {\n    return mom.format('dddd');\n};\nexport const weekOfMonth = (date) => {\n    const m = moment(date);\n    let w = m.isoWeekday(7).week() - moment(m).startOf('month').isoWeekday(7).week() - 1;\n\n    if (w < 0) {\n        w = prefixes.length - 1;\n    }\n    return w;\n}\n\nexport const getLocalizeMoment = (dateString) => {\n    if (dateString instanceof moment) {\n        return dateString;\n    }\n    const currentLocaleData = moment.localeData();\n    const localeFormat = currentLocaleData._longDateFormat.L;\n\n    return moment(dateString, [localeFormat, 'MM-DD-YYYY', 'DD-MM-YYYY'])\n}\n\nexport const weekIndex = (dateString) => {\n    const date = getLocalizeMoment(dateString);\n    const offsetDate = moment(date).date() - 1;\n    const index = 1; // start index at 0 or 1, your choice\n    const week = index + Math.floor(offsetDate / 7);\n    \n    return week;\n}\n\nexport const weekAndDay = (dateString) => {\n    const date = getLocalizeMoment(dateString);\n    const week = weekIndex(date);\n    const day = date.format('dddd');\n    \n    if (week === 1) {\n        return `First ${day}`;\n    }\n\n    const isLastWeek = weekIndex(moment(date).add(1, 'week')) < week ? true : false;\n    if (isLastWeek) {\n        return `Last ${day}`;\n    }\n\n    return `${week}${nth(week)} ${day}`;\n}\n\nexport const nth = (d) => {\n    if (d > 3 && d < 21) return 'th';\n    switch (d % 10) {\n        case 1: return \"st\";\n        case 2: return \"nd\";\n        case 3: return \"rd\";\n        default: return \"th\";\n    }\n}\n\nexport const getDateDay = (value) => {\n    const currentLocaleData = moment.localeData();\n    const localeFormat = currentLocaleData._longDateFormat.L;\n    const mdate = moment(value, localeFormat);\n    const d = mdate.date();\n    const e = mdate.format('Do');\n\n    return `${e}`;\n};","import {\n    weekAndDay,\n    getDateDay\n} from '../util/helpers';\n\nexport default {};\nexport function onInit(context) {\n    context.querySelectorAll('[data-monthly-select]').forEach((node) => {\n        const selector = node.getAttribute('data-monthly-select');\n        const dateField = context.querySelector(`#${selector}`);\n        const select = node.querySelector('select');\n\n        dateField.addEventListener('custom', (e) => {\n            const dateValue = dateField.value;\n            const optOneValue = getDateDay(dateValue);\n            const optTwoValue = weekAndDay(dateValue);\n\n            select.querySelectorAll('option')[0].innerHTML = optOneValue;\n            select.querySelectorAll('option')[1].innerHTML = optTwoValue;\n        });\n    });\n}","\nexport const createObserver = (cb) => {\n    const mutationObserver = new MutationObserver(function (mutations) {\n        mutations.forEach((mutation) => {\n            cb(mutation);\n        });\n    });\n\n    return mutationObserver;\n}","import { createObserver } from '../util/create-observer';\n\nexport default {};\nexport function onInit(context) {\n    context.querySelectorAll('[data-toggle-listener]').forEach((node) => {\n        let oldValue = node.getAttribute('aria-checked');\n        const checkbox = node.querySelector('input[type=\"hidden\"]');\n        const observer = createObserver((mutation) => {\n            if (mutation.type === 'attributes') {\n                const newValue = node.getAttribute('aria-checked');\n                if (newValue !== oldValue) {\n                    // fireevent\n                    checkbox.value = newValue === 'false' ? 0 : 1;\n                    checkbox.dispatchEvent(new Event('change'));\n                    oldValue = newValue;\n                }\n            }\n        });\n        observer.observe(node, {\n            attributes: true\n        });\n    });\n}","import { getLocalizeMoment, getLocalizedDayName } from '../util/helpers';\n\n// helper method\nconst removeChild = (item, child) => {\n    item.removeChild(child);\n};\n\nclass CalendarException {\n    constructor(node, attr, withTime = false) {\n        this.node = node;\n        this.withTime = withTime;\n\n        // dom setup\n        this.dateField = node.querySelector('.hasDatepicker');\n        this.hiddenName = this.dateField.getAttribute('name');\n        this.dateField.removeAttribute('name');\n        node.querySelector('input[type=\"hidden\"]').removeAttribute('name');\n\n        this.listing = node.querySelector('.exceptions-list');\n        this.listingItems = this.listing.querySelectorAll('li');\n\n        if (withTime) {\n            this.timeField = node.querySelector('.ui-timepicker-input');\n            this.trigger = node.querySelector('[data-trigger]');\n            \n            const datetimewrapper = node.querySelector('.datetimewrapper');\n            datetimewrapper.querySelectorAll('input').forEach(node => node.removeAttribute('name'));\n\n            this.addEventListener(this.trigger, 'click');\n        } else {\n            this.addEventListener(this.dateField, 'custom');\n        }\n\n        if (this.listingItems.length) {\n            this.listingItems.forEach((item) => {\n                const close = item.querySelector('[data-icon]');\n                close.addEventListener('click', () => {\n                    removeChild(this.listing, item);\n                })\n            })\n        }\n    }\n\n    addEventListener(node, action = 'click') {\n        node.addEventListener(action, (e) => {\n            const li = document.createElement('li');\n            const p = document.createElement('p');\n            const length = this.listing.querySelectorAll('li').length;\n\n            // remove icon\n            const close = document.createElement('div');\n            close.setAttribute('data-icon', 'remove');\n            close.addEventListener('click', () => {\n                removeChild(this.listing, li);\n            });\n\n            // create base inputs\n            const localizedMoment = getLocalizeMoment(this.dateField.value);\n            let newValue = localizedMoment.format('L');\n\n            const name = this.hiddenName;\n            const position = name.lastIndexOf('[date]');\n            const newFieldName = [name.slice(0, position), `[${length || 0}]`, name.slice(position)].join('');\n\n            const hidden = this.createInput(newFieldName, 'hidden', newValue);\n\n            const newPosition = newFieldName.lastIndexOf('[date]');\n            const timezone = this.createInput(newFieldName.substring(0, newPosition) + '[timezone]', 'hidden', Craft.timezone);\n\n            p.innerHTML = getLocalizedDayName(localizedMoment) + ', ' + localizedMoment.format('L');\n\n            li.appendChild(close);\n            li.appendChild(hidden);\n            li.appendChild(timezone);\n\n            this.dateField.value = '';\n\n            // add time input\n            if (this.withTime) {\n                const newTimeValue = this.timeField.value;\n                const hiddenTime = this.createInput(newFieldName.replace('date', 'time'), 'hidden', newTimeValue);\n                p.innerHTML += ' ' + newTimeValue;\n                li.appendChild(hiddenTime);\n                this.timeField.value = '';\n            }\n\n            li.appendChild(p);\n\n            this.listing.appendChild(li);\n        })\n    }\n\n    createInput(name, type, value) {\n        const input = document.createElement('input');\n        input.setAttribute('type', type);\n        input.setAttribute('name', name);\n        input.value = value;\n\n        return input;\n    }\n}\n\nexport function dateExceptionInit(context) {\n    context.querySelectorAll('[data-exceptions]').forEach((node) => new CalendarException(node, 'data-exceptions'));\n}\n\nexport function timeExceptionInit(context) {\n    context.querySelectorAll('[data-time-exceptions]').forEach((node) => new CalendarException(node, 'data-time-exceptions', true));\n}","import \"@/scss/app.scss\";\n\nimport { onInit as IfInit } from './modules/if';\nimport { onInit as MonthSelectInit } from './modules/month-select';\nimport { onInit as ListSwitchInit } from './modules/light-switch';\nimport { dateExceptionInit, timeExceptionInit } from './modules/exceptions';\nimport { setLocale as momentSetLocale } from './util/helpers';\n\nclass Calendarize {\n    constructor(namespaceId, locale) {\n        const context = document.getElementById(`${namespaceId}-field`);\n        this.context = context;\n\n        Calendarize.setLocale(locale);\n\n        ListSwitchInit(context);\n        IfInit(context);\n        MonthSelectInit(context);\n        \n        dateExceptionInit(context);\n        timeExceptionInit(context);\n    }\n\n    static setLocale(locale) {\n        this.locale = locale;\n        momentSetLocale(this.locale);\n    }\n\n    static getLocale() {\n        return this.locale;\n    }\n}\n\n;(function(window) {\n    window.Calendarize = Calendarize;\n})(window);"],"x_google_ignoreList":[1],"mappings":"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"}